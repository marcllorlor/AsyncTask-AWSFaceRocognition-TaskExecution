<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Rekognition</name>
    </assembly>
    <members>
        <member name="T:Amazon.Rekognition.AmazonRekognitionConfig">
            <summary>
            Configuration for accessing Amazon Rekognition service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon Rekognition service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            Rekognition
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Endpoints.RekognitionEndpointParameters">
            <summary>
            Contains parameters used for resolving Rekognition endpoints
            Parameters can be sourced from client config and service operations
            Used by internal RekognitionEndpointProvider and RekognitionEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Endpoints.RekognitionEndpointParameters.#ctor">
            <summary>
            RekognitionEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Endpoints.RekognitionEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Endpoints.RekognitionEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Endpoints.RekognitionEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Endpoints.RekognitionEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionException">
            <summary>
             Common exception for the Rekognition service.
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Internal.AmazonRekognitionEndpointProvider">
            <summary>
            Amazon Rekognition endpoint provider.
            Resolves endpoint for given set of RekognitionEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Internal.AmazonRekognitionEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for RekognitionEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Internal.AmazonRekognitionEndpointResolver">
            <summary>
            Amazon Rekognition endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for Rekognition service requests.
            Collects values for RekognitionEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses RekognitionEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Internal.AmazonRekognitionMetadata">
            <summary>
            Service metadata for  Amazon Rekognition service
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Internal.AmazonRekognitionMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Internal.AmazonRekognitionMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.AccessDeniedException">
            <summary>
            You are not authorized to perform the action.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.AgeRange">
            <summary>
            Structure containing the estimated age range, in years, for a face.
            
             
            <para>
            Amazon Rekognition estimates an age range for faces detected in the input image. Estimated
            age ranges can overlap. A face of a 5-year-old might have an estimated range of 4-6,
            while the face of a 6-year-old might have an estimated range of 4-8.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AgeRange.High">
            <summary>
            Gets and sets the property High. 
            <para>
            The highest estimated age.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AgeRange.Low">
            <summary>
            Gets and sets the property Low. 
            <para>
            The lowest estimated age.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Asset">
            <summary>
            Assets are the images that you use to train and evaluate a model version. Assets can
            also contain validation information that you use to debug a failed model training.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Asset.GroundTruthManifest">
            <summary>
            Gets and sets the property GroundTruthManifest.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.AudioMetadata">
            <summary>
            Metadata information about an audio stream. An array of <code>AudioMetadata</code>
            objects for the audio streams found in a stored video is returned by <a>GetSegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AudioMetadata.Codec">
            <summary>
            Gets and sets the property Codec. 
            <para>
            The audio codec used to encode or decode the audio stream. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AudioMetadata.DurationMillis">
            <summary>
            Gets and sets the property DurationMillis. 
            <para>
            The duration of the audio stream in milliseconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AudioMetadata.NumberOfChannels">
            <summary>
            Gets and sets the property NumberOfChannels. 
            <para>
            The number of audio channels in the segment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AudioMetadata.SampleRate">
            <summary>
            Gets and sets the property SampleRate. 
            <para>
            The sample rate for the audio stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Beard">
            <summary>
            Indicates whether or not the face has a beard, and the confidence level in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Beard.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Beard.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face has beard or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.BlackFrame">
            <summary>
            A filter that allows you to control the black frame detection by specifying the black
            levels and pixel coverage of black pixels in a frame. As videos can come from multiple
            sources, formats, and time periods, they may contain different standards and varying
            noise levels for black frames that need to be accounted for. For more information,
            see <a>StartSegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BlackFrame.MaxPixelThreshold">
            <summary>
            Gets and sets the property MaxPixelThreshold. 
            <para>
             A threshold used to determine the maximum luminance value for a pixel to be considered
            black. In a full color range video, luminance values range from 0-255. A pixel value
            of 0 is pure black, and the most strict filter. The maximum black pixel value is computed
            as follows: max_black_pixel_value = minimum_luminance + MaxPixelThreshold *luminance_range.
            
            </para>
             
            <para>
            For example, for a full range video with BlackPixelThreshold = 0.1, max_black_pixel_value
            is 0 + 0.1 * (255-0) = 25.5.
            </para>
             
            <para>
            The default value of MaxPixelThreshold is 0.2, which maps to a max_black_pixel_value
            of 51 for a full range video. You can lower this threshold to be more strict on black
            levels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BlackFrame.MinCoveragePercentage">
            <summary>
            Gets and sets the property MinCoveragePercentage. 
            <para>
             The minimum percentage of pixels in a frame that need to have a luminance below the
            max_black_pixel_value for a frame to be considered a black frame. Luminance is calculated
            using the BT.709 matrix. 
            </para>
             
            <para>
            The default value is 99, which means at least 99% of all pixels in the frame are black
            pixels as per the <code>MaxPixelThreshold</code> set. You can reduce this value to
            allow more noise on the black frame.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.BoundingBox">
            <summary>
            Identifies the bounding box around the label, face, text, object of interest, or personal
            protective equipment. The <code>left</code> (x-coordinate) and <code>top</code> (y-coordinate)
            are coordinates representing the top and left sides of the bounding box. Note that
            the upper-left corner of the image is the origin (0,0). 
            
             
            <para>
            The <code>top</code> and <code>left</code> values returned are ratios of the overall
            image size. For example, if the input image is 700x200 pixels, and the top-left coordinate
            of the bounding box is 350x50 pixels, the API returns a <code>left</code> value of
            0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).
            </para>
             
            <para>
            The <code>width</code> and <code>height</code> values represent the dimensions of
            the bounding box as a ratio of the overall image dimension. For example, if the input
            image is 700x200 pixels, and the bounding box width is 70 pixels, the width returned
            is 0.1. 
            </para>
             <note> 
            <para>
             The bounding box coordinates can have negative values. For example, if Amazon Rekognition
            is able to detect a face that is at the image edge and is only partially visible,
            the service can return coordinates that are outside the image bounds and, depending
            on the image edge, you might get negative values or values greater than 1 for the
            <code>left</code> or <code>top</code> values. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Height">
            <summary>
            Gets and sets the property Height. 
            <para>
            Height of the bounding box as a ratio of the overall image height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Left">
            <summary>
            Gets and sets the property Left. 
            <para>
            Left coordinate of the bounding box as a ratio of overall image width.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Top">
            <summary>
            Gets and sets the property Top. 
            <para>
            Top coordinate of the bounding box as a ratio of overall image height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Width">
            <summary>
            Gets and sets the property Width. 
            <para>
            Width of the bounding box as a ratio of the overall image width.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Celebrity">
            <summary>
            Provides information about a celebrity recognized by the <a>RecognizeCelebrities</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Provides information about the celebrity's face, such as its location on the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A unique identifier for the celebrity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.KnownGender">
            <summary>
            Gets and sets the property KnownGender.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.MatchConfidence">
            <summary>
            Gets and sets the property MatchConfidence. 
            <para>
            The confidence, in percentage, that Amazon Rekognition has that the recognized face
            is the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Urls">
            <summary>
            Gets and sets the property Urls. 
            <para>
            An array of URLs pointing to additional information about the celebrity. If there
            is no additional information about the celebrity, this list is empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CelebrityDetail">
            <summary>
            Information about a recognized celebrity.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box around the body of a celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence, in percentage, that Amazon Rekognition has that the recognized face
            is the celebrity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Face details for the recognized celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for the celebrity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.KnownGender">
            <summary>
            Gets and sets the property KnownGender. 
            <para>
            Retrieves the known gender for the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Urls">
            <summary>
            Gets and sets the property Urls. 
            <para>
            An array of URLs pointing to additional celebrity information. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CelebrityRecognition">
            <summary>
            Information about a detected celebrity and the time the celebrity was detected in
            a stored video. For more information, see GetCelebrityRecognition in the Amazon Rekognition
            Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityRecognition.Celebrity">
            <summary>
            Gets and sets the property Celebrity. 
            <para>
            Information about a recognized celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityRecognition.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the start of the video, that the celebrity was recognized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ComparedFace">
            <summary>
            Provides face metadata for target image faces that are analyzed by <code>CompareFaces</code>
            and <code>RecognizeCelebrities</code>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence that what the bounding box contains is a face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Emotions">
            <summary>
            Gets and sets the property Emotions. 
            <para>
             The emotions that appear to be expressed on the face, and the confidence level in
            the determination. Valid values include "Happy", "Sad", "Angry", "Confused", "Disgusted",
            "Surprised", "Calm", "Unknown", and "Fear". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Landmarks">
            <summary>
            Gets and sets the property Landmarks. 
            <para>
            An array of facial landmarks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Pose">
            <summary>
            Gets and sets the property Pose. 
            <para>
            Indicates the pose of the face as determined by its pitch, roll, and yaw.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Quality">
            <summary>
            Gets and sets the property Quality. 
            <para>
            Identifies face image brightness and sharpness. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Smile">
            <summary>
            Gets and sets the property Smile. 
            <para>
             Indicates whether or not the face is smiling, and the confidence level in the determination.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ComparedSourceImageFace">
            <summary>
            Type that describes the face Amazon Rekognition chose to compare with the faces in
            the target. This contains a bounding box for the selected face and confidence level
            that the bounding box contains a face. Note that Amazon Rekognition selects the largest
            face in the source image for this comparison.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedSourceImageFace.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedSourceImageFace.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Confidence level that the selected bounding box contains a face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CompareFacesMatch">
            <summary>
            Provides information about a face in a target image that matches the source image
            face analyzed by <code>CompareFaces</code>. The <code>Face</code> property contains
            the bounding box of the face in the target image. The <code>Similarity</code> property
            is the confidence that the source image face matches the face in the bounding box.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesMatch.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Provides face metadata (bounding box and confidence that the bounding box actually
            contains a face).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesMatch.Similarity">
            <summary>
            Gets and sets the property Similarity. 
            <para>
            Level of confidence that the faces match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CompareFacesRequest">
            <summary>
            Container for the parameters to the CompareFaces operation.
            Compares a face in the <i>source</i> input image with each of the 100 largest faces
            detected in the <i>target</i> input image. 
            
             
            <para>
             If the source image contains multiple faces, the service detects the largest face
            and compares it with each face detected in the target image. 
            </para>
             <note> 
            <para>
            CompareFaces uses machine learning algorithms, which are probabilistic. A false negative
            is an incorrect prediction that a face in the target image has a low similarity confidence
            score when compared to the face in the source image. To reduce the probability of
            false negatives, we recommend that you compare the target image against multiple source
            images. If you plan to use <code>CompareFaces</code> to make a decision that impacts
            an individual's rights, privacy, or access to services, we recommend that you pass
            the result to a human for review and further validation before taking action.
            </para>
             </note> 
            <para>
            You pass the input and target images either as base64-encoded image bytes or as references
            to images in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes isn't supported. The image must be formatted as a
            PNG or JPEG file. 
            </para>
             
            <para>
            In response, the operation returns an array of face matches ordered by similarity
            score in descending order. For each face match, the response provides a bounding box
            of the face, facial landmarks, pose details (pitch, roll, and yaw), quality (brightness
            and sharpness), and confidence value (indicating the level of confidence that the
            bounding box contains a face). The response also provides a similarity score, which
            indicates how closely the faces match. 
            </para>
             <note> 
            <para>
            By default, only faces with a similarity score of greater than or equal to 80% are
            returned in the response. You can change this value by specifying the <code>SimilarityThreshold</code>
            parameter.
            </para>
             </note> 
            <para>
             <code>CompareFaces</code> also returns an array of faces that don't match the source
            image. For each face, it returns a bounding box, confidence value, landmarks, pose
            details, and quality. The response also returns information about the face in the
            source image, including the bounding box of the face and confidence value.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. Use <code>QualityFilter</code> to set the quality bar by specifying <code>LOW</code>,
            <code>MEDIUM</code>, or <code>HIGH</code>. If you do not want to filter detected faces,
            specify <code>NONE</code>. The default value is <code>NONE</code>. 
            </para>
             
            <para>
            If the image doesn't contain Exif metadata, <code>CompareFaces</code> returns orientation
            information for the source and target images. Use these values to display the images
            with the correct image orientation.
            </para>
             
            <para>
            If no faces are detected in the source or target images, <code>CompareFaces</code>
            returns an <code>InvalidParameterException</code> error. 
            </para>
             <note> 
            <para>
             This is a stateless API operation. That is, data returned by this operation doesn't
            persist.
            </para>
             </note> 
            <para>
            For an example, see Comparing Faces in Images in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CompareFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.QualityFilter">
            <summary>
            Gets and sets the property QualityFilter. 
            <para>
            A filter that specifies a quality bar for how much filtering is done to identify faces.
            Filtered faces aren't compared. If you specify <code>AUTO</code>, Amazon Rekognition
            chooses the quality bar. If you specify <code>LOW</code>, <code>MEDIUM</code>, or
            <code>HIGH</code>, filtering removes all faces that don’t meet the chosen quality
            bar. The quality bar is based on a variety of common use cases. Low-quality detections
            can occur for a number of reasons. Some examples are an object that's misidentified
            as a face, a face that's too blurry, or a face with a pose that's too extreme to use.
            If you specify <code>NONE</code>, no filtering is performed. The default value is
            <code>NONE</code>. 
            </para>
             
            <para>
            To use quality filtering, the collection you are using must be associated with version
            3 of the face model or higher.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.SimilarityThreshold">
            <summary>
            Gets and sets the property SimilarityThreshold. 
            <para>
            The minimum level of confidence in the face matches that a match must meet to be included
            in the <code>FaceMatches</code> array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.SourceImage">
            <summary>
            Gets and sets the property SourceImage. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.TargetImage">
            <summary>
            Gets and sets the property TargetImage. 
            <para>
            The target image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CompareFacesResponse">
            <summary>
            This is the response object from the CompareFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code>
            object provides the bounding box, the confidence level that the bounding box contains
            a face, and the similarity score for the face in the bounding box and the face in
            the source image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.SourceImageFace">
            <summary>
            Gets and sets the property SourceImageFace. 
            <para>
            The face in the source image that was used for comparison.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.SourceImageOrientationCorrection">
            <summary>
            Gets and sets the property SourceImageOrientationCorrection. 
            <para>
            The value of <code>SourceImageOrientationCorrection</code> is always null.
            </para>
             
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image file format
            (Exif) metadata that includes the image's orientation. Amazon Rekognition uses this
            orientation information to perform image correction. The bounding box coordinates
            are translated to represent object locations after the orientation information in
            the Exif metadata is used to correct the image orientation. Images in .png format
            don't contain Exif metadata.
            </para>
             
            <para>
            Amazon Rekognition doesn’t perform image correction for images in .png format and
            .jpeg images without orientation information in the image Exif metadata. The bounding
            box coordinates aren't translated and represent the object locations before the image
            is rotated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.TargetImageOrientationCorrection">
            <summary>
            Gets and sets the property TargetImageOrientationCorrection. 
            <para>
            The value of <code>TargetImageOrientationCorrection</code> is always null.
            </para>
             
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image file format
            (Exif) metadata that includes the image's orientation. Amazon Rekognition uses this
            orientation information to perform image correction. The bounding box coordinates
            are translated to represent object locations after the orientation information in
            the Exif metadata is used to correct the image orientation. Images in .png format
            don't contain Exif metadata.
            </para>
             
            <para>
            Amazon Rekognition doesn’t perform image correction for images in .png format and
            .jpeg images without orientation information in the image Exif metadata. The bounding
            box coordinates aren't translated and represent the object locations before the image
            is rotated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.UnmatchedFaces">
            <summary>
            Gets and sets the property UnmatchedFaces. 
            <para>
            An array of faces in the target image that did not match the source image face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ConnectedHomeSettings">
            <summary>
            Label detection settings to use on a streaming video. Defining the settings is required
            in the request parameter for <a>CreateStreamProcessor</a>. Including this setting
            in the <code>CreateStreamProcessor</code> request enables you to use the stream processor
            for label detection. You can then select what you want the stream processor to detect,
            such as people or pets. When the stream processor has started, one notification is
            sent for each object class specified. For example, if packages and pets are selected,
            one SNS notification is published the first time a package is detected and one SNS
            notification is published the first time a pet is detected, as well as an end-of-session
            summary.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ConnectedHomeSettings.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
             Specifies what you want to detect in the video, such as people, packages, or pets.
            The current valid labels you can include in this list are: "PERSON", "PET", "PACKAGE",
            and "ALL". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ConnectedHomeSettings.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
             The minimum confidence required to label an object in the video. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ConnectedHomeSettingsForUpdate">
            <summary>
            The label detection settings you want to use in your stream processor. This includes
            the labels you want the stream processor to detect and the minimum confidence level
            allowed to label objects.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ConnectedHomeSettingsForUpdate.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
             Specifies what you want to detect in the video, such as people, packages, or pets.
            The current valid labels you can include in this list are: "PERSON", "PET", "PACKAGE",
            and "ALL". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ConnectedHomeSettingsForUpdate.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
             The minimum confidence required to label an object in the video. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ContentModerationDetection">
            <summary>
            Information about an inappropriate, unwanted, or offensive content label detection
            in a stored video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ContentModerationDetection.ModerationLabel">
            <summary>
            Gets and sets the property ModerationLabel. 
            <para>
            The content moderation label detected by in the stored video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ContentModerationDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time, in milliseconds from the beginning of the video, that the content moderation
            label was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CopyProjectVersionRequest">
            <summary>
            Container for the parameters to the CopyProjectVersion operation.
            Copies a version of an Amazon Rekognition Custom Labels model from a source project
            to a destination project. The source and destination projects can be in different
            AWS accounts but must be in the same AWS Region. You can't copy a model to another
            AWS service. 
            
             
            <para>
            To copy a model version to a different AWS account, you need to create a resource-based
            policy known as a <i>project policy</i>. You attach the project policy to the source
            project by calling <a>PutProjectPolicy</a>. The project policy gives permission to
            copy the model version from a trusting AWS account to a trusted account.
            </para>
             
            <para>
            For more information creating and attaching a project policy, see Attaching a project
            policy (SDK) in the <i>Amazon Rekognition Custom Labels Developer Guide</i>. 
            </para>
             
            <para>
            If you are copying a model version to a project in the same AWS account, you don't
            need to create a project policy.
            </para>
             <note> 
            <para>
            To copy a model, the destination project, source project, and source model version
            must already exist.
            </para>
             </note> 
            <para>
            Copying a model version takes a while to complete. To get the current status, call
            <a>DescribeProjectVersions</a> and check the value of <code>Status</code> in the <a>ProjectVersionDescription</a>
            object. The copy operation has finished when the value of <code>Status</code> is <code>COPYING_COMPLETED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.DestinationProjectArn">
            <summary>
            Gets and sets the property DestinationProjectArn. 
            <para>
            The ARN of the project in the trusted AWS account that you want to copy the model
            version to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The identifier for your AWS Key Management Service key (AWS KMS key). You can supply
            the Amazon Resource Name (ARN) of your KMS key, the ID of your KMS key, an alias for
            your KMS key, or an alias ARN. The key is used to encrypt training results and manifest
            files written to the output Amazon S3 bucket (<code>OutputConfig</code>).
            </para>
             
            <para>
            If you choose to use your own KMS key, you need the following permissions on the KMS
            key.
            </para>
             <ul> <li> 
            <para>
            kms:CreateGrant
            </para>
             </li> <li> 
            <para>
            kms:DescribeKey
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey
            </para>
             </li> <li> 
            <para>
            kms:Decrypt
            </para>
             </li> </ul> 
            <para>
            If you don't specify a value for <code>KmsKeyId</code>, images copied into the service
            are encrypted using a key that AWS owns and manages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            The S3 bucket and folder location where the training output for the source model version
            is placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.SourceProjectArn">
            <summary>
            Gets and sets the property SourceProjectArn. 
            <para>
            The ARN of the source project in the trusting AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.SourceProjectVersionArn">
            <summary>
            Gets and sets the property SourceProjectVersionArn. 
            <para>
            The ARN of the model version in the source project that you want to copy to a destination
            project.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value tags to assign to the model version. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionRequest.VersionName">
            <summary>
            Gets and sets the property VersionName. 
            <para>
            A name for the version of the model that's copied to the destination project.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CopyProjectVersionResponse">
            <summary>
            This is the response object from the CopyProjectVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CopyProjectVersionResponse.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The ARN of the copied model version in the destination project. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CoversBodyPart">
            <summary>
            Information about an item of Personal Protective Equipment covering a corresponding
            body part. For more information, see <a>DetectProtectiveEquipment</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CoversBodyPart.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has in the value of <code>Value</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CoversBodyPart.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            True if the PPE covers the corresponding body part, otherwise false.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateCollectionRequest">
            <summary>
            Container for the parameters to the CreateCollection operation.
            Creates a collection in an AWS Region. You can add faces to the collection using the
            <a>IndexFaces</a> operation. 
            
             
            <para>
            For example, you might create collections, one for each of your application users.
            A user can then index faces using the <code>IndexFaces</code> operation and persist
            results in a specific collection. Then, a user can search the collection for faces
            in the user-specific container. 
            </para>
             
            <para>
            When you create a collection, it is associated with the latest version of the face
            model version.
            </para>
             <note> 
            <para>
            Collection names are case-sensitive.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateCollection</code>
            action. If you want to tag your collection, you also require permission to perform
            the <code>rekognition:TagResource</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID for the collection that you are creating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             A set of tags (key-value pairs) that you want to attach to the collection. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateCollectionResponse">
            <summary>
            This is the response object from the CreateCollection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionResponse.CollectionArn">
            <summary>
            Gets and sets the property CollectionArn. 
            <para>
            Amazon Resource Name (ARN) of the collection. You can use this to manage permissions
            on your resources. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the collection you are
            creating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            HTTP status code indicating the result of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateDatasetRequest">
            <summary>
            Container for the parameters to the CreateDataset operation.
            Creates a new Amazon Rekognition Custom Labels dataset. You can create a dataset by
            using an Amazon Sagemaker format manifest file or by copying an existing Amazon Rekognition
            Custom Labels dataset.
            
             
            <para>
            To create a training dataset for a project, specify <code>train</code> for the value
            of <code>DatasetType</code>. To create the test dataset for a project, specify <code>test</code>
            for the value of <code>DatasetType</code>. 
            </para>
             
            <para>
            The response from <code>CreateDataset</code> is the Amazon Resource Name (ARN) for
            the dataset. Creating a dataset takes a while to complete. Use <a>DescribeDataset</a>
            to check the current status. The dataset created successfully if the value of <code>Status</code>
            is <code>CREATE_COMPLETE</code>. 
            </para>
             
            <para>
            To check if any non-terminal errors occurred, call <a>ListDatasetEntries</a> and check
            for the presence of <code>errors</code> lists in the JSON Lines.
            </para>
             
            <para>
            Dataset creation fails if a terminal error occurs (<code>Status</code> = <code>CREATE_FAILED</code>).
            Currently, you can't access the terminal error information. 
            </para>
             
            <para>
            For more information, see Creating dataset in the <i>Amazon Rekognition Custom Labels
            Developer Guide</i>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateDataset</code>
            action. If you want to copy an existing dataset, you also require permission to perform
            the <code>rekognition:ListDatasetEntries</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateDatasetRequest.DatasetSource">
            <summary>
            Gets and sets the property DatasetSource. 
            <para>
             The source files for the dataset. You can specify the ARN of an existing dataset
            or specify the Amazon S3 bucket location of an Amazon Sagemaker format manifest file.
            If you don't specify <code>datasetSource</code>, an empty dataset is created. To add
            labeled images to the dataset, You can use the console or call <a>UpdateDatasetEntries</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateDatasetRequest.DatasetType">
            <summary>
            Gets and sets the property DatasetType. 
            <para>
             The type of the dataset. Specify <code>train</code> to create a training dataset.
            Specify <code>test</code> to create a test dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateDatasetRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
             The ARN of the Amazon Rekognition Custom Labels project to which you want to asssign
            the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateDatasetResponse">
            <summary>
            This is the response object from the CreateDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateDatasetResponse.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The ARN of the created Amazon Rekognition Custom Labels dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateProjectRequest">
            <summary>
            Container for the parameters to the CreateProject operation.
            Creates a new Amazon Rekognition Custom Labels project. A project is a group of resources
            (datasets, model versions) that you use to create and manage Amazon Rekognition Custom
            Labels models. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateProject</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectRequest.ProjectName">
            <summary>
            Gets and sets the property ProjectName. 
            <para>
            The name of the project to create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateProjectResponse">
            <summary>
            This is the response object from the CreateProject operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectResponse.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the new project. You can use the ARN to configure
            IAM access to the project. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateProjectVersionRequest">
            <summary>
            Container for the parameters to the CreateProjectVersion operation.
            Creates a new version of a model and begins training. Models are managed as part of
            an Amazon Rekognition Custom Labels project. The response from <code>CreateProjectVersion</code>
            is an Amazon Resource Name (ARN) for the version of the model. 
            
             
            <para>
            Training uses the training and test datasets associated with the project. For more
            information, see Creating training and test dataset in the <i>Amazon Rekognition Custom
            Labels Developer Guide</i>. 
            </para>
             <note> 
            <para>
            You can train a model in a project that doesn't have associated datasets by specifying
            manifest files in the <code>TrainingData</code> and <code>TestingData</code> fields.
            
            </para>
             
            <para>
            If you open the console after training a model with manifest files, Amazon Rekognition
            Custom Labels creates the datasets for you using the most recent manifest files. You
            can no longer train a model version for the project by specifying manifest files.
            
            </para>
             
            <para>
            Instead of training with a project without associated datasets, we recommend that
            you use the manifest files to create training and test datasets for the project.
            </para>
             </note> 
            <para>
            Training takes a while to complete. You can get the current status by calling <a>DescribeProjectVersions</a>.
            Training completed successfully if the value of the <code>Status</code> field is <code>TRAINING_COMPLETED</code>.
            </para>
             
            <para>
            If training fails, see Debugging a failed model training in the <i>Amazon Rekognition
            Custom Labels</i> developer guide. 
            </para>
             
            <para>
            Once training has successfully completed, call <a>DescribeProjectVersions</a> to get
            the training results and evaluate the model. For more information, see Improving a
            trained Amazon Rekognition Custom Labels model in the <i>Amazon Rekognition Custom
            Labels</i> developers guide. 
            </para>
             
            <para>
            After evaluating the model, you start the model by calling <a>StartProjectVersion</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateProjectVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The identifier for your AWS Key Management Service key (AWS KMS key). You can supply
            the Amazon Resource Name (ARN) of your KMS key, the ID of your KMS key, an alias for
            your KMS key, or an alias ARN. The key is used to encrypt training and test images
            copied into the service for model training. Your source images are unaffected. The
            key is also used to encrypt training results and manifest files written to the output
            Amazon S3 bucket (<code>OutputConfig</code>).
            </para>
             
            <para>
            If you choose to use your own KMS key, you need the following permissions on the KMS
            key.
            </para>
             <ul> <li> 
            <para>
            kms:CreateGrant
            </para>
             </li> <li> 
            <para>
            kms:DescribeKey
            </para>
             </li> <li> 
            <para>
            kms:GenerateDataKey
            </para>
             </li> <li> 
            <para>
            kms:Decrypt
            </para>
             </li> </ul> 
            <para>
            If you don't specify a value for <code>KmsKeyId</code>, images copied into the service
            are encrypted using a key that AWS owns and manages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            The Amazon S3 bucket location to store the results of training. The S3 bucket can
            be in any AWS account as long as the caller has <code>s3:PutObject</code> permissions
            on the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The ARN of the Amazon Rekognition Custom Labels project that manages the model that
            you want to train.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             A set of tags (key-value pairs) that you want to attach to the model. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.TestingData">
            <summary>
            Gets and sets the property TestingData. 
            <para>
            Specifies an external manifest that the service uses to test the model. If you specify
            <code>TestingData</code> you must also specify <code>TrainingData</code>. The project
            must not have any associated datasets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.TrainingData">
            <summary>
            Gets and sets the property TrainingData. 
            <para>
            Specifies an external manifest that the services uses to train the model. If you specify
            <code>TrainingData</code> you must also specify <code>TestingData</code>. The project
            must not have any associated datasets. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionRequest.VersionName">
            <summary>
            Gets and sets the property VersionName. 
            <para>
            A name for the version of the model. This value must be unique.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateProjectVersionResponse">
            <summary>
            This is the response object from the CreateProjectVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateProjectVersionResponse.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The ARN of the model version that was created. Use <code>DescribeProjectVersion</code>
            to get the current status of the training operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateStreamProcessorRequest">
            <summary>
            Container for the parameters to the CreateStreamProcessor operation.
            Creates an Amazon Rekognition stream processor that you can use to detect and recognize
            faces or to detect labels in a streaming video.
            
             
            <para>
            Amazon Rekognition Video is a consumer of live video from Amazon Kinesis Video Streams.
            There are two different settings for stream processors in Amazon Rekognition: detecting
            faces and detecting labels.
            </para>
             <ul> <li> 
            <para>
            If you are creating a stream processor for detecting faces, you provide as input a
            Kinesis video stream (<code>Input</code>) and a Kinesis data stream (<code>Output</code>)
            stream. You also specify the face recognition criteria in <code>Settings</code>. For
            example, the collection containing faces that you want to recognize. After you have
            finished analyzing a streaming video, use <a>StopStreamProcessor</a> to stop processing.
            </para>
             </li> <li> 
            <para>
            If you are creating a stream processor to detect labels, you provide as input a Kinesis
            video stream (<code>Input</code>), Amazon S3 bucket information (<code>Output</code>),
            and an Amazon SNS topic ARN (<code>NotificationChannel</code>). You can also provide
            a KMS key ID to encrypt the data sent to your Amazon S3 bucket. You specify what you
            want to detect in <code>ConnectedHomeSettings</code>, such as people, packages and
            people, or pets, people, and packages. You can also specify where in the frame you
            want Amazon Rekognition to monitor with <code>RegionsOfInterest</code>. When you run
            the <a>StartStreamProcessor</a> operation on a label detection stream processor, you
            input start and stop information to determine the length of the processing time.
            </para>
             </li> </ul> 
            <para>
             Use <code>Name</code> to assign an identifier for the stream processor. You use <code>Name</code>
            to manage the stream processor. For example, you can start processing the source video
            by calling <a>StartStreamProcessor</a> with the <code>Name</code> field. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateStreamProcessor</code>
            action. If you want to tag your stream processor, you also require permission to perform
            the <code>rekognition:TagResource</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.DataSharingPreference">
            <summary>
            Gets and sets the property DataSharingPreference. 
            <para>
             Shows whether you are sharing data with Rekognition to improve model performance.
            You can choose this option at the account level or on a per-stream basis. Note that
            if you opt out at the account level this setting is ignored on individual streams.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Kinesis video stream stream that provides the source streaming video. If you are using
            the AWS CLI, the parameter name is <code>StreamProcessorInput</code>. This is required
            for both face search and label detection stream processors.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
             The identifier for your AWS Key Management Service key (AWS KMS key). This is an
            optional parameter for label detection stream processors and should not be used to
            create a face search stream processor. You can supply the Amazon Resource Name (ARN)
            of your KMS key, the ID of your KMS key, an alias for your KMS key, or an alias ARN.
            The key is used to encrypt results and data published to your Amazon S3 bucket, which
            includes image frames and hero images. Your source images are unaffected. 
            </para>
             
            <para>
             
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            An identifier you assign to the stream processor. You can use <code>Name</code> to
            manage the stream processor. For example, you can get the current status of the stream
            processor by calling <a>DescribeStreamProcessor</a>. <code>Name</code> is idempotent.
            This is required for both face search and label detection stream processors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            Kinesis data stream stream or Amazon S3 bucket location to which Amazon Rekognition
            Video puts the analysis results. If you are using the AWS CLI, the parameter name
            is <code>StreamProcessorOutput</code>. This must be a <a>S3Destination</a> of an Amazon
            S3 bucket that you own for a label detection stream processor or a Kinesis data stream
            ARN for a face search stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.RegionsOfInterest">
            <summary>
            Gets and sets the property RegionsOfInterest. 
            <para>
             Specifies locations in the frames where Amazon Rekognition checks for objects or
            people. You can specify up to 10 regions of interest, and each region has either a
            polygon or a bounding box. This is an optional parameter for label detection stream
            processors and should not be used to create a face search stream processor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Number (ARN) of the IAM role that allows access to the stream
            processor. The IAM role provides Rekognition read permissions for a Kinesis stream.
            It also provides write permissions to an Amazon S3 bucket and Amazon Simple Notification
            Service topic for a label detection stream processor. This is required for both face
            search and label detection stream processors.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            Input parameters used in a streaming video analyzed by a stream processor. You can
            use <code>FaceSearch</code> to recognize faces in a streaming video, or you can use
            <code>ConnectedHome</code> to detect labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             A set of tags (key-value pairs) that you want to attach to the stream processor.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateStreamProcessorResponse">
            <summary>
            This is the response object from the CreateStreamProcessor operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorResponse.StreamProcessorArn">
            <summary>
            Gets and sets the property StreamProcessorArn. 
            <para>
            Amazon Resource Number for the newly created stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CustomLabel">
            <summary>
            A custom label detected in an image by a call to <a>DetectCustomLabels</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CustomLabel.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that the model has in the detection of the custom label. The range
            is 0-100. A higher value indicates a higher confidence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CustomLabel.Geometry">
            <summary>
            Gets and sets the property Geometry. 
            <para>
            The location of the detected object on the image that corresponds to the custom label.
            Includes an axis aligned coarse bounding box surrounding the object and a finer grain
            polygon for more accurate spatial information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CustomLabel.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the custom label.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetChanges">
            <summary>
            Describes updates or additions to a dataset. A Single update or addition is an entry
            (JSON Line) that provides information about a single image. To update an existing
            entry, you match the <code>source-ref</code> field of the update entry with the <code>source-ref</code>
            filed of the entry that you want to update. If the <code>source-ref</code> field doesn't
            match an existing entry, the entry is added to dataset as a new entry.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetChanges.GroundTruth">
            <summary>
            Gets and sets the property GroundTruth. 
            <para>
            A Base64-encoded binary data object containing one or JSON lines that either update
            the dataset or are additions to the dataset. You change a dataset by calling <a>UpdateDatasetEntries</a>.
            If you are using an AWS SDK to call <code>UpdateDatasetEntries</code>, you don't need
            to encode <code>Changes</code> as the SDK encodes the data for you. 
            </para>
             
            <para>
            For example JSON lines, see Image-Level labels in manifest files and and Object localization
            in manifest files in the <i>Amazon Rekognition Custom Labels Developer Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetDescription">
            <summary>
            A description for a dataset. For more information, see <a>DescribeDataset</a>.
            
             
            <para>
            The status fields <code>Status</code>, <code>StatusMessage</code>, and <code>StatusMessageCode</code>
            reflect the last operation on the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetDescription.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
             The Unix timestamp for the time and date that the dataset was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetDescription.DatasetStats">
            <summary>
            Gets and sets the property DatasetStats. 
            <para>
             The status message code for the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetDescription.LastUpdatedTimestamp">
            <summary>
            Gets and sets the property LastUpdatedTimestamp. 
            <para>
             The Unix timestamp for the date and time that the dataset was last updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetDescription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             The status of the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetDescription.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
             The status message for the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetDescription.StatusMessageCode">
            <summary>
            Gets and sets the property StatusMessageCode. 
            <para>
             The status message code for the dataset operation. If a service error occurs, try
            the API call again later. If a client error occurs, check the input parameters to
            the dataset API call that failed. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetLabelDescription">
            <summary>
            Describes a dataset label. For more information, see <a>ListDatasetLabels</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetLabelDescription.LabelName">
            <summary>
            Gets and sets the property LabelName. 
            <para>
             The name of the label. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetLabelDescription.LabelStats">
            <summary>
            Gets and sets the property LabelStats. 
            <para>
             Statistics about the label. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetLabelStats">
            <summary>
            Statistics about a label used in a dataset. For more information, see <a>DatasetLabelDescription</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetLabelStats.BoundingBoxCount">
            <summary>
            Gets and sets the property BoundingBoxCount. 
            <para>
             The total number of images that have the label assigned to a bounding box. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetLabelStats.EntryCount">
            <summary>
            Gets and sets the property EntryCount. 
            <para>
             The total number of images that use the label. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetMetadata">
            <summary>
            Summary information for an Amazon Rekognition Custom Labels dataset. For more information,
            see <a>ProjectDescription</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetMetadata.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
             The Unix timestamp for the date and time that the dataset was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetMetadata.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) for the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetMetadata.DatasetType">
            <summary>
            Gets and sets the property DatasetType. 
            <para>
             The type of the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetMetadata.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             The status for the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetMetadata.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
             The status message for the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetMetadata.StatusMessageCode">
            <summary>
            Gets and sets the property StatusMessageCode. 
            <para>
             The status message code for the dataset operation. If a service error occurs, try
            the API call again later. If a client error occurs, check the input parameters to
            the dataset API call that failed. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetSource">
            <summary>
            The source that Amazon Rekognition Custom Labels uses to create a dataset. To use
            an Amazon Sagemaker format manifest file, specify the S3 bucket location in the <code>GroundTruthManifest</code>
            field. The S3 bucket must be in your AWS account. To create a copy of an existing
            dataset, specify the Amazon Resource Name (ARN) of an existing dataset in <code>DatasetArn</code>.
            
             
            <para>
            You need to specify a value for <code>DatasetArn</code> or <code>GroundTruthManifest</code>,
            but not both. if you supply both values, or if you don't specify any values, an InvalidParameterException
            exception occurs. 
            </para>
             
            <para>
            For more information, see <a>CreateDataset</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetSource.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The ARN of an Amazon Rekognition Custom Labels dataset that you want to copy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetSource.GroundTruthManifest">
            <summary>
            Gets and sets the property GroundTruthManifest.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DatasetStats">
            <summary>
            Provides statistics about a dataset. For more information, see <a>DescribeDataset</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetStats.ErrorEntries">
            <summary>
            Gets and sets the property ErrorEntries. 
            <para>
             The total number of entries that contain at least one error. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetStats.LabeledEntries">
            <summary>
            Gets and sets the property LabeledEntries. 
            <para>
             The total number of images in the dataset that have labels. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetStats.TotalEntries">
            <summary>
            Gets and sets the property TotalEntries. 
            <para>
             The total number of images in the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DatasetStats.TotalLabels">
            <summary>
            Gets and sets the property TotalLabels. 
            <para>
             The total number of labels declared in the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteCollectionRequest">
            <summary>
            Container for the parameters to the DeleteCollection operation.
            Deletes the specified collection. Note that this operation removes all faces in the
            collection. For an example, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/delete-collection-procedure.html">Deleting
            a collection</a>.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteCollection</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteCollectionRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteCollectionResponse">
            <summary>
            This is the response object from the DeleteCollection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteCollectionResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            HTTP status code that indicates the result of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteDatasetRequest">
            <summary>
            Container for the parameters to the DeleteDataset operation.
            Deletes an existing Amazon Rekognition Custom Labels dataset. Deleting a dataset might
            take while. Use <a>DescribeDataset</a> to check the current status. The dataset is
            still deleting if the value of <code>Status</code> is <code>DELETE_IN_PROGRESS</code>.
            If you try to access the dataset after it is deleted, you get a <code>ResourceNotFoundException</code>
            exception. 
            
             
            <para>
            You can't delete a dataset while it is creating (<code>Status</code> = <code>CREATE_IN_PROGRESS</code>)
            or if the dataset is updating (<code>Status</code> = <code>UPDATE_IN_PROGRESS</code>).
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteDataset</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteDatasetRequest.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The ARN of the Amazon Rekognition Custom Labels dataset that you want to delete.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteDatasetResponse">
            <summary>
            This is the response object from the DeleteDataset operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteFacesRequest">
            <summary>
            Container for the parameters to the DeleteFaces operation.
            Deletes faces from a collection. You specify a collection ID and an array of face
            IDs to remove from the collection.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            Collection from which to remove the specific faces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteFacesRequest.FaceIds">
            <summary>
            Gets and sets the property FaceIds. 
            <para>
            An array of face IDs to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteFacesResponse">
            <summary>
            This is the response object from the DeleteFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteFacesResponse.DeletedFaces">
            <summary>
            Gets and sets the property DeletedFaces. 
            <para>
            An array of strings (face IDs) of the faces that were deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteProjectPolicyRequest">
            <summary>
            Container for the parameters to the DeleteProjectPolicy operation.
            Deletes an existing project policy.
            
             
            <para>
            To get a list of project policies attached to a project, call <a>ListProjectPolicies</a>.
            To attach a project policy to a project, call <a>PutProjectPolicy</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectPolicyRequest.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            The ID of the project policy revision that you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectPolicyRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the project that the project policy you want to
            delete is attached to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteProjectPolicyResponse">
            <summary>
            This is the response object from the DeleteProjectPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteProjectRequest">
            <summary>
            Container for the parameters to the DeleteProject operation.
            Deletes an Amazon Rekognition Custom Labels project. To delete a project you must
            first delete all models associated with the project. To delete a model, see <a>DeleteProjectVersion</a>.
            
             
            <para>
             <code>DeleteProject</code> is an asynchronous operation. To check if the project
            is deleted, call <a>DescribeProjects</a>. The project is deleted when the project
            no longer appears in the response. Be aware that deleting a given project will also
            delete any <code>ProjectPolicies</code> associated with that project.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteProject</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the project that you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteProjectResponse">
            <summary>
            This is the response object from the DeleteProject operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the delete project operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteProjectVersionRequest">
            <summary>
            Container for the parameters to the DeleteProjectVersion operation.
            Deletes an Amazon Rekognition Custom Labels model. 
            
             
            <para>
            You can't delete a model if it is running or if it is training. To check the status
            of a model, use the <code>Status</code> field returned from <a>DescribeProjectVersions</a>.
            To stop a running model call <a>StopProjectVersion</a>. If the model is training,
            wait until it finishes.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteProjectVersion</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectVersionRequest.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version that you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteProjectVersionResponse">
            <summary>
            This is the response object from the DeleteProjectVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteProjectVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the deletion operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteStreamProcessorRequest">
            <summary>
            Container for the parameters to the DeleteStreamProcessor operation.
            Deletes the stream processor identified by <code>Name</code>. You assign the value
            for <code>Name</code> when you create the stream processor with <a>CreateStreamProcessor</a>.
            You might not be able to use the same name for a stream processor for a few seconds
            after calling <code>DeleteStreamProcessor</code>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the stream processor you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteStreamProcessorResponse">
            <summary>
            This is the response object from the DeleteStreamProcessor operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeCollectionRequest">
            <summary>
            Container for the parameters to the DescribeCollection operation.
            Describes the specified collection. You can use <code>DescribeCollection</code> to
            get information, such as the number of faces indexed into a collection and the version
            of the model used by the collection for face detection.
            
             
            <para>
            For more information, see Describing a Collection in the Amazon Rekognition Developer
            Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeCollectionRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            The ID of the collection to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeCollectionResponse">
            <summary>
            This is the response object from the DescribeCollection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeCollectionResponse.CollectionARN">
            <summary>
            Gets and sets the property CollectionARN. 
            <para>
            The Amazon Resource Name (ARN) of the collection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeCollectionResponse.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The number of milliseconds since the Unix epoch time until the creation of the collection.
            The Unix epoch time is 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January
            1970.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeCollectionResponse.FaceCount">
            <summary>
            Gets and sets the property FaceCount. 
            <para>
            The number of faces that are indexed into the collection. To index faces into a collection,
            use <a>IndexFaces</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeCollectionResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            The version of the face model that's used by the collection for face detection.
            </para>
             
            <para>
            For more information, see Model versioning in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeDatasetRequest">
            <summary>
            Container for the parameters to the DescribeDataset operation.
            Describes an Amazon Rekognition Custom Labels dataset. You can get information such
            as the current status of a dataset and statistics about the images and labels in a
            dataset. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeDataset</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeDatasetRequest.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset that you want to describe. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeDatasetResponse">
            <summary>
            This is the response object from the DescribeDataset operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeDatasetResponse.DatasetDescription">
            <summary>
            Gets and sets the property DatasetDescription. 
            <para>
             The description for the dataset. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeProjectsRequest">
            <summary>
            Container for the parameters to the DescribeProjects operation.
            Gets information about your Amazon Rekognition Custom Labels projects. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeProjects</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 100. If you specify a value greater than 100, a ValidationException
            error occurs. The default value is 100. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsRequest.ProjectNames">
            <summary>
            Gets and sets the property ProjectNames. 
            <para>
            A list of the projects that you want Amazon Rekognition Custom Labels to describe.
            If you don't specify a value, the response includes descriptions for all the projects
            in your AWS account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeProjectsResponse">
            <summary>
            This is the response object from the DescribeProjects operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsResponse.ProjectDescriptions">
            <summary>
            Gets and sets the property ProjectDescriptions. 
            <para>
            A list of project descriptions. The list is sorted by the date and time the projects
            are created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeProjectVersionsRequest">
            <summary>
            Container for the parameters to the DescribeProjectVersions operation.
            Lists and describes the versions of a model in an Amazon Rekognition Custom Labels
            project. You can specify up to 10 model versions in <code>ProjectVersionArns</code>.
            If you don't specify a value, descriptions for all model versions in the project are
            returned.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeProjectVersions</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 100. If you specify a value greater than 100, a ValidationException
            error occurs. The default value is 100. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the project that contains the models you want to
            describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsRequest.VersionNames">
            <summary>
            Gets and sets the property VersionNames. 
            <para>
            A list of model version names that you want to describe. You can add up to 10 model
            version names to the list. If you don't specify a value, all model descriptions are
            returned. A version name is part of a model (ProjectVersion) ARN. For example, <code>my-model.2020-01-21T09.10.15</code>
            is the version name in the following ARN. <code>arn:aws:rekognition:us-east-1:123456789012:project/getting-started/version/<i>my-model.2020-01-21T09.10.15</i>/1234567890123</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeProjectVersionsResponse">
            <summary>
            This is the response object from the DescribeProjectVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsResponse.ProjectVersionDescriptions">
            <summary>
            Gets and sets the property ProjectVersionDescriptions. 
            <para>
            A list of model descriptions. The list is sorted by the creation date and time of
            the model versions, latest to earliest.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeStreamProcessorRequest">
            <summary>
            Container for the parameters to the DescribeStreamProcessor operation.
            Provides information about a stream processor created by <a>CreateStreamProcessor</a>.
            You can get information about the input and output streams, the input parameters for
            the face recognition being performed, and the current status of the stream processor.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the stream processor for which you want information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeStreamProcessorResponse">
            <summary>
            This is the response object from the DescribeStreamProcessor operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            Date and time the stream processor was created
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.DataSharingPreference">
            <summary>
            Gets and sets the property DataSharingPreference. 
            <para>
             Shows whether you are sharing data with Rekognition to improve model performance.
            You can choose this option at the account level or on a per-stream basis. Note that
            if you opt out at the account level this setting is ignored on individual streams.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Kinesis video stream that provides the source streaming video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
             The identifier for your AWS Key Management Service key (AWS KMS key). This is an
            optional parameter for label detection stream processors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.LastUpdateTimestamp">
            <summary>
            Gets and sets the property LastUpdateTimestamp. 
            <para>
            The time, in Unix format, the stream processor was last updated. For example, when
            the stream processor moves from a running state to a failed state, or when the user
            starts or stops the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the stream processor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            Kinesis data stream to which Amazon Rekognition Video puts the analysis results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.RegionsOfInterest">
            <summary>
            Gets and sets the property RegionsOfInterest. 
            <para>
             Specifies locations in the frames where Amazon Rekognition checks for objects or
            people. This is an optional parameter for label detection stream processors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            ARN of the IAM role that allows access to the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            Input parameters used in a streaming video analyzed by a stream processor. You can
            use <code>FaceSearch</code> to recognize faces in a streaming video, or you can use
            <code>ConnectedHome</code> to detect labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Current status of the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Detailed status message about the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.StreamProcessorArn">
            <summary>
            Gets and sets the property StreamProcessorArn. 
            <para>
            ARN of the stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectCustomLabelsRequest">
            <summary>
            Container for the parameters to the DetectCustomLabels operation.
            Detects custom labels in a supplied image by using an Amazon Rekognition Custom Labels
            model. 
            
             
            <para>
            You specify which version of a model version to use by using the <code>ProjectVersionArn</code>
            input parameter. 
            </para>
             
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object that the model version detects on an image, the API returns a (<code>CustomLabel</code>)
            object in an array (<code>CustomLabels</code>). Each <code>CustomLabel</code> object
            provides the label name (<code>Name</code>), the level of confidence that the image
            contains the object (<code>Confidence</code>), and object location information, if
            it exists, for the label on the image (<code>Geometry</code>). 
            </para>
             
            <para>
            To filter labels that are returned, specify a value for <code>MinConfidence</code>.
            <code>DetectCustomLabelsLabels</code> only returns labels with a confidence that's
            higher than the specified value. The value of <code>MinConfidence</code> maps to the
            assumed threshold values created during training. For more information, see <i>Assumed
            threshold</i> in the Amazon Rekognition Custom Labels Developer Guide. Amazon Rekognition
            Custom Labels metrics expresses an assumed threshold as a floating point value between
            0-1. The range of <code>MinConfidence</code> normalizes the threshold value to a percentage
            value (0-100). Confidence responses from <code>DetectCustomLabels</code> are also
            returned as a percentage. You can use <code>MinConfidence</code> to change the precision
            and recall or your model. For more information, see <i>Analyzing an image</i> in the
            Amazon Rekognition Custom Labels Developer Guide. 
            </para>
             
            <para>
            If you don't specify a value for <code>MinConfidence</code>, <code>DetectCustomLabels</code>
            returns labels based on the assumed threshold of each label.
            </para>
             
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectCustomLabels</code>
            action. 
            </para>
             
            <para>
            For more information, see <i>Analyzing an image</i> in the Amazon Rekognition Custom
            Labels Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectCustomLabelsRequest.Image">
            <summary>
            Gets and sets the property Image.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectCustomLabelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results you want the service to return in the response. The service
            returns the specified number of highest confidence labels ranked from highest confidence
            to lowest.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectCustomLabelsRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence level for the labels to return. <code>DetectCustomLabels</code>
            doesn't return any labels with a confidence value that's lower than this specified
            value. If you specify a value of 0, <code>DetectCustomLabels</code> returns all labels,
            regardless of the assumed threshold applied to each label. If you don't specify a
            value for <code>MinConfidence</code>, <code>DetectCustomLabels</code> returns labels
            based on the assumed threshold of each label.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectCustomLabelsRequest.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The ARN of the model version that you want to use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectCustomLabelsResponse">
            <summary>
            This is the response object from the DetectCustomLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectCustomLabelsResponse.CustomLabels">
            <summary>
            Gets and sets the property CustomLabels. 
            <para>
            An array of custom labels detected in the input image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectFacesRequest">
            <summary>
            Container for the parameters to the DetectFaces operation.
            Detects faces within an image that is provided as input.
            
             
            <para>
             <code>DetectFaces</code> detects the 100 largest faces in the image. For each face
            detected, the operation returns face details. These details include a bounding box
            of the face, a confidence value (that the bounding box contains a face), and a fixed
            set of attributes such as facial landmarks (for example, coordinates of eye and mouth),
            presence of beard, sunglasses, and so on. 
            </para>
             
            <para>
            The face-detection algorithm is most effective on frontal faces. For non-frontal or
            obscured faces, the algorithm might not detect the faces or might detect faces with
            lower confidence. 
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             <note> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectFaces</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            An array of facial attributes you want to be returned. This can be the default list
            of attributes or all attributes. If you don't specify a value for <code>Attributes</code>
            or if you specify <code>["DEFAULT"]</code>, the API returns the following subset of
            facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>,
            <code>Quality</code>, and <code>Landmarks</code>. If you provide <code>["ALL"]</code>,
            all facial attributes are returned, but the operation takes longer to complete.
            </para>
             
            <para>
            If you provide both, <code>["ALL", "DEFAULT"]</code>, the service uses a logical AND
            operator to determine which attributes to return (in this case, all attributes). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectFacesResponse">
            <summary>
            This is the response object from the DetectFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesResponse.FaceDetails">
            <summary>
            Gets and sets the property FaceDetails. 
            <para>
            Details of each face found in the image. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
            The value of <code>OrientationCorrection</code> is always null.
            </para>
             
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image file format
            (Exif) metadata that includes the image's orientation. Amazon Rekognition uses this
            orientation information to perform image correction. The bounding box coordinates
            are translated to represent object locations after the orientation information in
            the Exif metadata is used to correct the image orientation. Images in .png format
            don't contain Exif metadata.
            </para>
             
            <para>
            Amazon Rekognition doesn’t perform image correction for images in .png format and
            .jpeg images without orientation information in the image Exif metadata. The bounding
            box coordinates aren't translated and represent the object locations before the image
            is rotated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectionFilter">
            <summary>
            A set of parameters that allow you to filter out certain results from your returned
            results.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectionFilter.MinBoundingBoxHeight">
            <summary>
            Gets and sets the property MinBoundingBoxHeight. 
            <para>
            Sets the minimum height of the word bounding box. Words with bounding box heights
            lesser than this value will be excluded from the result. Value is relative to the
            video frame height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectionFilter.MinBoundingBoxWidth">
            <summary>
            Gets and sets the property MinBoundingBoxWidth. 
            <para>
            Sets the minimum width of the word bounding box. Words with bounding boxes widths
            lesser than this value will be excluded from the result. Value is relative to the
            video frame width.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectionFilter.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Sets the confidence of word detection. Words with detection confidence below this
            will be excluded from the result. Values should be between 0 and 100. The default
            MinConfidence is 80.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectLabelsRequest">
            <summary>
            Container for the parameters to the DetectLabels operation.
            Detects instances of real-world entities within an image (JPEG or PNG) provided as
            input. This includes objects like flower, tree, and table; events like wedding, graduation,
            and birthday party; and concepts like landscape, evening, and nature. 
            
             
            <para>
            For an example, see Analyzing images stored in an Amazon S3 bucket in the Amazon Rekognition
            Developer Guide.
            </para>
             <note> 
            <para>
             <code>DetectLabels</code> does not support the detection of activities. However,
            activity detection is supported for label detection in videos. For more information,
            see StartLabelDetection in the Amazon Rekognition Developer Guide.
            </para>
             </note> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object, scene, and concept the API returns one or more labels. Each label
            provides the object name, and the level of confidence that the image contains the
            object. For example, suppose the input image has a lighthouse, the sea, and a rock.
            The response includes all three labels, one for each object. 
            </para>
             
            <para>
             <code>{Name: lighthouse, Confidence: 98.4629}</code> 
            </para>
             
            <para>
             <code>{Name: rock,Confidence: 79.2097}</code> 
            </para>
             
            <para>
             <code> {Name: sea,Confidence: 75.061}</code> 
            </para>
             
            <para>
            In the preceding example, the operation returns one label for each of the three objects.
            The operation can also return multiple labels for the same object in the image. For
            example, if the input image shows a flower (for example, a tulip), the operation might
            return the following three labels. 
            </para>
             
            <para>
             <code>{Name: flower,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: plant,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: tulip,Confidence: 99.0562}</code> 
            </para>
             
            <para>
            In this example, the detection algorithm more precisely identifies the flower as a
            tulip.
            </para>
             
            <para>
            In response, the API returns an array of labels. In addition, the response also includes
            the orientation correction. Optionally, you can specify <code>MinConfidence</code>
            to control the confidence threshold for the labels returned. The default is 55%. You
            can also add the <code>MaxLabels</code> parameter to limit the number of labels returned.
            
            </para>
             <note> 
            <para>
            If the object detected is a person, the operation doesn't provide the same facial
            details that the <a>DetectFaces</a> operation provides.
            </para>
             </note> 
            <para>
             <code>DetectLabels</code> returns bounding boxes for instances of common object labels
            in an array of <a>Instance</a> objects. An <code>Instance</code> object contains a
            <a>BoundingBox</a> object, for the location of the label on the image. It also includes
            the confidence by which the bounding box was detected.
            </para>
             
            <para>
             <code>DetectLabels</code> also returns a hierarchical taxonomy of detected labels.
            For example, a detected car might be assigned the label <i>car</i>. The label <i>car</i>
            has two parent labels: <i>Vehicle</i> (its parent) and <i>Transportation</i> (its
            grandparent). The response returns the entire list of ancestors for a label. Each
            ancestor is a unique label in the response. In the previous example, <i>Car</i>, <i>Vehicle</i>,
            and <i>Transportation</i> are returned as unique labels in the response. 
            </para>
             
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectLabels</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing image bytes is not supported. Images stored
            in an S3 Bucket do not need to be base64-encoded.
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsRequest.MaxLabels">
            <summary>
            Gets and sets the property MaxLabels. 
            <para>
            Maximum number of labels you want the service to return in the response. The service
            returns the specified number of highest confidence labels. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence level for the labels to return. Amazon Rekognition
            doesn't return any labels with confidence lower than this specified value.
            </para>
             
            <para>
            If <code>MinConfidence</code> is not specified, the operation returns labels with
            a confidence values greater than or equal to 55 percent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectLabelsResponse">
            <summary>
            This is the response object from the DetectLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsResponse.LabelModelVersion">
            <summary>
            Gets and sets the property LabelModelVersion. 
            <para>
            Version number of the label detection model that was used to detect labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsResponse.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            An array of labels for the real-world objects detected. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
            The value of <code>OrientationCorrection</code> is always null.
            </para>
             
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image file format
            (Exif) metadata that includes the image's orientation. Amazon Rekognition uses this
            orientation information to perform image correction. The bounding box coordinates
            are translated to represent object locations after the orientation information in
            the Exif metadata is used to correct the image orientation. Images in .png format
            don't contain Exif metadata.
            </para>
             
            <para>
            Amazon Rekognition doesn’t perform image correction for images in .png format and
            .jpeg images without orientation information in the image Exif metadata. The bounding
            box coordinates aren't translated and represent the object locations before the image
            is rotated. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectModerationLabelsRequest">
            <summary>
            Container for the parameters to the DetectModerationLabels operation.
            Detects unsafe content in a specified JPEG or PNG format image. Use <code>DetectModerationLabels</code>
            to moderate images depending on your requirements. For example, you might want to
            filter images that contain nudity, but not images containing suggestive content.
            
             
            <para>
            To filter images, use the labels returned by <code>DetectModerationLabels</code> to
            determine which types of content are appropriate.
            </para>
             
            <para>
            For information about moderation labels, see Detecting Unsafe Content in the Amazon
            Rekognition Developer Guide.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsRequest.HumanLoopConfig">
            <summary>
            Gets and sets the property HumanLoopConfig. 
            <para>
            Sets up the configuration for human evaluation, including the FlowDefinition the image
            will be sent to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence level for the labels to return. Amazon Rekognition
            doesn't return any labels with a confidence level lower than this specified value.
            </para>
             
            <para>
            If you don't specify <code>MinConfidence</code>, the operation returns labels with
            confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectModerationLabelsResponse">
            <summary>
            This is the response object from the DetectModerationLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsResponse.HumanLoopActivationOutput">
            <summary>
            Gets and sets the property HumanLoopActivationOutput. 
            <para>
            Shows the results of the human in the loop evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsResponse.ModerationLabels">
            <summary>
            Gets and sets the property ModerationLabels. 
            <para>
            Array of detected Moderation labels and the time, in milliseconds from the start of
            the video, they were detected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsResponse.ModerationModelVersion">
            <summary>
            Gets and sets the property ModerationModelVersion. 
            <para>
            Version number of the moderation detection model that was used to detect unsafe content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectProtectiveEquipmentRequest">
            <summary>
            Container for the parameters to the DetectProtectiveEquipment operation.
            Detects Personal Protective Equipment (PPE) worn by people detected in an image. Amazon
            Rekognition can detect the following types of PPE.
            
             <ul> <li> 
            <para>
            Face cover
            </para>
             </li> <li> 
            <para>
            Hand cover
            </para>
             </li> <li> 
            <para>
            Head cover
            </para>
             </li> </ul> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. The image must be either a PNG or JPG formatted file. 
            </para>
             
            <para>
             <code>DetectProtectiveEquipment</code> detects PPE worn by up to 15 persons detected
            in an image.
            </para>
             
            <para>
            For each person detected in the image the API returns an array of body parts (face,
            head, left-hand, right-hand). For each body part, an array of detected items of PPE
            is returned, including an indicator of whether or not the PPE covers the body part.
            The API returns the confidence it has in each detection (person, PPE, body part and
            body part coverage). It also returns a bounding box (<a>BoundingBox</a>) for each
            detected person and each detected item of PPE. 
            </para>
             
            <para>
            You can optionally request a summary of detected PPE items with the <code>SummarizationAttributes</code>
            input parameter. The summary provides the following information. 
            </para>
             <ul> <li> 
            <para>
            The persons detected as wearing all of the types of PPE that you specify.
            </para>
             </li> <li> 
            <para>
            The persons detected as not wearing all of the types PPE that you specify.
            </para>
             </li> <li> 
            <para>
            The persons detected where PPE adornment could not be determined. 
            </para>
             </li> </ul> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectProtectiveEquipment</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectProtectiveEquipmentRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image in which you want to detect PPE on detected persons. The image can be passed
            as image bytes or you can reference an image stored in an Amazon S3 bucket. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectProtectiveEquipmentRequest.SummarizationAttributes">
            <summary>
            Gets and sets the property SummarizationAttributes. 
            <para>
            An array of PPE types that you want to summarize.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectProtectiveEquipmentResponse">
            <summary>
            This is the response object from the DetectProtectiveEquipment operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectProtectiveEquipmentResponse.Persons">
            <summary>
            Gets and sets the property Persons. 
            <para>
            An array of persons detected in the image (including persons not wearing PPE).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectProtectiveEquipmentResponse.ProtectiveEquipmentModelVersion">
            <summary>
            Gets and sets the property ProtectiveEquipmentModelVersion. 
            <para>
            The version number of the PPE detection model used to detect PPE in the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectProtectiveEquipmentResponse.Summary">
            <summary>
            Gets and sets the property Summary. 
            <para>
            Summary information for the types of PPE specified in the <code>SummarizationAttributes</code>
            input parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectTextFilters">
            <summary>
            A set of optional parameters that you can use to set the criteria that the text must
            meet to be included in your response. <code>WordFilter</code> looks at a word’s height,
            width, and minimum confidence. <code>RegionOfInterest</code> lets you set a specific
            region of the image to look for text in.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextFilters.RegionsOfInterest">
            <summary>
            Gets and sets the property RegionsOfInterest. 
            <para>
             A Filter focusing on a certain area of the image. Uses a <code>BoundingBox</code>
            object to set the region of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextFilters.WordFilter">
            <summary>
            Gets and sets the property WordFilter.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectTextRequest">
            <summary>
            Container for the parameters to the DetectText operation.
            Detects text in the input image and converts it into machine-readable text.
            
             
            <para>
            Pass the input image as base64-encoded image bytes or as a reference to an image in
            an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            you must pass it as a reference to an image in an Amazon S3 bucket. For the AWS CLI,
            passing image bytes is not supported. The image must be either a .png or .jpeg formatted
            file. 
            </para>
             
            <para>
            The <code>DetectText</code> operation returns text in an array of <a>TextDetection</a>
            elements, <code>TextDetections</code>. Each <code>TextDetection</code> element provides
            information about a single word or line of text that was detected in the image. 
            </para>
             
            <para>
            A word is one or more script characters that are not separated by spaces. <code>DetectText</code>
            can detect up to 100 words in an image.
            </para>
             
            <para>
            A line is a string of equally spaced words. A line isn't necessarily a complete sentence.
            For example, a driver's license number is detected as a line. A line ends when there
            is no aligned text after it. Also, a line ends when there is a large gap between words,
            relative to the length of the words. This means, depending on the gap between words,
            Amazon Rekognition may detect multiple lines in text aligned in the same direction.
            Periods don't represent the end of a line. If a sentence spans multiple lines, the
            <code>DetectText</code> operation returns multiple lines.
            </para>
             
            <para>
            To determine whether a <code>TextDetection</code> element is a line of text or a word,
            use the <code>TextDetection</code> object <code>Type</code> field. 
            </para>
             
            <para>
            To be detected, text must be within +/- 90 degrees orientation of the horizontal axis.
            </para>
             
            <para>
            For more information, see Detecting text in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Optional parameters that let you set the criteria that the text must meet to be included
            in your response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an Amazon S3 object. If you use the AWS
            CLI to call Amazon Rekognition operations, you can't pass image bytes. 
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectTextResponse">
            <summary>
            This is the response object from the DetectText operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextResponse.TextDetections">
            <summary>
            Gets and sets the property TextDetections. 
            <para>
            An array of text that was detected in the input image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextResponse.TextModelVersion">
            <summary>
            Gets and sets the property TextModelVersion. 
            <para>
            The model version used to detect text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DistributeDataset">
            <summary>
            A training dataset or a test dataset used in a dataset distribution operation. For
            more information, see <a>DistributeDatasetEntries</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DistributeDataset.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the dataset that you want to use. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DistributeDatasetEntriesRequest">
            <summary>
            Container for the parameters to the DistributeDatasetEntries operation.
            Distributes the entries (images) in a training dataset across the training dataset
            and the test dataset for a project. <code>DistributeDatasetEntries</code> moves 20%
            of the training dataset images to the test dataset. An entry is a JSON Line that describes
            an image. 
            
             
            <para>
            You supply the Amazon Resource Names (ARN) of a project's training dataset and test
            dataset. The training dataset must contain the images that you want to split. The
            test dataset must be empty. The datasets must belong to the same project. To create
            training and test datasets for a project, call <a>CreateDataset</a>.
            </para>
             
            <para>
            Distributing a dataset takes a while to complete. To check the status call <code>DescribeDataset</code>.
            The operation is complete when the <code>Status</code> field for the training dataset
            and the test dataset is <code>UPDATE_COMPLETE</code>. If the dataset split fails,
            the value of <code>Status</code> is <code>UPDATE_FAILED</code>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DistributeDatasetEntries</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DistributeDatasetEntriesRequest.Datasets">
            <summary>
            Gets and sets the property Datasets. 
            <para>
            The ARNS for the training dataset and test dataset that you want to use. The datasets
            must belong to the same project. The test dataset must be empty. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DistributeDatasetEntriesResponse">
            <summary>
            This is the response object from the DistributeDatasetEntries operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Emotion">
            <summary>
            The emotions that appear to be expressed on the face, and the confidence level in
            the determination. The API is only making a determination of the physical appearance
            of a person's face. It is not a determination of the person’s internal emotional state
            and should not be used in such a way. For example, a person pretending to have a sad
            face might not be sad emotionally.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Emotion.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Emotion.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of emotion detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.EquipmentDetection">
            <summary>
            Information about an item of Personal Protective Equipment (PPE) detected by <a>DetectProtectiveEquipment</a>.
            For more information, see <a>DetectProtectiveEquipment</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EquipmentDetection.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            A bounding box surrounding the item of detected PPE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EquipmentDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has that the bounding box (<code>BoundingBox</code>)
            contains an item of PPE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EquipmentDetection.CoversBodyPart">
            <summary>
            Gets and sets the property CoversBodyPart. 
            <para>
            Information about the body part covered by the detected PPE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EquipmentDetection.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of detected PPE.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.EvaluationResult">
            <summary>
            The evaluation results for the training of a model.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EvaluationResult.F1Score">
            <summary>
            Gets and sets the property F1Score. 
            <para>
            The F1 score for the evaluation of all labels. The F1 score metric evaluates the overall
            precision and recall performance of the model as a single value. A higher value indicates
            better precision and recall performance. A lower score indicates that precision, recall,
            or both are performing poorly. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EvaluationResult.Summary">
            <summary>
            Gets and sets the property Summary. 
            <para>
            The S3 bucket that contains the training summary.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Eyeglasses">
            <summary>
            Indicates whether or not the face is wearing eye glasses, and the confidence level
            in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Eyeglasses.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Eyeglasses.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face is wearing eye glasses or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.EyeOpen">
            <summary>
            Indicates whether or not the eyes on the face are open, and the confidence level in
            the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EyeOpen.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EyeOpen.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the eyes on the face are open.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Face">
            <summary>
            Describes the face properties such as the bounding box, face ID, image ID of the input
            image, and external image ID that you assigned.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Confidence level that the bounding box contains a face (and not a different object
            such as a tree).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.ExternalImageId">
            <summary>
            Gets and sets the property ExternalImageId. 
            <para>
            Identifier that you assign to all the faces in the input image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.FaceId">
            <summary>
            Gets and sets the property FaceId. 
            <para>
            Unique identifier that Amazon Rekognition assigns to the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            Unique identifier that Amazon Rekognition assigns to the input image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.IndexFacesModelVersion">
            <summary>
            Gets and sets the property IndexFacesModelVersion. 
            <para>
             The version of the face detect and storage model that was used when indexing the
            face vector. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceDetail">
            <summary>
            Structure containing attributes of the face that the algorithm detected.
            
             
            <para>
            A <code>FaceDetail</code> object contains either the default facial attributes or
            all facial attributes. The default attributes are <code>BoundingBox</code>, <code>Confidence</code>,
            <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>.
            </para>
             
            <para>
             <a>GetFaceDetection</a> is the only Amazon Rekognition Video stored video operation
            that can return a <code>FaceDetail</code> object with all attributes. To specify which
            attributes to return, use the <code>FaceAttributes</code> input parameter for <a>StartFaceDetection</a>.
            The following Amazon Rekognition Video operations return only the default attributes.
            The corresponding Start operations don't have a <code>FaceAttributes</code> input
            parameter.
            </para>
             <ul> <li> 
            <para>
            GetCelebrityRecognition
            </para>
             </li> <li> 
            <para>
            GetPersonTracking
            </para>
             </li> <li> 
            <para>
            GetFaceSearch
            </para>
             </li> </ul> 
            <para>
            The Amazon Rekognition Image <a>DetectFaces</a> and <a>IndexFaces</a> operations can
            return all facial attributes. To specify which attributes to return, use the <code>Attributes</code>
            input parameter for <code>DetectFaces</code>. For <code>IndexFaces</code>, use the
            <code>DetectAttributes</code> input parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.AgeRange">
            <summary>
            Gets and sets the property AgeRange. 
            <para>
            The estimated age range, in years, for the face. Low represents the lowest estimated
            age and High represents the highest estimated age.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Beard">
            <summary>
            Gets and sets the property Beard. 
            <para>
            Indicates whether or not the face has a beard, and the confidence level in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face. Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Confidence level that the bounding box contains a face (and not a different object
            such as a tree). Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Emotions">
            <summary>
            Gets and sets the property Emotions. 
            <para>
            The emotions that appear to be expressed on the face, and the confidence level in
            the determination. The API is only making a determination of the physical appearance
            of a person's face. It is not a determination of the person’s internal emotional state
            and should not be used in such a way. For example, a person pretending to have a sad
            face might not be sad emotionally.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Eyeglasses">
            <summary>
            Gets and sets the property Eyeglasses. 
            <para>
            Indicates whether or not the face is wearing eye glasses, and the confidence level
            in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.EyesOpen">
            <summary>
            Gets and sets the property EyesOpen. 
            <para>
            Indicates whether or not the eyes on the face are open, and the confidence level in
            the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Gender">
            <summary>
            Gets and sets the property Gender. 
            <para>
            The predicted gender of a detected face. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Landmarks">
            <summary>
            Gets and sets the property Landmarks. 
            <para>
            Indicates the location of landmarks on the face. Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.MouthOpen">
            <summary>
            Gets and sets the property MouthOpen. 
            <para>
            Indicates whether or not the mouth on the face is open, and the confidence level in
            the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Mustache">
            <summary>
            Gets and sets the property Mustache. 
            <para>
            Indicates whether or not the face has a mustache, and the confidence level in the
            determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Pose">
            <summary>
            Gets and sets the property Pose. 
            <para>
            Indicates the pose of the face as determined by its pitch, roll, and yaw. Default
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Quality">
            <summary>
            Gets and sets the property Quality. 
            <para>
            Identifies image brightness and sharpness. Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Smile">
            <summary>
            Gets and sets the property Smile. 
            <para>
            Indicates whether or not the face is smiling, and the confidence level in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Sunglasses">
            <summary>
            Gets and sets the property Sunglasses. 
            <para>
            Indicates whether or not the face is wearing sunglasses, and the confidence level
            in the determination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceDetection">
            <summary>
            Information about a face detected in a video analysis request and the time the face
            was detected in the video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetection.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            The face properties for the detected face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time, in milliseconds from the start of the video, that the face was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceMatch">
            <summary>
            Provides face metadata. In addition, it also provides the confidence in the match
            of this face with the input face.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceMatch.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Describes the face properties such as the bounding box, face ID, image ID of the source
            image, and external image ID that you assigned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceMatch.Similarity">
            <summary>
            Gets and sets the property Similarity. 
            <para>
            Confidence in the match of this face with the input face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceRecord">
            <summary>
            Object containing both the face metadata (stored in the backend database), and facial
            attributes that are detected but aren't stored in the database.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceRecord.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Describes the face properties such as the bounding box, face ID, image ID of the input
            image, and external image ID that you assigned. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceRecord.FaceDetail">
            <summary>
            Gets and sets the property FaceDetail. 
            <para>
            Structure containing attributes of the face that the algorithm detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceSearchSettings">
            <summary>
            Input face recognition parameters for an Amazon Rekognition stream processor. Includes
            the collection to use for face recognition and the face attributes to detect. Defining
            the settings is required in the request parameter for <a>CreateStreamProcessor</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceSearchSettings.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            The ID of a collection that contains faces that you want to search for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceSearchSettings.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            Minimum face match confidence score that must be met to return a result for a recognized
            face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence.
            Values between 0 and 100 are accepted, and values lower than 80 are set to 80.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Gender">
            <summary>
            The predicted gender of a detected face. 
            
             
            <para>
            Amazon Rekognition makes gender binary (male/female) predictions based on the physical
            appearance of a face in a particular image. This kind of prediction is not designed
            to categorize a person’s gender identity, and you shouldn't use Amazon Rekognition
            to make such a determination. For example, a male actor wearing a long-haired wig
            and earrings for a role might be predicted as female.
            </para>
             
            <para>
            Using Amazon Rekognition to make gender binary predictions is best suited for use
            cases where aggregate gender distribution statistics need to be analyzed without identifying
            specific users. For example, the percentage of female users compared to male users
            on a social media platform. 
            </para>
             
            <para>
            We don't recommend using gender binary predictions to make decisions that impact an
            individual's rights, privacy, or access to services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Gender.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the prediction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Gender.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The predicted gender of the face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Geometry">
            <summary>
            Information about where an object (<a>DetectCustomLabels</a>) or text (<a>DetectText</a>)
            is located on an image.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Geometry.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            An axis-aligned coarse representation of the detected item's location on the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Geometry.Polygon">
            <summary>
            Gets and sets the property Polygon. 
            <para>
            Within the bounding box, a fine-grained polygon around the detected item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityInfoRequest">
            <summary>
            Container for the parameters to the GetCelebrityInfo operation.
            Gets the name and additional information about a celebrity based on their Amazon Rekognition
            ID. The additional information is returned as an array of URLs. If there is no additional
            information about the celebrity, this list is empty.
            
             
            <para>
            For more information, see Getting information about a celebrity in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:GetCelebrityInfo</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoRequest.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID for the celebrity. You get the celebrity ID from a call to the <a>RecognizeCelebrities</a>
            operation, which recognizes celebrities in an image. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityInfoResponse">
            <summary>
            This is the response object from the GetCelebrityInfo operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoResponse.KnownGender">
            <summary>
            Gets and sets the property KnownGender. 
            <para>
            Retrieves the known gender for the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoResponse.Urls">
            <summary>
            Gets and sets the property Urls. 
            <para>
            An array of URLs pointing to additional celebrity information. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest">
            <summary>
            Container for the parameters to the GetCelebrityRecognition operation.
            Gets the celebrity recognition results for a Amazon Rekognition Video analysis started
            by <a>StartCelebrityRecognition</a>.
            
             
            <para>
            Celebrity recognition in a video is an asynchronous operation. Analysis is started
            by a call to <a>StartCelebrityRecognition</a> which returns a job identifier (<code>JobId</code>).
            
            </para>
             
            <para>
            When the celebrity recognition operation finishes, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic registered in
            the initial call to <code>StartCelebrityRecognition</code>. To get the results of
            the celebrity recognition analysis, first check that the status value published to
            the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetCelebrityDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityDetection</code>.
            
            </para>
             
            <para>
            For more information, see Working With Stored Videos in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
             <code>GetCelebrityRecognition</code> returns detected celebrities and the time(s)
            they are detected in an array (<code>Celebrities</code>) of <a>CelebrityRecognition</a>
            objects. Each <code>CelebrityRecognition</code> contains information about the celebrity
            in a <a>CelebrityDetail</a> object and the time, <code>Timestamp</code>, the celebrity
            was detected. This <a>CelebrityDetail</a> object stores information about the detected
            celebrity's face attributes, a face bounding box, known gender, the celebrity's name,
            and a confidence estimate.
            </para>
             <note> 
            <para>
             <code>GetCelebrityRecognition</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The <code>BoundingBox</code> field only applies to the detected face instance. The
            other facial attributes listed in the <code>Face</code> object of the following response
            syntax are not returned. For more information, see FaceDetail in the Amazon Rekognition
            Developer Guide. 
            </para>
             </note> 
            <para>
            By default, the <code>Celebrities</code> array is sorted by time (milliseconds from
            the start of the video). You can also sort the array by celebrity by specifying the
            value <code>ID</code> in the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The <code>CelebrityDetail</code> object includes the celebrity identifer and additional
            information urls. If you don't store the additional information urls, you can get
            them later by calling <a>GetCelebrityInfo</a> with the celebrity identifer.
            </para>
             
            <para>
            No information is returned for faces not recognized as celebrities.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetCelebrityDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetCelebrityRecognition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Job identifier for the required celebrity recognition analysis. You can get the job
            identifer from a call to <code>StartCelebrityRecognition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more recognized celebrities
            to retrieve), Amazon Rekognition Video returns a pagination token in the response.
            You can use this pagination token to retrieve the next set of celebrities. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for celebrities returned in <code>Celebrities</code> field. Specify <code>ID</code>
            to sort by the celebrity identifier, specify <code>TIMESTAMP</code> to sort by the
            time the celebrity was recognized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse">
            <summary>
            This is the response object from the GetCelebrityRecognition operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.Celebrities">
            <summary>
            Gets and sets the property Celebrities. 
            <para>
            Array of celebrities recognized in the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the celebrity recognition job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of celebrities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition Video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetContentModerationRequest">
            <summary>
            Container for the parameters to the GetContentModeration operation.
            Gets the inappropriate, unwanted, or offensive content analysis results for a Amazon
            Rekognition Video analysis started by <a>StartContentModeration</a>. For a list of
            moderation labels in Amazon Rekognition, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/moderation.html#moderation-api">Using
            the image and video moderation APIs</a>.
            
             
            <para>
            Amazon Rekognition Video inappropriate or offensive content detection in a stored
            video is an asynchronous operation. You start analysis by calling <a>StartContentModeration</a>
            which returns a job identifier (<code>JobId</code>). When analysis finishes, Amazon
            Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartContentModeration</code>.
            To get the results of the content analysis, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetContentModeration</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            
            </para>
             
            <para>
            For more information, see Working with Stored Videos in the Amazon Rekognition Devlopers
            Guide.
            </para>
             
            <para>
             <code>GetContentModeration</code> returns detected inappropriate, unwanted, or offensive
            content moderation labels, and the time they are detected, in an array, <code>ModerationLabels</code>,
            of <a>ContentModerationDetection</a> objects. 
            </para>
             
            <para>
            By default, the moderated labels are returned sorted by time, in milliseconds from
            the start of the video. You can also sort them by moderated label by specifying <code>NAME</code>
            for the <code>SortBy</code> input parameter. 
            </para>
             
            <para>
            Since video analysis can return a large number of results, use the <code>MaxResults</code>
            parameter to limit the number of labels returned in a single call to <code>GetContentModeration</code>.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetContentModeration</code>
            and populate the <code>NextToken</code> request parameter with the value of <code>NextToken</code>
            returned from the previous call to <code>GetContentModeration</code>.
            </para>
             
            <para>
            For more information, see moderating content in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the inappropriate, unwanted, or offensive content moderation job.
            Use <code>JobId</code> to identify the job in a subsequent call to <code>GetContentModeration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more data to retrieve),
            Amazon Rekognition returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of content moderation labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for elements in the <code>ModerationLabelDetections</code> array. Use
            <code>TIMESTAMP</code> to sort array elements by the time labels are detected. Use
            <code>NAME</code> to alphabetically group elements for a label together. Within each
            label group, the array element are sorted by detection confidence. The default sort
            is by <code>TIMESTAMP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetContentModerationResponse">
            <summary>
            This is the response object from the GetContentModeration operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the content moderation analysis job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.ModerationLabels">
            <summary>
            Gets and sets the property ModerationLabels. 
            <para>
            The detected inappropriate, unwanted, or offensive content moderation labels and the
            time(s) they were detected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.ModerationModelVersion">
            <summary>
            Gets and sets the property ModerationModelVersion. 
            <para>
            Version number of the moderation detection model that was used to detect inappropriate,
            unwanted, or offensive content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of content moderation labels.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from <code>GetContentModeration</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceDetectionRequest">
            <summary>
            Container for the parameters to the GetFaceDetection operation.
            Gets face detection results for a Amazon Rekognition Video analysis started by <a>StartFaceDetection</a>.
            
             
            <para>
            Face detection with Amazon Rekognition Video is an asynchronous operation. You start
            face detection by calling <a>StartFaceDetection</a> which returns a job identifier
            (<code>JobId</code>). When the face detection operation finishes, Amazon Rekognition
            Video publishes a completion status to the Amazon Simple Notification Service topic
            registered in the initial call to <code>StartFaceDetection</code>. To get the results
            of the face detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceDetection</a> and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            </para>
             
            <para>
             <code>GetFaceDetection</code> returns an array of detected faces (<code>Faces</code>)
            sorted by the time the faces were detected. 
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetFaceDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetFaceDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Unique identifier for the face detection job. The <code>JobId</code> is returned from
            <code>StartFaceDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more faces to retrieve),
            Amazon Rekognition Video returns a pagination token in the response. You can use this
            pagination token to retrieve the next set of faces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceDetectionResponse">
            <summary>
            This is the response object from the GetFaceDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.Faces">
            <summary>
            Gets and sets the property Faces. 
            <para>
            An array of faces detected in the video. Each element contains a detected face's details
            and the time, in milliseconds from the start of the video, the face was detected.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the face detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition returns this token that you can use
            in the subsequent request to retrieve the next set of faces. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceSearchRequest">
            <summary>
            Container for the parameters to the GetFaceSearch operation.
            Gets the face search results for Amazon Rekognition Video face search started by <a>StartFaceSearch</a>.
            The search returns faces in a collection that match the faces of persons detected
            in a video. It also includes the time(s) that faces are matched in the video.
            
             
            <para>
            Face search in a video is an asynchronous operation. You start face search by calling
            to <a>StartFaceSearch</a> which returns a job identifier (<code>JobId</code>). When
            the search operation finishes, Amazon Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic registered in the initial call to
            <code>StartFaceSearch</code>. To get the search results, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetFaceSearch</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            </para>
             
            <para>
            For more information, see Searching Faces in a Collection in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            The search results are retured in an array, <code>Persons</code>, of <a>PersonMatch</a>
            objects. Each<code>PersonMatch</code> element contains details about the matching
            faces in the input collection, person information (facial attributes, bounding boxes,
            and person identifer) for the matched person, and the time the person was matched
            in the video.
            </para>
             <note> 
            <para>
             <code>GetFaceSearch</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. For more information, see FaceDetail in the Amazon
            Rekognition Developer Guide. 
            </para>
             </note> 
            <para>
            By default, the <code>Persons</code> array is sorted by the time, in milliseconds
            from the start of the video, persons are matched. You can also sort by persons by
            specifying <code>INDEX</code> for the <code>SORTBY</code> input parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job identifer for the search request. You get the job identifier from an initial
            call to <code>StartFaceSearch</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more search results to retrieve),
            Amazon Rekognition Video returns a pagination token in the response. You can use this
            pagination token to retrieve the next set of search results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for grouping faces in the response. Use <code>TIMESTAMP</code> to group
            faces by the time that they are recognized. Use <code>INDEX</code> to sort by recognized
            faces. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceSearchResponse">
            <summary>
            This is the response object from the GetFaceSearch operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the face search job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of search results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.Persons">
            <summary>
            Gets and sets the property Persons. 
            <para>
            An array of persons, <a>PersonMatch</a>, in the video whose face(s) match the face(s)
            in an Amazon Rekognition collection. It also includes time information for when persons
            are matched in the video. You specify the input collection in an initial call to <code>StartFaceSearch</code>.
            Each <code>Persons</code> element includes a time the person was matched, face match
            details (<code>FaceMatches</code>) for matching faces in the collection, and person
            information (<code>Person</code>) for the matched person. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition Video operation.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetLabelDetectionRequest">
            <summary>
            Container for the parameters to the GetLabelDetection operation.
            Gets the label detection results of a Amazon Rekognition Video analysis started by
            <a>StartLabelDetection</a>. 
            
             
            <para>
            The label detection operation is started by a call to <a>StartLabelDetection</a> which
            returns a job identifier (<code>JobId</code>). When the label detection operation
            finishes, Amazon Rekognition publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartlabelDetection</code>.
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetLabelDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetLabelDetection</code> returns an array of detected labels (<code>Labels</code>)
            sorted by the time the labels were detected. You can also sort by the label name by
            specifying <code>NAME</code> for the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The labels returned include the label name, the percentage confidence in the accuracy
            of the detected label, and the time the label was detected in the video.
            </para>
             
            <para>
            The returned labels also include bounding box information for common objects, a hierarchical
            taxonomy of detected labels, and the version of the label model used for detection.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetlabelDetection</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetLabelDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Job identifier for the label detection operation for which you want results returned.
            You get the job identifer from an initial call to <code>StartlabelDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more labels to retrieve),
            Amazon Rekognition Video returns a pagination token in the response. You can use this
            pagination token to retrieve the next set of labels. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for elements in the <code>Labels</code> array. Use <code>TIMESTAMP</code>
            to sort array elements by the time labels are detected. Use <code>NAME</code> to alphabetically
            group elements for a label together. Within each label group, the array element are
            sorted by detection confidence. The default sort is by <code>TIMESTAMP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetLabelDetectionResponse">
            <summary>
            This is the response object from the GetLabelDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the label detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.LabelModelVersion">
            <summary>
            Gets and sets the property LabelModelVersion. 
            <para>
            Version number of the label detection model that was used to detect labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            An array of labels detected in the video. Each element contains the detected label
            and the time, in milliseconds from the start of the video, that the label was detected.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetPersonTrackingRequest">
            <summary>
            Container for the parameters to the GetPersonTracking operation.
            Gets the path tracking results of a Amazon Rekognition Video analysis started by <a>StartPersonTracking</a>.
            
             
            <para>
            The person path tracking operation is started by a call to <code>StartPersonTracking</code>
            which returns a job identifier (<code>JobId</code>). When the operation finishes,
            Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
            To get the results of the person path tracking operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetPersonTracking</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
             <code>GetPersonTracking</code> returns an array, <code>Persons</code>, of tracked
            persons and the time(s) their paths were tracked in the video. 
            </para>
             <note> 
            <para>
             <code>GetPersonTracking</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. 
            </para>
             
            <para>
            For more information, see FaceDetail in the Amazon Rekognition Developer Guide.
            </para>
             </note> 
            <para>
            By default, the array is sorted by the time(s) a person's path is tracked in the video.
            You can sort by tracked persons by specifying <code>INDEX</code> for the <code>SortBy</code>
            input parameter.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of items returned. If
            there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetPersonTracking</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetPersonTracking</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for a job that tracks persons in a video. You get the <code>JobId</code>
            from a call to <code>StartPersonTracking</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more persons to retrieve),
            Amazon Rekognition Video returns a pagination token in the response. You can use this
            pagination token to retrieve the next set of persons. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for elements in the <code>Persons</code> array. Use <code>TIMESTAMP</code>
            to sort array elements by the time persons are detected. Use <code>INDEX</code> to
            sort by the tracked persons. If you sort by <code>INDEX</code>, the array elements
            for each person are sorted by detection confidence. The default sort is by <code>TIMESTAMP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetPersonTrackingResponse">
            <summary>
            This is the response object from the GetPersonTracking operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the person tracking job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of persons. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.Persons">
            <summary>
            Gets and sets the property Persons. 
            <para>
            An array of the persons detected in the video and the time(s) their path was tracked
            throughout the video. An array element will exist for each time a person's path is
            tracked. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition Video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetSegmentDetectionRequest">
            <summary>
            Container for the parameters to the GetSegmentDetection operation.
            Gets the segment detection results of a Amazon Rekognition Video analysis started
            by <a>StartSegmentDetection</a>.
            
             
            <para>
            Segment detection with Amazon Rekognition Video is an asynchronous operation. You
            start segment detection by calling <a>StartSegmentDetection</a> which returns a job
            identifier (<code>JobId</code>). When the segment detection operation finishes, Amazon
            Rekognition publishes a completion status to the Amazon Simple Notification Service
            topic registered in the initial call to <code>StartSegmentDetection</code>. To get
            the results of the segment detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <code>GetSegmentDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call of <code>StartSegmentDetection</code>.
            </para>
             
            <para>
             <code>GetSegmentDetection</code> returns detected segments in an array (<code>Segments</code>)
            of <a>SegmentDetection</a> objects. <code>Segments</code> is sorted by the segment
            types specified in the <code>SegmentTypes</code> input parameter of <code>StartSegmentDetection</code>.
            Each element of the array includes the detected segment, the precentage confidence
            in the acuracy of the detected segment, the type of the segment, and the frame in
            which the segment was detected.
            </para>
             
            <para>
            Use <code>SelectedSegmentTypes</code> to find out the type of segment detection requested
            in the call to <code>StartSegmentDetection</code>.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of segment detections
            returned. If there are more results than specified in <code>MaxResults</code>, the
            value of <code>NextToken</code> in the operation response contains a pagination token
            for getting the next set of results. To get the next page of results, call <code>GetSegmentDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetSegmentDetection</code>.
            </para>
             
            <para>
            For more information, see Detecting video segments in stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Job identifier for the text detection operation for which you want results returned.
            You get the job identifer from an initial call to <code>StartSegmentDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetSegmentDetectionResponse">
            <summary>
            This is the response object from the GetSegmentDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.AudioMetadata">
            <summary>
            Gets and sets the property AudioMetadata. 
            <para>
            An array of objects. There can be multiple audio streams. Each <code>AudioMetadata</code>
            object contains metadata for a single audio stream. Audio information in an <code>AudioMetadata</code>
            objects includes the audio codec, the number of audio channels, the duration of the
            audio stream, and the sample rate. Audio metadata is returned in each page of information
            returned by <code>GetSegmentDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            Current status of the segment detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more labels to retrieve),
            Amazon Rekognition Video returns a pagination token in the response. You can use this
            pagination token to retrieve the next set of text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.Segments">
            <summary>
            Gets and sets the property Segments. 
            <para>
            An array of segments detected in a video. The array is sorted by the segment types
            (TECHNICAL_CUE or SHOT) specified in the <code>SegmentTypes</code> input parameter
            of <code>StartSegmentDetection</code>. Within each segment type the array is sorted
            by timestamp values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.SelectedSegmentTypes">
            <summary>
            Gets and sets the property SelectedSegmentTypes. 
            <para>
            An array containing the segment types requested in the call to <code>StartSegmentDetection</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Currently, Amazon Rekognition Video returns a single object in the <code>VideoMetadata</code>
            array. The object contains information about the video stream in the input file that
            Amazon Rekognition Video chose to analyze. The <code>VideoMetadata</code> object includes
            the video codec, video format and other information. Video metadata is returned in
            each page of information returned by <code>GetSegmentDetection</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetTextDetectionRequest">
            <summary>
            Container for the parameters to the GetTextDetection operation.
            Gets the text detection results of a Amazon Rekognition Video analysis started by
            <a>StartTextDetection</a>.
            
             
            <para>
            Text detection with Amazon Rekognition Video is an asynchronous operation. You start
            text detection by calling <a>StartTextDetection</a> which returns a job identifier
            (<code>JobId</code>) When the text detection operation finishes, Amazon Rekognition
            publishes a completion status to the Amazon Simple Notification Service topic registered
            in the initial call to <code>StartTextDetection</code>. To get the results of the
            text detection operation, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. if so, call <code>GetTextDetection</code> and
            pass the job identifier (<code>JobId</code>) from the initial call of <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetTextDetection</code> returns an array of detected text (<code>TextDetections</code>)
            sorted by the time the text was detected, up to 50 words per frame of video.
            </para>
             
            <para>
            Each element of the array includes the detected text, the precentage confidence in
            the acuracy of the detected text, the time the text was detected, bounding box information
            for where the text was located, and unique identifiers for words and their lines.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of text detections returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetTextDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Job identifier for the text detection operation for which you want results returned.
            You get the job identifer from an initial call to <code>StartTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more labels to retrieve),
            Amazon Rekognition Video returns a pagination token in the response. You can use this
            pagination token to retrieve the next set of text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetTextDetectionResponse">
            <summary>
            This is the response object from the GetTextDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            Current status of the text detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionResponse.TextDetections">
            <summary>
            Gets and sets the property TextDetections. 
            <para>
            An array of text detected in the video. Each element contains the detected text, the
            time in milliseconds from the start of the video that the text was detected, and where
            it was detected on the screen.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionResponse.TextModelVersion">
            <summary>
            Gets and sets the property TextModelVersion. 
            <para>
            Version number of the text detection model that was used to detect text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GroundTruthManifest">
            <summary>
            The S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GroundTruthManifest.S3Object">
            <summary>
            Gets and sets the property S3Object.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.HumanLoopActivationOutput">
            <summary>
            Shows the results of the human in the loop evaluation. If there is no HumanLoopArn,
            the input did not trigger human review.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopActivationOutput.HumanLoopActivationConditionsEvaluationResults">
            <summary>
            Gets and sets the property HumanLoopActivationConditionsEvaluationResults. 
            <para>
            Shows the result of condition evaluations, including those conditions which activated
            a human review.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopActivationOutput.HumanLoopActivationReasons">
            <summary>
            Gets and sets the property HumanLoopActivationReasons. 
            <para>
            Shows if and why human review was needed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopActivationOutput.HumanLoopArn">
            <summary>
            Gets and sets the property HumanLoopArn. 
            <para>
            The Amazon Resource Name (ARN) of the HumanLoop created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.HumanLoopConfig">
            <summary>
            Sets up the flow definition the image will be sent to if one of the conditions is
            met. You can also set certain attributes of the image before review.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopConfig.DataAttributes">
            <summary>
            Gets and sets the property DataAttributes. 
            <para>
            Sets attributes of the input data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopConfig.FlowDefinitionArn">
            <summary>
            Gets and sets the property FlowDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) of the flow definition. You can create a flow definition
            by using the Amazon Sagemaker <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateFlowDefinition.html">CreateFlowDefinition</a>
            Operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopConfig.HumanLoopName">
            <summary>
            Gets and sets the property HumanLoopName. 
            <para>
            The name of the human review used for this image. This should be kept unique within
            a region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.HumanLoopDataAttributes">
            <summary>
            Allows you to set attributes of the image. Currently, you can declare an image as
            free of personally identifiable information.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopDataAttributes.ContentClassifiers">
            <summary>
            Gets and sets the property ContentClassifiers. 
            <para>
            Sets whether the input image is free of personally identifiable information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.HumanLoopQuotaExceededException">
            <summary>
            The number of in-progress human reviews you have has exceeded the number allowed.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new HumanLoopQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of HumanLoopQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.QuotaCode">
            <summary>
            Gets and sets the property QuotaCode. 
            <para>
            The quota code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.HumanLoopQuotaExceededException.ServiceCode">
            <summary>
            Gets and sets the property ServiceCode. 
            <para>
            The service code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            <summary>
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotentParameterMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.Image">
            <summary>
            Provides the input image either as bytes or an S3 object.
            
             
            <para>
            You pass image bytes to an Amazon Rekognition API operation by using the <code>Bytes</code>
            property. For example, you would use the <code>Bytes</code> property to pass an image
            loaded from a local file system. Image bytes passed by using the <code>Bytes</code>
            property must be base64-encoded. Your code may not need to encode image bytes if you
            are using an AWS SDK to call Amazon Rekognition API operations. 
            </para>
             
            <para>
            For more information, see Analyzing an Image Loaded from a Local File System in the
            Amazon Rekognition Developer Guide.
            </para>
             
            <para>
             You pass images stored in an S3 bucket to an Amazon Rekognition API operation by
            using the <code>S3Object</code> property. Images stored in an S3 bucket do not need
            to be base64-encoded.
            </para>
             
            <para>
            The region for the S3 bucket containing the S3 object must match the region you use
            for Amazon Rekognition operations.
            </para>
             
            <para>
            If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes
            using the Bytes property is not supported. You must first upload the image to an Amazon
            S3 bucket and then call the operation using the S3Object property.
            </para>
             
            <para>
            For Amazon Rekognition to process an S3 object, the user must have permission to access
            the S3 object. For more information, see How Amazon Rekognition works with IAM in
            the Amazon Rekognition Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Image.Bytes">
            <summary>
            Gets and sets the property Bytes. 
            <para>
            Blob of image bytes up to 5 MBs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Image.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            Identifies an S3 object as the image source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ImageQuality">
            <summary>
            Identifies face image brightness and sharpness.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ImageQuality.Brightness">
            <summary>
            Gets and sets the property Brightness. 
            <para>
            Value representing brightness of the face. The service returns a value between 0 and
            100 (inclusive). A higher value indicates a brighter face image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ImageQuality.Sharpness">
            <summary>
            Gets and sets the property Sharpness. 
            <para>
            Value representing sharpness of the face. The service returns a value between 0 and
            100 (inclusive). A higher value indicates a sharper face image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ImageTooLargeException">
            <summary>
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new ImageTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.IndexFacesRequest">
            <summary>
            Container for the parameters to the IndexFaces operation.
            Detects faces in the input image and adds them to the specified collection. 
            
             
            <para>
            Amazon Rekognition doesn't save the actual faces that are detected. Instead, the underlying
            detection algorithm first detects the faces in the input image. For each face, the
            algorithm extracts facial features into a feature vector, and stores it in the backend
            database. Amazon Rekognition uses feature vectors when it performs face match and
            search operations using the <a>SearchFaces</a> and <a>SearchFacesByImage</a> operations.
            </para>
             
            <para>
            For more information, see Adding faces to a collection in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            To get the number of faces in a collection, call <a>DescribeCollection</a>. 
            </para>
             
            <para>
            If you're using version 1.0 of the face detection model, <code>IndexFaces</code> indexes
            the 15 largest faces in the input image. Later versions of the face detection model
            index the 100 largest faces in the input image. 
            </para>
             
            <para>
            If you're using version 4 or later of the face model, image orientation information
            is not returned in the <code>OrientationCorrection</code> field. 
            </para>
             
            <para>
            To determine which version of the model you're using, call <a>DescribeCollection</a>
            and supply the collection ID. You can also get the model version from the value of
            <code>FaceModelVersion</code> in the response from <code>IndexFaces</code> 
            </para>
             
            <para>
            For more information, see Model Versioning in the Amazon Rekognition Developer Guide.
            </para>
             
            <para>
            If you provide the optional <code>ExternalImageId</code> for the input image you provided,
            Amazon Rekognition associates this ID with all faces that it detects. When you call
            the <a>ListFaces</a> operation, the response returns the external ID. You can use
            this external image ID to create a client-side index to associate the faces with each
            image. You can then use the index to find all faces in an image.
            </para>
             
            <para>
            You can specify the maximum number of faces to index with the <code>MaxFaces</code>
            input parameter. This is useful when you want to index the largest faces in an image
            and don't want to index smaller faces, such as those belonging to people standing
            in the background.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. By default, <code>IndexFaces</code> chooses the quality bar that's used
            to filter faces. You can also explicitly choose the quality bar. Use <code>QualityFilter</code>,
            to set the quality bar by specifying <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>.
            If you do not want to filter detected faces, specify <code>NONE</code>. 
            </para>
             <note> 
            <para>
            To use quality filtering, you need a collection associated with version 3 of the face
            model or higher. To get the version of the face model associated with a collection,
            call <a>DescribeCollection</a>. 
            </para>
             </note> 
            <para>
            Information about faces detected in an image, but not indexed, is returned in an array
            of <a>UnindexedFace</a> objects, <code>UnindexedFaces</code>. Faces aren't indexed
            for reasons such as:
            </para>
             <ul> <li> 
            <para>
            The number of faces detected exceeds the value of the <code>MaxFaces</code> request
            parameter.
            </para>
             </li> <li> 
            <para>
            The face is too small compared to the image dimensions.
            </para>
             </li> <li> 
            <para>
            The face is too blurry.
            </para>
             </li> <li> 
            <para>
            The image is too dark.
            </para>
             </li> <li> 
            <para>
            The face has an extreme pose.
            </para>
             </li> <li> 
            <para>
            The face doesn’t have enough detail to be suitable for face search.
            </para>
             </li> </ul> 
            <para>
            In response, the <code>IndexFaces</code> operation returns an array of metadata for
            all detected faces, <code>FaceRecords</code>. This includes: 
            </para>
             <ul> <li> 
            <para>
            The bounding box, <code>BoundingBox</code>, of the detected face. 
            </para>
             </li> <li> 
            <para>
            A confidence value, <code>Confidence</code>, which indicates the confidence that the
            bounding box contains a face.
            </para>
             </li> <li> 
            <para>
            A face ID, <code>FaceId</code>, assigned by the service for each face that's detected
            and stored.
            </para>
             </li> <li> 
            <para>
            An image ID, <code>ImageId</code>, assigned by the service for the input image.
            </para>
             </li> </ul> 
            <para>
            If you request all facial attributes (by using the <code>detectionAttributes</code>
            parameter), Amazon Rekognition returns detailed facial attributes, such as facial
            landmarks (for example, location of eye and mouth) and other facial attributes. If
            you provide the same image, specify the same collection, and use the same external
            ID in the <code>IndexFaces</code> operation, Amazon Rekognition doesn't save duplicate
            face metadata.
            </para>
              
            <para>
            The input image is passed either as base64-encoded image bytes, or as a reference
            to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes isn't supported. The image must be formatted as a
            PNG or JPEG file. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:IndexFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            The ID of an existing collection to which you want to add the faces that are detected
            in the input images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.DetectionAttributes">
            <summary>
            Gets and sets the property DetectionAttributes. 
            <para>
            An array of facial attributes that you want to be returned. This can be the default
            list of attributes or all attributes. If you don't specify a value for <code>Attributes</code>
            or if you specify <code>["DEFAULT"]</code>, the API returns the following subset of
            facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>,
            <code>Quality</code>, and <code>Landmarks</code>. If you provide <code>["ALL"]</code>,
            all facial attributes are returned, but the operation takes longer to complete.
            </para>
             
            <para>
            If you provide both, <code>["ALL", "DEFAULT"]</code>, the service uses a logical AND
            operator to determine which attributes to return (in this case, all attributes). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.ExternalImageId">
            <summary>
            Gets and sets the property ExternalImageId. 
            <para>
            The ID you want to assign to all the faces detected in the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes isn't supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.MaxFaces">
            <summary>
            Gets and sets the property MaxFaces. 
            <para>
            The maximum number of faces to index. The value of <code>MaxFaces</code> must be greater
            than or equal to 1. <code>IndexFaces</code> returns no more than 100 detected faces
            in an image, even if you specify a larger value for <code>MaxFaces</code>.
            </para>
             
            <para>
            If <code>IndexFaces</code> detects more faces than the value of <code>MaxFaces</code>,
            the faces with the lowest quality are filtered out first. If there are still more
            faces than the value of <code>MaxFaces</code>, the faces with the smallest bounding
            boxes are filtered out (up to the number that's needed to satisfy the value of <code>MaxFaces</code>).
            Information about the unindexed faces is available in the <code>UnindexedFaces</code>
            array. 
            </para>
             
            <para>
            The faces that are returned by <code>IndexFaces</code> are sorted by the largest face
            bounding box size to the smallest size, in descending order.
            </para>
             
            <para>
             <code>MaxFaces</code> can be used with a collection associated with any version of
            the face model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.QualityFilter">
            <summary>
            Gets and sets the property QualityFilter. 
            <para>
            A filter that specifies a quality bar for how much filtering is done to identify faces.
            Filtered faces aren't indexed. If you specify <code>AUTO</code>, Amazon Rekognition
            chooses the quality bar. If you specify <code>LOW</code>, <code>MEDIUM</code>, or
            <code>HIGH</code>, filtering removes all faces that don’t meet the chosen quality
            bar. The default value is <code>AUTO</code>. The quality bar is based on a variety
            of common use cases. Low-quality detections can occur for a number of reasons. Some
            examples are an object that's misidentified as a face, a face that's too blurry, or
            a face with a pose that's too extreme to use. If you specify <code>NONE</code>, no
            filtering is performed. 
            </para>
             
            <para>
            To use quality filtering, the collection you are using must be associated with version
            3 of the face model or higher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IndexFacesResponse">
            <summary>
            This is the response object from the IndexFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            The version number of the face detection model that's associated with the input collection
            (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.FaceRecords">
            <summary>
            Gets and sets the property FaceRecords. 
            <para>
            An array of faces detected and added to the collection. For more information, see
            Searching Faces in a Collection in the Amazon Rekognition Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
            If your collection is associated with a face detection model that's later than version
            3.0, the value of <code>OrientationCorrection</code> is always null and no orientation
            information is returned.
            </para>
             
            <para>
            If your collection is associated with a face detection model that's version 3.0 or
            earlier, the following applies:
            </para>
             <ul> <li> 
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image file format
            (Exif) metadata that includes the image's orientation. Amazon Rekognition uses this
            orientation information to perform image correction - the bounding box coordinates
            are translated to represent object locations after the orientation information in
            the Exif metadata is used to correct the image orientation. Images in .png format
            don't contain Exif metadata. The value of <code>OrientationCorrection</code> is null.
            </para>
             </li> <li> 
            <para>
            If the image doesn't contain orientation information in its Exif metadata, Amazon
            Rekognition returns an estimated orientation (ROTATE_0, ROTATE_90, ROTATE_180, ROTATE_270).
            Amazon Rekognition doesn’t perform image correction for images. The bounding box coordinates
            aren't translated and represent the object locations before the image is rotated.
            </para>
             </li> </ul> 
            <para>
            Bounding box information is returned in the <code>FaceRecords</code> array. You can
            get the version of the face detection model by calling <a>DescribeCollection</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.UnindexedFaces">
            <summary>
            Gets and sets the property UnindexedFaces. 
            <para>
            An array of faces that were detected in the image but weren't indexed. They weren't
            indexed because the quality filter identified them as low quality, or the <code>MaxFaces</code>
            request parameter filtered them out. To use the quality filter, you specify the <code>QualityFilter</code>
            request parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Instance">
            <summary>
            An instance of a label returned by Amazon Rekognition Image (<a>DetectLabels</a>)
            or by Amazon Rekognition Video (<a>GetLabelDetection</a>).
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Instance.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            The position of the label instance on the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Instance.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has in the accuracy of the bounding box.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.InternalServerErrorException">
            <summary>
            Amazon Rekognition experienced a service issue. Try your call again.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller">
            <summary>
            Response Unmarshaller for AgeRange Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#AgeRange,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetMarshaller">
            <summary>
            Asset Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetMarshaller.Marshall(Amazon.Rekognition.Model.Asset,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetUnmarshaller">
            <summary>
            Response Unmarshaller for Asset Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Asset,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.AssetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.AudioMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for AudioMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AudioMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#AudioMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AudioMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.AudioMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller">
            <summary>
            Response Unmarshaller for Beard Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Beard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.BlackFrameMarshaller">
            <summary>
            BlackFrame Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BlackFrameMarshaller.Marshall(Amazon.Rekognition.Model.BlackFrame,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.BlackFrameMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxMarshaller">
            <summary>
            BoundingBox Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxMarshaller.Marshall(Amazon.Rekognition.Model.BoundingBox,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller">
            <summary>
            Response Unmarshaller for BoundingBox Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#BoundingBox,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller">
            <summary>
            Response Unmarshaller for CelebrityDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CelebrityDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller">
            <summary>
            Response Unmarshaller for CelebrityRecognition Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CelebrityRecognition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller">
            <summary>
            Response Unmarshaller for Celebrity Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Celebrity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller">
            <summary>
            Response Unmarshaller for ComparedFace Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ComparedFace,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller">
            <summary>
            Response Unmarshaller for ComparedSourceImageFace Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ComparedSourceImageFace,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller">
            <summary>
            Response Unmarshaller for CompareFacesMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CompareFacesMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller">
            <summary>
            CompareFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.CompareFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CompareFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsForUpdateMarshaller">
            <summary>
            ConnectedHomeSettingsForUpdate Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsForUpdateMarshaller.Marshall(Amazon.Rekognition.Model.ConnectedHomeSettingsForUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsForUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsMarshaller">
            <summary>
            ConnectedHomeSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsMarshaller.Marshall(Amazon.Rekognition.Model.ConnectedHomeSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectedHomeSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ConnectedHomeSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ConnectedHomeSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for ContentModerationDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ContentModerationDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionRequestMarshaller">
            <summary>
            CopyProjectVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionRequestMarshaller.Marshall(Amazon.Rekognition.Model.CopyProjectVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyProjectVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CopyProjectVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CoversBodyPartUnmarshaller">
            <summary>
            Response Unmarshaller for CoversBodyPart Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CoversBodyPartUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CoversBodyPart,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CoversBodyPartUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CoversBodyPartUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller">
            <summary>
            CreateCollection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateCollectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCollection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller">
            <summary>
            CreateDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller">
            <summary>
            CreateProject Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateProjectRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateProject operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionRequestMarshaller">
            <summary>
            CreateProjectVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateProjectVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateProjectVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateProjectVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller">
            <summary>
            CreateStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CustomLabelUnmarshaller">
            <summary>
            Response Unmarshaller for CustomLabel Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CustomLabelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CustomLabel,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CustomLabelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CustomLabelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetChangesMarshaller">
            <summary>
            DatasetChanges Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetChangesMarshaller.Marshall(Amazon.Rekognition.Model.DatasetChanges,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetChangesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#DatasetDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetLabelDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#DatasetLabelDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelStatsUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetLabelStats Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelStatsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#DatasetLabelStats,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelStatsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetLabelStatsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#DatasetMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetSourceMarshaller">
            <summary>
            DatasetSource Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetSourceMarshaller.Marshall(Amazon.Rekognition.Model.DatasetSource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetSourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetStatsUnmarshaller">
            <summary>
            Response Unmarshaller for DatasetStats Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetStatsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#DatasetStats,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetStatsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DatasetStatsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller">
            <summary>
            DeleteCollection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteCollectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCollection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller">
            <summary>
            DeleteDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller">
            <summary>
            DeleteFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyRequestMarshaller">
            <summary>
            DeleteProjectPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteProjectPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteProjectPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller">
            <summary>
            DeleteProject Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteProjectRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteProject operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionRequestMarshaller">
            <summary>
            DeleteProjectVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteProjectVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteProjectVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteProjectVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller">
            <summary>
            DeleteStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionRequestMarshaller">
            <summary>
            DescribeCollection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.DescribeCollectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCollection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeCollectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller">
            <summary>
            DescribeDataset Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Marshall(Amazon.Rekognition.Model.DescribeDatasetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataset operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsRequestMarshaller">
            <summary>
            DescribeProjects Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DescribeProjectsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeProjects operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsRequestMarshaller">
            <summary>
            DescribeProjectVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DescribeProjectVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeProjectVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeProjectVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller">
            <summary>
            DescribeStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.DescribeStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsRequestMarshaller">
            <summary>
            DetectCustomLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectCustomLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectCustomLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectCustomLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller">
            <summary>
            DetectFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectionFilterMarshaller">
            <summary>
            DetectionFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectionFilterMarshaller.Marshall(Amazon.Rekognition.Model.DetectionFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectionFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller">
            <summary>
            DetectLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller">
            <summary>
            DetectModerationLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectModerationLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectModerationLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentRequestMarshaller">
            <summary>
            DetectProtectiveEquipment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectProtectiveEquipmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectProtectiveEquipment operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectProtectiveEquipmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextFiltersMarshaller">
            <summary>
            DetectTextFilters Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextFiltersMarshaller.Marshall(Amazon.Rekognition.Model.DetectTextFilters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextFiltersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller">
            <summary>
            DetectText Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectTextRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectText operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesRequestMarshaller">
            <summary>
            DistributeDatasetEntries Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesRequestMarshaller.Marshall(Amazon.Rekognition.Model.DistributeDatasetEntriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DistributeDatasetEntries operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetEntriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetMarshaller">
            <summary>
            DistributeDataset Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetMarshaller.Marshall(Amazon.Rekognition.Model.DistributeDataset,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.DistributeDatasetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller">
            <summary>
            Response Unmarshaller for Emotion Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Emotion,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EquipmentDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for EquipmentDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EquipmentDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#EquipmentDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EquipmentDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EquipmentDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EvaluationResultUnmarshaller">
            <summary>
            Response Unmarshaller for EvaluationResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EvaluationResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#EvaluationResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EvaluationResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EvaluationResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller">
            <summary>
            Response Unmarshaller for Eyeglasses Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Eyeglasses,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller">
            <summary>
            Response Unmarshaller for EyeOpen Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#EyeOpen,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller">
            <summary>
            Response Unmarshaller for FaceDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for FaceDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller">
            <summary>
            Response Unmarshaller for FaceMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller">
            <summary>
            Response Unmarshaller for FaceRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsMarshaller">
            <summary>
            FaceSearchSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsMarshaller.Marshall(Amazon.Rekognition.Model.FaceSearchSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for FaceSearchSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceSearchSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller">
            <summary>
            Response Unmarshaller for Face Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Face,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller">
            <summary>
            Response Unmarshaller for Gender Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Gender,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller">
            <summary>
            Response Unmarshaller for Geometry Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Geometry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller">
            <summary>
            GetCelebrityInfo Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetCelebrityInfoRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCelebrityInfo operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller">
            <summary>
            GetCelebrityRecognition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCelebrityRecognition operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller">
            <summary>
            GetContentModeration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetContentModerationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetContentModeration operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller">
            <summary>
            GetFaceDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetFaceDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFaceDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller">
            <summary>
            GetFaceSearch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetFaceSearchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFaceSearch operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller">
            <summary>
            GetLabelDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetLabelDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLabelDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller">
            <summary>
            GetPersonTracking Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetPersonTrackingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPersonTracking operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionRequestMarshaller">
            <summary>
            GetSegmentDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetSegmentDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSegmentDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetSegmentDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionRequestMarshaller">
            <summary>
            GetTextDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetTextDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTextDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetTextDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestMarshaller">
            <summary>
            GroundTruthManifest Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestMarshaller.Marshall(Amazon.Rekognition.Model.GroundTruthManifest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestUnmarshaller">
            <summary>
            Response Unmarshaller for GroundTruthManifest Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#GroundTruthManifest,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GroundTruthManifestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller">
            <summary>
            Response Unmarshaller for HumanLoopActivationOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#HumanLoopActivationOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopActivationOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller">
            <summary>
            HumanLoopConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller.Marshall(Amazon.Rekognition.Model.HumanLoopConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller">
            <summary>
            HumanLoopDataAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller.Marshall(Amazon.Rekognition.Model.HumanLoopDataAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopDataAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for HumanLoopQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.HumanLoopQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for IdempotentParameterMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageMarshaller">
            <summary>
            Image Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageMarshaller.Marshall(Amazon.Rekognition.Model.Image,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller">
            <summary>
            Response Unmarshaller for ImageQuality Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ImageQuality,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageTooLargeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ImageTooLargeException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageTooLargeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller">
            <summary>
            IndexFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.IndexFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IndexFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InstanceUnmarshaller">
            <summary>
            Response Unmarshaller for Instance Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Instance,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidImageFormatExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidImageFormatException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidImageFormatExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidImageFormatExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidImageFormatExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPaginationTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPaginationTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPaginationTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPaginationTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPaginationTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPolicyRevisionIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPolicyRevisionIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPolicyRevisionIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPolicyRevisionIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidPolicyRevisionIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidS3ObjectException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.InvalidS3ObjectExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamMarshaller">
            <summary>
            KinesisDataStream Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamMarshaller.Marshall(Amazon.Rekognition.Model.KinesisDataStream,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisDataStream Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#KinesisDataStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamMarshaller">
            <summary>
            KinesisVideoStream Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamMarshaller.Marshall(Amazon.Rekognition.Model.KinesisVideoStream,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamStartSelectorMarshaller">
            <summary>
            KinesisVideoStreamStartSelector Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamStartSelectorMarshaller.Marshall(Amazon.Rekognition.Model.KinesisVideoStreamStartSelector,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamStartSelectorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisVideoStream Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#KinesisVideoStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KnownGenderUnmarshaller">
            <summary>
            Response Unmarshaller for KnownGender Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KnownGenderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#KnownGender,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KnownGenderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.KnownGenderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for LabelDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#LabelDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller">
            <summary>
            Response Unmarshaller for Label Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Label,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller">
            <summary>
            Response Unmarshaller for Landmark Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Landmark,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller">
            <summary>
            ListCollections Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListCollectionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCollections operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesRequestMarshaller">
            <summary>
            ListDatasetEntries Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListDatasetEntriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDatasetEntries operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetEntriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsRequestMarshaller">
            <summary>
            ListDatasetLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListDatasetLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDatasetLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListDatasetLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller">
            <summary>
            ListFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesRequestMarshaller">
            <summary>
            ListProjectPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListProjectPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProjectPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListProjectPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller">
            <summary>
            ListStreamProcessors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListStreamProcessorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListStreamProcessors operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MalformedPolicyDocumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.MalformedPolicyDocumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller">
            <summary>
            Response Unmarshaller for ModerationLabel Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ModerationLabel,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller">
            <summary>
            Response Unmarshaller for MouthOpen Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#MouthOpen,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller">
            <summary>
            Response Unmarshaller for Mustache Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Mustache,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.NotificationChannelMarshaller">
            <summary>
            NotificationChannel Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Marshall(Amazon.Rekognition.Model.NotificationChannel,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigMarshaller">
            <summary>
            OutputConfig Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigMarshaller.Marshall(Amazon.Rekognition.Model.OutputConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller">
            <summary>
            Response Unmarshaller for OutputConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#OutputConfig,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.OutputConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ParentUnmarshaller">
            <summary>
            Response Unmarshaller for Parent Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ParentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Parent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ParentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ParentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller">
            <summary>
            Response Unmarshaller for PersonDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#PersonDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for PersonDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#PersonDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller">
            <summary>
            Response Unmarshaller for PersonMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#PersonMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointMarshaller">
            <summary>
            Point Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointMarshaller.Marshall(Amazon.Rekognition.Model.Point,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller">
            <summary>
            Response Unmarshaller for Point Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Point,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller">
            <summary>
            Response Unmarshaller for Pose Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Pose,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProjectDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ProjectDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for ProjectPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ProjectPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectVersionDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProjectVersionDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectVersionDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ProjectVersionDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectVersionDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProjectVersionDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentBodyPartUnmarshaller">
            <summary>
            Response Unmarshaller for ProtectiveEquipmentBodyPart Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentBodyPartUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ProtectiveEquipmentBodyPart,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentBodyPartUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentBodyPartUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentPersonUnmarshaller">
            <summary>
            Response Unmarshaller for ProtectiveEquipmentPerson Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentPersonUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ProtectiveEquipmentPerson,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentPersonUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentPersonUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummarizationAttributesMarshaller">
            <summary>
            ProtectiveEquipmentSummarizationAttributes Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummarizationAttributesMarshaller.Marshall(Amazon.Rekognition.Model.ProtectiveEquipmentSummarizationAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummarizationAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ProtectiveEquipmentSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ProtectiveEquipmentSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProtectiveEquipmentSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionedThroughputExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyRequestMarshaller">
            <summary>
            PutProjectPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyRequestMarshaller.Marshall(Amazon.Rekognition.Model.PutProjectPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutProjectPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PutProjectPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller">
            <summary>
            RecognizeCelebrities Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller.Marshall(Amazon.Rekognition.Model.RecognizeCelebritiesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RecognizeCelebrities operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestMarshaller">
            <summary>
            RegionOfInterest Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestMarshaller.Marshall(Amazon.Rekognition.Model.RegionOfInterest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestUnmarshaller">
            <summary>
            Response Unmarshaller for RegionOfInterest Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#RegionOfInterest,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.RegionOfInterestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotReadyException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ResourceNotReadyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationMarshaller">
            <summary>
            S3Destination Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationMarshaller.Marshall(Amazon.Rekognition.Model.S3Destination,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationUnmarshaller">
            <summary>
            Response Unmarshaller for S3Destination Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#S3Destination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3DestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectMarshaller">
            <summary>
            S3Object Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Marshall(Amazon.Rekognition.Model.S3Object,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller">
            <summary>
            Response Unmarshaller for S3Object Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#S3Object,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller">
            <summary>
            SearchFacesByImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller.Marshall(Amazon.Rekognition.Model.SearchFacesByImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchFacesByImage operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller">
            <summary>
            SearchFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.SearchFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for SegmentDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#SegmentDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentTypeInfoUnmarshaller">
            <summary>
            Response Unmarshaller for SegmentTypeInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentTypeInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#SegmentTypeInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentTypeInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SegmentTypeInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ShotSegmentUnmarshaller">
            <summary>
            Response Unmarshaller for ShotSegment Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ShotSegmentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ShotSegment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ShotSegmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ShotSegmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller">
            <summary>
            Response Unmarshaller for Smile Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Smile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller">
            <summary>
            StartCelebrityRecognition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartCelebrityRecognitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartCelebrityRecognition operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller">
            <summary>
            StartContentModeration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartContentModerationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartContentModeration operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller">
            <summary>
            StartFaceDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartFaceDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartFaceDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller">
            <summary>
            StartFaceSearch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartFaceSearchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartFaceSearch operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller">
            <summary>
            StartLabelDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartLabelDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartLabelDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller">
            <summary>
            StartPersonTracking Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartPersonTrackingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartPersonTracking operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionRequestMarshaller">
            <summary>
            StartProjectVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartProjectVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartProjectVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartProjectVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionFiltersMarshaller">
            <summary>
            StartSegmentDetectionFilters Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionFiltersMarshaller.Marshall(Amazon.Rekognition.Model.StartSegmentDetectionFilters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionFiltersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionRequestMarshaller">
            <summary>
            StartSegmentDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartSegmentDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartSegmentDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartSegmentDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartShotDetectionFilterMarshaller">
            <summary>
            StartShotDetectionFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartShotDetectionFilterMarshaller.Marshall(Amazon.Rekognition.Model.StartShotDetectionFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartShotDetectionFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller">
            <summary>
            StartStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTechnicalCueDetectionFilterMarshaller">
            <summary>
            StartTechnicalCueDetectionFilter Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTechnicalCueDetectionFilterMarshaller.Marshall(Amazon.Rekognition.Model.StartTechnicalCueDetectionFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTechnicalCueDetectionFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionFiltersMarshaller">
            <summary>
            StartTextDetectionFilters Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionFiltersMarshaller.Marshall(Amazon.Rekognition.Model.StartTextDetectionFilters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionFiltersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionRequestMarshaller">
            <summary>
            StartTextDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartTextDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartTextDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartTextDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionRequestMarshaller">
            <summary>
            StopProjectVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StopProjectVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopProjectVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopProjectVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller">
            <summary>
            StopStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.StopStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessingStartSelectorMarshaller">
            <summary>
            StreamProcessingStartSelector Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessingStartSelectorMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessingStartSelector,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessingStartSelectorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessingStopSelectorMarshaller">
            <summary>
            StreamProcessingStopSelector Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessingStopSelectorMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessingStopSelector,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessingStopSelectorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceMarshaller">
            <summary>
            StreamProcessorDataSharingPreference Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorDataSharingPreference,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorDataSharingPreference Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorDataSharingPreference,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorDataSharingPreferenceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputMarshaller">
            <summary>
            StreamProcessorInput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorInput Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorInput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelMarshaller">
            <summary>
            StreamProcessorNotificationChannel Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorNotificationChannel,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorNotificationChannel Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorNotificationChannel,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorNotificationChannelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputMarshaller">
            <summary>
            StreamProcessorOutput Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorOutput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsForUpdateMarshaller">
            <summary>
            StreamProcessorSettingsForUpdate Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsForUpdateMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorSettingsForUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsForUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsMarshaller">
            <summary>
            StreamProcessorSettings Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessor Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessor,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SummaryUnmarshaller">
            <summary>
            Response Unmarshaller for Summary Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Summary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller">
            <summary>
            Response Unmarshaller for Sunglasses Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Sunglasses,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Rekognition.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TechnicalCueSegmentUnmarshaller">
            <summary>
            Response Unmarshaller for TechnicalCueSegment Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TechnicalCueSegmentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TechnicalCueSegment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TechnicalCueSegmentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TechnicalCueSegmentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataMarshaller">
            <summary>
            TestingData Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataMarshaller.Marshall(Amazon.Rekognition.Model.TestingData,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataResultUnmarshaller">
            <summary>
            Response Unmarshaller for TestingDataResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TestingDataResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataUnmarshaller">
            <summary>
            Response Unmarshaller for TestingData Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TestingData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TestingDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionResultUnmarshaller">
            <summary>
            Response Unmarshaller for TextDetectionResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TextDetectionResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for TextDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TextDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataMarshaller">
            <summary>
            TrainingData Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataMarshaller.Marshall(Amazon.Rekognition.Model.TrainingData,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataResultUnmarshaller">
            <summary>
            Response Unmarshaller for TrainingDataResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TrainingDataResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataUnmarshaller">
            <summary>
            Response Unmarshaller for TrainingData Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TrainingData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TrainingDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UnindexedFaceUnmarshaller">
            <summary>
            Response Unmarshaller for UnindexedFace Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UnindexedFaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#UnindexedFace,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UnindexedFaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UnindexedFaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Rekognition.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesRequestMarshaller">
            <summary>
            UpdateDatasetEntries Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesRequestMarshaller.Marshall(Amazon.Rekognition.Model.UpdateDatasetEntriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDatasetEntries operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateDatasetEntriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorRequestMarshaller">
            <summary>
            UpdateStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.UpdateStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.UpdateStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ValidationDataUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationData Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ValidationDataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ValidationData,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ValidationDataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ValidationDataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMarshaller">
            <summary>
            Video Marshaller
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMarshaller.Marshall(Amazon.Rekognition.Model.Video,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for VideoMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#VideoMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoTooLargeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for VideoTooLargeException Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoTooLargeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            <summary>
            The provided image format is not supported.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidImageFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            <summary>
            Pagination token in the request is not valid.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPaginationTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidParameterException">
            <summary>
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException">
            <summary>
            The supplied revision id for the project policy is invalid.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPolicyRevisionIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPolicyRevisionIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPolicyRevisionIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPolicyRevisionIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPolicyRevisionIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            <summary>
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidS3ObjectException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.KinesisDataStream">
            <summary>
            The Kinesis data stream Amazon Rekognition to which the analysis results of a Amazon
            Rekognition stream processor are streamed. For more information, see CreateStreamProcessor
            in the Amazon Rekognition Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KinesisDataStream.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            ARN of the output Amazon Kinesis Data Streams stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.KinesisVideoStream">
            <summary>
            Kinesis video stream stream that provides the source streaming video for a Amazon
            Rekognition Video stream processor. For more information, see CreateStreamProcessor
            in the Amazon Rekognition Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KinesisVideoStream.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            ARN of the Kinesis video stream stream that streams the source video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.KinesisVideoStreamStartSelector">
            <summary>
            Specifies the starting point in a Kinesis stream to start processing. You can use
            the producer timestamp or the fragment number. For more information, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_reader_Fragment.html">Fragment</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KinesisVideoStreamStartSelector.FragmentNumber">
            <summary>
            Gets and sets the property FragmentNumber. 
            <para>
             The unique identifier of the fragment. This value monotonically increases based on
            the ingestion order. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KinesisVideoStreamStartSelector.ProducerTimestamp">
            <summary>
            Gets and sets the property ProducerTimestamp. 
            <para>
             The timestamp from the producer corresponding to the fragment. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.KnownGender">
            <summary>
            The known gender identity for the celebrity that matches the provided ID. The known
            gender identity can be Male, Female, Nonbinary, or Unlisted.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KnownGender.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            A string value of the KnownGender info about the Celebrity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Label">
            <summary>
            Structure containing details about the detected label, including the name, detected
            instances, parent labels, and level of confidence.
            
             
            <para>
             
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Label.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Label.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            If <code>Label</code> represents an object, <code>Instances</code> contains the bounding
            boxes for each instance of the detected object. Bounding boxes are returned for common
            object labels such as people, cars, furniture, apparel or pets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Label.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name (label) of the object or scene.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Label.Parents">
            <summary>
            Gets and sets the property Parents. 
            <para>
            The parent labels for a label. The response includes all ancestor labels.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.LabelDetection">
            <summary>
            Information about a label detected in a video analysis request and the time the label
            was detected in the video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.LabelDetection.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            Details about the detected label.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.LabelDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time, in milliseconds from the start of the video, that the label was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Landmark">
            <summary>
            Indicates the location of the landmark on the face.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Landmark.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of landmark.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Landmark.X">
            <summary>
            Gets and sets the property X. 
            <para>
            The x-coordinate of the landmark expressed as a ratio of the width of the image. The
            x-coordinate is measured from the left-side of the image. For example, if the image
            is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value
            is 0.5. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Landmark.Y">
            <summary>
            Gets and sets the property Y. 
            <para>
            The y-coordinate of the landmark expressed as a ratio of the height of the image.
            The y-coordinate is measured from the top of the image. For example, if the image
            height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value
            is 0.25.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.LimitExceededException">
            <summary>
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListCollectionsRequest">
            <summary>
            Container for the parameters to the ListCollections operation.
            Returns list of collection IDs in your account. If the result is truncated, the response
            also provides a <code>NextToken</code> that you can use in the subsequent request
            to fetch the next set of collection IDs.
            
             
            <para>
            For an example, see Listing collections in the Amazon Rekognition Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListCollections</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of collection IDs to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Pagination token from the previous response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListCollectionsResponse">
            <summary>
            This is the response object from the ListCollections operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsResponse.CollectionIds">
            <summary>
            Gets and sets the property CollectionIds. 
            <para>
            An array of collection IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsResponse.FaceModelVersions">
            <summary>
            Gets and sets the property FaceModelVersions. 
            <para>
            Version numbers of the face detection models associated with the collections in the
            array <code>CollectionIds</code>. For example, the value of <code>FaceModelVersions[2]</code>
            is the version number for the face detection model used by the collection in <code>CollectionId[2]</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the result is truncated, the response provides a <code>NextToken</code> that you
            can use in the subsequent request to fetch the next set of collection IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListDatasetEntriesRequest">
            <summary>
            Container for the parameters to the ListDatasetEntries operation.
            Lists the entries (images) within a dataset. An entry is a JSON Line that contains
            the information for a single image, including the image location, assigned labels,
            and object location bounding boxes. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-manifest-files.html">Creating
            a manifest file</a>.
            
             
            <para>
            JSON Lines in the response include information about non-terminal errors found in
            the dataset. Non terminal errors are reported in <code>errors</code> lists within
            each JSON Line. The same information is reported in the training and testing validation
            result manifests that Amazon Rekognition Custom Labels creates during model training.
            
            </para>
             
            <para>
            You can filter the response in variety of ways, such as choosing which labels to return
            and returning JSON Lines created after a specific date. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListDatasetEntries</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.ContainsLabels">
            <summary>
            Gets and sets the property ContainsLabels. 
            <para>
            Specifies a label filter for the response. The response includes an entry only if
            one or more of the labels in <code>ContainsLabels</code> exist in the entry. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) for the dataset that you want to use. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.HasErrors">
            <summary>
            Gets and sets the property HasErrors. 
            <para>
            Specifies an error filter for the response. Specify <code>True</code> to only include
            entries that have errors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.Labeled">
            <summary>
            Gets and sets the property Labeled. 
            <para>
             Specify <code>true</code> to get only the JSON Lines where the image is labeled.
            Specify <code>false</code> to get only the JSON Lines where the image isn't labeled.
            If you don't specify <code>Labeled</code>, <code>ListDatasetEntries</code> returns
            JSON Lines for labeled and unlabeled images. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 100. If you specify a value greater than 100, a ValidationException
            error occurs. The default value is 100. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesRequest.SourceRefContains">
            <summary>
            Gets and sets the property SourceRefContains. 
            <para>
            If specified, <code>ListDatasetEntries</code> only returns JSON Lines where the value
            of <code>SourceRefContains</code> is part of the <code>source-ref</code> field. The
            <code>source-ref</code> field contains the Amazon S3 location of the image. You can
            use <code>SouceRefContains</code> for tasks such as getting the JSON Line for a single
            image, or gettting JSON Lines for all images within a specific folder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListDatasetEntriesResponse">
            <summary>
            This is the response object from the ListDatasetEntries operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesResponse.DatasetEntries">
            <summary>
            Gets and sets the property DatasetEntries. 
            <para>
             A list of entries (images) in the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListDatasetLabelsRequest">
            <summary>
            Container for the parameters to the ListDatasetLabels operation.
            Lists the labels in a dataset. Amazon Rekognition Custom Labels uses labels to describe
            images. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-labeling-images.html">Labeling
            images</a>. 
            
             
            <para>
             Lists the labels in a dataset. Amazon Rekognition Custom Labels uses labels to describe
            images. For more information, see Labeling images in the <i>Amazon Rekognition Custom
            Labels Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsRequest.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset that you want to use. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 100. If you specify a value greater than 100, a ValidationException
            error occurs. The default value is 100. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListDatasetLabelsResponse">
            <summary>
            This is the response object from the ListDatasetLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsResponse.DatasetLabelDescriptions">
            <summary>
            Gets and sets the property DatasetLabelDescriptions. 
            <para>
             A list of the labels in the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListFacesRequest">
            <summary>
            Container for the parameters to the ListFaces operation.
            Returns metadata for faces in the specified collection. This metadata includes information
            such as the bounding box coordinates, the confidence (that the bounding box contains
            a face), and face ID. For an example, see Listing Faces in a Collection in the Amazon
            Rekognition Developer Guide.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection from which to list the faces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of faces to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more data to retrieve),
            Amazon Rekognition returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of faces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListFacesResponse">
            <summary>
            This is the response object from the ListFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesResponse.Faces">
            <summary>
            Gets and sets the property Faces. 
            <para>
            An array of <code>Face</code> objects. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition returns this token that you can use
            in the subsequent request to retrieve the next set of faces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListProjectPoliciesRequest">
            <summary>
            Container for the parameters to the ListProjectPolicies operation.
            Gets a list of the project policies attached to a project.
            
             
            <para>
            To attach a project policy to a project, call <a>PutProjectPolicy</a>. To remove a
            project policy from a project, call <a>DeleteProjectPolicy</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return per paginated call. The largest value you
            can specify is 5. If you specify a value greater than 5, a ValidationException error
            occurs. The default value is 5. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more results to retrieve),
            Amazon Rekognition Custom Labels returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The ARN of the project for which you want to list the project policies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListProjectPoliciesResponse">
            <summary>
            This is the response object from the ListProjectPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition returns this token that you can use
            in the subsequent request to retrieve the next set of project policies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesResponse.ProjectPolicies">
            <summary>
            Gets and sets the property ProjectPolicies. 
            <para>
            A list of project policies attached to the project.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListStreamProcessorsRequest">
            <summary>
            Container for the parameters to the ListStreamProcessors operation.
            Gets a list of stream processors that you have created with <a>CreateStreamProcessor</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of stream processors you want Amazon Rekognition Video to return in
            the response. The default is 1000. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more stream processors
            to retrieve), Amazon Rekognition Video returns a pagination token in the response.
            You can use this pagination token to retrieve the next set of stream processors. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListStreamProcessorsResponse">
            <summary>
            This is the response object from the ListStreamProcessors operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition Video returns this token that you
            can use in the subsequent request to retrieve the next set of stream processors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsResponse.StreamProcessors">
            <summary>
            Gets and sets the property StreamProcessors. 
            <para>
            List of stream processors that you have created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns a list of tags in an Amazon Rekognition collection, stream processor, or
            Custom Labels model. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListTagsForResource</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
             Amazon Resource Name (ARN) of the model, collection, or stream processor that contains
            the tags that you want a list of. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             A list of key-value tags assigned to the resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.MalformedPolicyDocumentException">
            <summary>
            The format of the project policy document that you supplied to <code>PutProjectPolicy</code>
            is incorrect.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.MalformedPolicyDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.MalformedPolicyDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.MalformedPolicyDocumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.MalformedPolicyDocumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.MalformedPolicyDocumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyDocumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ModerationLabel">
            <summary>
            Provides information about a single type of inappropriate, unwanted, or offensive
            content found in an image or video. Each type of moderated content has a label within
            a hierarchical taxonomy. For more information, see Content moderation in the Amazon
            Rekognition Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ModerationLabel.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Specifies the confidence that Amazon Rekognition has that the label has been correctly
            identified.
            </para>
             
            <para>
            If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>,
            the operation returns labels with a confidence value greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ModerationLabel.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The label name for the type of unsafe content detected in the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ModerationLabel.ParentName">
            <summary>
            Gets and sets the property ParentName. 
            <para>
            The name for the parent label. Labels at the top level of the hierarchy have the parent
            label <code>""</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.MouthOpen">
            <summary>
            Indicates whether or not the mouth on the face is open, and the confidence level in
            the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.MouthOpen.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.MouthOpen.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the mouth on the face is open or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Mustache">
            <summary>
            Indicates whether or not the face has a mustache, and the confidence level in the
            determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Mustache.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Mustache.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face has mustache or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.NotificationChannel">
            <summary>
            The Amazon Simple Notification Service topic to which Amazon Rekognition publishes
            the completion status of a video analysis operation. For more information, see <a
            href="https://docs.aws.amazon.com/rekognition/latest/dg/api-video.html">Calling Amazon
            Rekognition Video operations</a>. Note that the Amazon SNS topic must have a topic
            name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy to access the topic. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/api-video-roles.html#api-video-roles-all-topics">Giving
            access to multiple Amazon SNS topics</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.NotificationChannel.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that gives Amazon Rekognition publishing permissions to the
            Amazon SNS topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.NotificationChannel.SNSTopicArn">
            <summary>
            Gets and sets the property SNSTopicArn. 
            <para>
            The Amazon SNS topic to which Amazon Rekognition posts the completion status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.OutputConfig">
            <summary>
            The S3 bucket and folder location where training output is placed.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.OutputConfig.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The S3 bucket where training output is placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.OutputConfig.S3KeyPrefix">
            <summary>
            Gets and sets the property S3KeyPrefix. 
            <para>
            The prefix applied to the training output files. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Parent">
            <summary>
            A parent label for a label. A label can have 0, 1, or more parents.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Parent.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the parent label.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PersonDetail">
            <summary>
            Details about a person detected in a video analysis request.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetail.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box around the detected person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetail.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Face details for the detected person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetail.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            Identifier for the person detected person within a video. Use to keep track of the
            person throughout the video. The identifier is not stored by Amazon Rekognition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PersonDetection">
            <summary>
            Details and path tracking information for a single time a person's path is tracked
            in a video. Amazon Rekognition operations that track people's paths return an array
            of <code>PersonDetection</code> objects with elements for each time a person's path
            is tracked in a video. 
            
             
            <para>
            For more information, see GetPersonTracking in the Amazon Rekognition Developer Guide.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetection.Person">
            <summary>
            Gets and sets the property Person. 
            <para>
            Details about a person whose path was tracked in a video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the start of the video, that the person's path was
            tracked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PersonMatch">
            <summary>
            Information about a person whose face matches a face(s) in an Amazon Rekognition collection.
            Includes information about the faces in the Amazon Rekognition collection (<a>FaceMatch</a>),
            information about the person (<a>PersonDetail</a>), and the time stamp for when the
            person was detected in a video. An array of <code>PersonMatch</code> objects is returned
            by <a>GetFaceSearch</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonMatch.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            Information about the faces in the input collection that match the face of a person
            in the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonMatch.Person">
            <summary>
            Gets and sets the property Person. 
            <para>
            Information about the matched person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonMatch.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the beginning of the video, that the person was matched
            in the video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Point">
            <summary>
            The X and Y coordinates of a point on an image or video frame. The X and Y values
            are ratios of the overall image size or video resolution. For example, if an input
            image is 700x200 and the values are X=0.5 and Y=0.25, then the point is at the (350,50)
            pixel coordinate on the image.
            
             
            <para>
            An array of <code>Point</code> objects makes up a <code>Polygon</code>. A <code>Polygon</code>
            is returned by <a>DetectText</a> and by <a>DetectCustomLabels</a> <code>Polygon</code>
            represents a fine-grained polygon around a detected item. For more information, see
            Geometry in the Amazon Rekognition Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Point.X">
            <summary>
            Gets and sets the property X. 
            <para>
            The value of the X coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Point.Y">
            <summary>
            Gets and sets the property Y. 
            <para>
            The value of the Y coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Pose">
            <summary>
            Indicates the pose of the face as determined by its pitch, roll, and yaw.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Pose.Pitch">
            <summary>
            Gets and sets the property Pitch. 
            <para>
            Value representing the face rotation on the pitch axis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Pose.Roll">
            <summary>
            Gets and sets the property Roll. 
            <para>
            Value representing the face rotation on the roll axis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Pose.Yaw">
            <summary>
            Gets and sets the property Yaw. 
            <para>
            Value representing the face rotation on the yaw axis.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProjectDescription">
            <summary>
            A description of an Amazon Rekognition Custom Labels project. For more information,
            see <a>DescribeProjects</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectDescription.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The Unix timestamp for the date and time that the project was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectDescription.Datasets">
            <summary>
            Gets and sets the property Datasets. 
            <para>
             Information about the training and test datasets in the project. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectDescription.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the project.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectDescription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the project.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProjectPolicy">
            <summary>
            Describes a project policy in the response from <a>ListProjectPolicies</a>. 
            
             
            <para>
             
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectPolicy.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The Unix datetime for the creation of the project policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectPolicy.LastUpdatedTimestamp">
            <summary>
            Gets and sets the property LastUpdatedTimestamp. 
            <para>
            The Unix datetime for when the project policy was last updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectPolicy.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document for the project policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectPolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the project policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectPolicy.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            The revision ID of the project policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectPolicy.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the project to which the project policy is attached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProjectVersionDescription">
            <summary>
            A description of a version of an Amazon Rekognition Custom Labels model.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.BillableTrainingTimeInSeconds">
            <summary>
            Gets and sets the property BillableTrainingTimeInSeconds. 
            <para>
            The duration, in seconds, that you were billed for a successful training of the model
            version. This value is only returned if the model version has been successfully trained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            The Unix datetime for the date and time that training started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.EvaluationResult">
            <summary>
            Gets and sets the property EvaluationResult. 
            <para>
            The training results. <code>EvaluationResult</code> is only returned if training is
            successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The identifer for the AWS Key Management Service key (AWS KMS key) that was used to
            encrypt the model during training. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.ManifestSummary">
            <summary>
            Gets and sets the property ManifestSummary. 
            <para>
            The location of the summary manifest. The summary manifest provides aggregate data
            validation results for the training and test datasets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.MaxInferenceUnits">
            <summary>
            Gets and sets the property MaxInferenceUnits. 
            <para>
            The maximum number of inference units Amazon Rekognition Custom Labels uses to auto-scale
            the model. For more information, see <a>StartProjectVersion</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.MinInferenceUnits">
            <summary>
            Gets and sets the property MinInferenceUnits. 
            <para>
            The minimum number of inference units used by the model. For more information, see
            <a>StartProjectVersion</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.OutputConfig">
            <summary>
            Gets and sets the property OutputConfig. 
            <para>
            The location where training results are saved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.SourceProjectVersionArn">
            <summary>
            Gets and sets the property SourceProjectVersionArn. 
            <para>
            If the model version was copied from a different project, <code>SourceProjectVersionArn</code>
            contains the ARN of the source model version. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the model version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A descriptive message for an error or warning that occurred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.TestingDataResult">
            <summary>
            Gets and sets the property TestingDataResult. 
            <para>
            Contains information about the testing results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.TrainingDataResult">
            <summary>
            Gets and sets the property TrainingDataResult. 
            <para>
            Contains information about the training results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProjectVersionDescription.TrainingEndTimestamp">
            <summary>
            Gets and sets the property TrainingEndTimestamp. 
            <para>
            The Unix date and time that training of the model ended.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProtectiveEquipmentBodyPart">
            <summary>
            Information about a body part detected by <a>DetectProtectiveEquipment</a> that contains
            PPE. An array of <code>ProtectiveEquipmentBodyPart</code> objects is returned for
            each person detected by <code>DetectProtectiveEquipment</code>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentBodyPart.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has in the detection accuracy of the detected
            body part. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentBodyPart.EquipmentDetections">
            <summary>
            Gets and sets the property EquipmentDetections. 
            <para>
            An array of Personal Protective Equipment items detected around a body part.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentBodyPart.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The detected body part.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProtectiveEquipmentPerson">
            <summary>
            A person detected by a call to <a>DetectProtectiveEquipment</a>. The API returns all
            persons detected in the input image in an array of <code>ProtectiveEquipmentPerson</code>
            objects.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentPerson.BodyParts">
            <summary>
            Gets and sets the property BodyParts. 
            <para>
            An array of body parts detected on a person's body (including body parts without PPE).
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentPerson.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            A bounding box around the detected person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentPerson.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has that the bounding box contains a person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentPerson.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The identifier for the detected person. The identifier is only unique for a single
            call to <code>DetectProtectiveEquipment</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProtectiveEquipmentSummarizationAttributes">
            <summary>
            Specifies summary attributes to return from a call to <a>DetectProtectiveEquipment</a>.
            You can specify which types of PPE to summarize. You can also specify a minimum confidence
            value for detections. Summary information is returned in the <code>Summary</code>
            (<a>ProtectiveEquipmentSummary</a>) field of the response from <code>DetectProtectiveEquipment</code>.
            The summary includes which persons in an image were detected wearing the requested
            types of person protective equipment (PPE), which persons were detected as not wearing
            PPE, and the persons in which a determination could not be made. For more information,
            see <a>ProtectiveEquipmentSummary</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentSummarizationAttributes.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            The minimum confidence level for which you want summary information. The confidence
            level applies to person detection, body part detection, equipment detection, and body
            part coverage. Amazon Rekognition doesn't return summary information with a confidence
            than this specified value. There isn't a default value.
            </para>
             
            <para>
            Specify a <code>MinConfidence</code> value that is between 50-100% as <code>DetectProtectiveEquipment</code>
            returns predictions only where the detection confidence is between 50% - 100%. If
            you specify a value that is less than 50%, the results are the same specifying a value
            of 50%.
            </para>
             
            <para>
             
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentSummarizationAttributes.RequiredEquipmentTypes">
            <summary>
            Gets and sets the property RequiredEquipmentTypes. 
            <para>
            An array of personal protective equipment types for which you want summary information.
            If a person is detected wearing a required requipment type, the person's ID is added
            to the <code>PersonsWithRequiredEquipment</code> array field returned in <a>ProtectiveEquipmentSummary</a>
            by <code>DetectProtectiveEquipment</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProtectiveEquipmentSummary">
            <summary>
            Summary information for required items of personal protective equipment (PPE) detected
            on persons by a call to <a>DetectProtectiveEquipment</a>. You specify the required
            type of PPE in the <code>SummarizationAttributes</code> (<a>ProtectiveEquipmentSummarizationAttributes</a>)
            input parameter. The summary includes which persons were detected wearing the required
            personal protective equipment (<code>PersonsWithRequiredEquipment</code>), which persons
            were detected as not wearing the required PPE (<code>PersonsWithoutRequiredEquipment</code>),
            and the persons in which a determination could not be made (<code>PersonsIndeterminate</code>).
            
             
            <para>
            To get a total for each category, use the size of the field array. For example, to
            find out how many people were detected as wearing the specified PPE, use the size
            of the <code>PersonsWithRequiredEquipment</code> array. If you want to find out more
            about a person, such as the location (<a>BoundingBox</a>) of the person on the image,
            use the person ID in each array element. Each person ID matches the ID field of a
            <a>ProtectiveEquipmentPerson</a> object returned in the <code>Persons</code> array
            by <code>DetectProtectiveEquipment</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentSummary.PersonsIndeterminate">
            <summary>
            Gets and sets the property PersonsIndeterminate. 
            <para>
            An array of IDs for persons where it was not possible to determine if they are wearing
            personal protective equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentSummary.PersonsWithoutRequiredEquipment">
            <summary>
            Gets and sets the property PersonsWithoutRequiredEquipment. 
            <para>
            An array of IDs for persons who are not wearing all of the types of PPE specified
            in the <code>RequiredEquipmentTypes</code> field of the detected personal protective
            equipment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ProtectiveEquipmentSummary.PersonsWithRequiredEquipment">
            <summary>
            Gets and sets the property PersonsWithRequiredEquipment. 
            <para>
            An array of IDs for persons who are wearing detected personal protective equipment.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            <summary>
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.PutProjectPolicyRequest">
            <summary>
            Container for the parameters to the PutProjectPolicy operation.
            Attaches a project policy to a Amazon Rekognition Custom Labels project in a trusting
            AWS account. A project policy specifies that a trusted AWS account can copy a model
            version from a trusting AWS account to a project in the trusted AWS account. To copy
            a model version you use the <a>CopyProjectVersion</a> operation.
            
             
            <para>
            For more information about the format of a project policy document, see Attaching
            a project policy (SDK) in the <i>Amazon Rekognition Custom Labels Developer Guide</i>.
            
            </para>
             
            <para>
            The response from <code>PutProjectPolicy</code> is a revision ID for the project policy.
            You can attach multiple project policies to a project. You can also update an existing
            project policy by specifying the policy revision ID of the existing policy.
            </para>
             
            <para>
            To remove a project policy from a project, call <a>DeleteProjectPolicy</a>. To get
            a list of project policies attached to a project, call <a>ListProjectPolicies</a>.
            
            </para>
             
            <para>
            You copy a model version by calling <a>CopyProjectVersion</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PutProjectPolicyRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            A resource policy to add to the model. The policy is a JSON structure that contains
            one or more statements that define the policy. The policy must follow the IAM syntax.
            For more information about the contents of a JSON policy document, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON policy reference</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PutProjectPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            A name for the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PutProjectPolicyRequest.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            The revision ID for the Project Policy. Each time you modify a policy, Amazon Rekognition
            Custom Labels generates and assigns a new <code>PolicyRevisionId</code> and then deletes
            the previous version of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PutProjectPolicyRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The Amazon Resource Name (ARN) of the project that the project policy is attached
            to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PutProjectPolicyResponse">
            <summary>
            This is the response object from the PutProjectPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PutProjectPolicyResponse.PolicyRevisionId">
            <summary>
            Gets and sets the property PolicyRevisionId. 
            <para>
            The ID of the project policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.RecognizeCelebritiesRequest">
            <summary>
            Container for the parameters to the RecognizeCelebrities operation.
            Returns an array of celebrities recognized in the input image. For more information,
            see Recognizing celebrities in the Amazon Rekognition Developer Guide. 
            
             
            <para>
             <code>RecognizeCelebrities</code> returns the 64 largest faces in the image. It lists
            the recognized celebrities in the <code>CelebrityFaces</code> array and any unrecognized
            faces in the <code>UnrecognizedFaces</code> array. <code>RecognizeCelebrities</code>
            doesn't return celebrities whose faces aren't among the largest 64 faces in the image.
            </para>
             
            <para>
            For each celebrity recognized, <code>RecognizeCelebrities</code> returns a <code>Celebrity</code>
            object. The <code>Celebrity</code> object contains the celebrity name, ID, URL links
            to additional information, match confidence, and a <code>ComparedFace</code> object
            that you can use to locate the celebrity's face on the image.
            </para>
             
            <para>
            Amazon Rekognition doesn't retain information about which images a celebrity has been
            recognized in. Your application must store this information and use the <code>Celebrity</code>
            ID property as a unique identifier for the celebrity. If you don't store the celebrity
            name or additional information URLs returned by <code>RecognizeCelebrities</code>,
            you will need the ID to identify the celebrity in a call to the <a>GetCelebrityInfo</a>
            operation.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
            For an example, see Recognizing celebrities in an image in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:RecognizeCelebrities</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.RecognizeCelebritiesResponse">
            <summary>
            This is the response object from the RecognizeCelebrities operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesResponse.CelebrityFaces">
            <summary>
            Gets and sets the property CelebrityFaces. 
            <para>
            Details about each celebrity found in the image. Amazon Rekognition can detect a maximum
            of 64 celebrities in an image. Each celebrity object includes the following attributes:
            <code>Face</code>, <code>Confidence</code>, <code>Emotions</code>, <code>Landmarks</code>,
            <code>Pose</code>, <code>Quality</code>, <code>Smile</code>, <code>Id</code>, <code>KnownGender</code>,
            <code>MatchConfidence</code>, <code>Name</code>, <code>Urls</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. <note> 
            <para>
            Support for estimating image orientation using the the OrientationCorrection field
            has ceased as of August 2021. Any returned values for this field included in an API
            response will always be NULL.
            </para>
             </note> 
            <para>
            The orientation of the input image (counterclockwise direction). If your application
            displays the image, you can use this value to correct the orientation. The bounding
            box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code>
            represent face locations before the image orientation is corrected. 
            </para>
             <note> 
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image (Exif)
            metadata that includes the image's orientation. If so, and the Exif metadata for the
            input image populates the orientation field, the value of <code>OrientationCorrection</code>
            is null. The <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding
            box coordinates represent face locations after Exif metadata is used to correct the
            image orientation. Images in .png format don't contain Exif metadata. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesResponse.UnrecognizedFaces">
            <summary>
            Gets and sets the property UnrecognizedFaces. 
            <para>
            Details about each unrecognized face in the image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.RegionOfInterest">
            <summary>
            Specifies a location within the frame that Rekognition checks for objects of interest
            such as text, labels, or faces. It uses a <code>BoundingBox</code> or <code>Polygon</code>
            to set a region of the screen.
            
             
            <para>
            A word, face, or label is included in the region if it is more than half in that region.
            If there is more than one region, the word, face, or label is compared with all regions
            of the screen. Any object of interest that is more than half in a region is kept in
            the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RegionOfInterest.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            The box representing a region of interest on screen.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RegionOfInterest.Polygon">
            <summary>
            Gets and sets the property Polygon. 
            <para>
             Specifies a shape made up of up to 10 <code>Point</code> objects to define a region
            of interest. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            <summary>
            A resource with the specified ID already exists.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceInUseException">
            <summary>
            The specified resource is already being used.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            <summary>
            The resource specified in the request cannot be found.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            <summary>
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotReadyException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotReadyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotReadyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotReadyException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotReadyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotReadyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotReadyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.S3Destination">
            <summary>
            The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed
            inference results of a video analysis operation. These results include the name of
            the stream processor resource, the session ID of the stream processing session, and
            labeled timestamps and bounding boxes for detected labels.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Destination.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
             The name of the Amazon S3 bucket you want to associate with the streaming video project.
            You must be the owner of the Amazon S3 bucket. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Destination.KeyPrefix">
            <summary>
            Gets and sets the property KeyPrefix. 
            <para>
             The prefix value of the location within the bucket that you want the information
            to be published to. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-prefixes.html">Using
            prefixes</a>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.S3Object">
            <summary>
            Provides the S3 bucket name and object name.
            
             
            <para>
            The region for the S3 bucket containing the S3 object must match the region you use
            for Amazon Rekognition operations.
            </para>
             
            <para>
            For Amazon Rekognition to process an S3 object, the user must have permission to access
            the S3 object. For more information, see How Amazon Rekognition works with IAM in
            the Amazon Rekognition Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Object.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            Name of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Object.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            S3 object key name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Object.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            If the bucket is versioning enabled, you can specify the object version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesByImageRequest">
            <summary>
            Container for the parameters to the SearchFacesByImage operation.
            For a given input image, first detects the largest face in the image, and then searches
            the specified collection for matching faces. The operation compares the features of
            the input face with faces in the specified collection. 
            
             <note> 
            <para>
            To search for all faces in an input image, you might first call the <a>IndexFaces</a>
            operation, and then use the face IDs returned in subsequent calls to the <a>SearchFaces</a>
            operation. 
            </para>
             
            <para>
             You can also call the <code>DetectFaces</code> operation and use the bounding boxes
            in the response to make face crops, which then you can pass in to the <code>SearchFacesByImage</code>
            operation. 
            </para>
             </note> 
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
             The response returns an array of faces that match, ordered by similarity score with
            the highest similarity first. More specifically, it is an array of metadata for each
            face match found. Along with the metadata, the response also includes a <code>similarity</code>
            indicating how similar the face is to the input face. In the response, the operation
            also returns the bounding box (and a confidence level that the bounding box contains
            a face) of the face that Amazon Rekognition used for the input image. 
            </para>
             
            <para>
            If no faces are detected in the input image, <code>SearchFacesByImage</code> returns
            an <code>InvalidParameterException</code> error. 
            </para>
             
            <para>
            For an example, Searching for a Face Using an Image in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. Use <code>QualityFilter</code> to set the quality bar for filtering by
            specifying <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>. If you do
            not want to filter detected faces, specify <code>NONE</code>. The default value is
            <code>NONE</code>.
            </para>
             <note> 
            <para>
            To use quality filtering, you need a collection associated with version 3 of the face
            model or higher. To get the version of the face model associated with a collection,
            call <a>DescribeCollection</a>. 
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFacesByImage</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection to search.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            (Optional) Specifies the minimum confidence in the face match to return. For example,
            don't return any matches where confidence in matches is less than 70%. The default
            value is 80%.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
             
            <para>
            If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode
            image bytes passed using the <code>Bytes</code> field. For more information, see Images
            in the Amazon Rekognition developer guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.MaxFaces">
            <summary>
            Gets and sets the property MaxFaces. 
            <para>
            Maximum number of faces to return. The operation returns the maximum number of faces
            with the highest confidence in the match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.QualityFilter">
            <summary>
            Gets and sets the property QualityFilter. 
            <para>
            A filter that specifies a quality bar for how much filtering is done to identify faces.
            Filtered faces aren't searched for in the collection. If you specify <code>AUTO</code>,
            Amazon Rekognition chooses the quality bar. If you specify <code>LOW</code>, <code>MEDIUM</code>,
            or <code>HIGH</code>, filtering removes all faces that don’t meet the chosen quality
            bar. The quality bar is based on a variety of common use cases. Low-quality detections
            can occur for a number of reasons. Some examples are an object that's misidentified
            as a face, a face that's too blurry, or a face with a pose that's too extreme to use.
            If you specify <code>NONE</code>, no filtering is performed. The default value is
            <code>NONE</code>. 
            </para>
             
            <para>
            To use quality filtering, the collection you are using must be associated with version
            3 of the face model or higher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesByImageResponse">
            <summary>
            This is the response object from the SearchFacesByImage operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            An array of faces that match the input face, along with the confidence in the match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.SearchedFaceBoundingBox">
            <summary>
            Gets and sets the property SearchedFaceBoundingBox. 
            <para>
            The bounding box around the face in the input image that Amazon Rekognition used for
            the search.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.SearchedFaceConfidence">
            <summary>
            Gets and sets the property SearchedFaceConfidence. 
            <para>
            The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a
            face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesRequest">
            <summary>
            Container for the parameters to the SearchFaces operation.
            For a given input face ID, searches for matching faces in the collection the face
            belongs to. You get a face ID when you add a face to the collection using the <a>IndexFaces</a>
            operation. The operation compares the features of the input face with faces in the
            specified collection. 
            
             <note> 
            <para>
            You can also search faces without indexing faces by using the <code>SearchFacesByImage</code>
            operation.
            </para>
             </note> 
            <para>
             The operation response returns an array of faces that match, ordered by similarity
            score with the highest similarity first. More specifically, it is an array of metadata
            for each face match that is found. Along with the metadata, the response also includes
            a <code>confidence</code> value for each face match, indicating the confidence that
            the specific face matches the input face. 
            </para>
             
            <para>
            For an example, see Searching for a face using its face ID in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection the face belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.FaceId">
            <summary>
            Gets and sets the property FaceId. 
            <para>
            ID of a face to find matches for in the collection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            Optional value specifying the minimum confidence in the face match to return. For
            example, don't return any matches where confidence in matches is less than 70%. The
            default value is 80%. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.MaxFaces">
            <summary>
            Gets and sets the property MaxFaces. 
            <para>
            Maximum number of faces to return. The operation returns the maximum number of faces
            with the highest confidence in the match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesResponse">
            <summary>
            This is the response object from the SearchFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesResponse.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            An array of faces that matched the input face, along with the confidence in the match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesResponse.SearchedFaceId">
            <summary>
            Gets and sets the property SearchedFaceId. 
            <para>
            ID of the face that was searched for matches in a collection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SegmentDetection">
            <summary>
            A technical cue or shot detection segment detected in a video. An array of <code>SegmentDetection</code>
            objects containing all segments detected in a stored video is returned by <a>GetSegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.DurationFrames">
            <summary>
            Gets and sets the property DurationFrames. 
            <para>
             The duration of a video segment, expressed in frames. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.DurationMillis">
            <summary>
            Gets and sets the property DurationMillis. 
            <para>
            The duration of the detected segment in milliseconds. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.DurationSMPTE">
            <summary>
            Gets and sets the property DurationSMPTE. 
            <para>
            The duration of the timecode for the detected segment in SMPTE format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.EndFrameNumber">
            <summary>
            Gets and sets the property EndFrameNumber. 
            <para>
             The frame number at the end of a video segment, using a frame index that starts with
            0. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.EndTimecodeSMPTE">
            <summary>
            Gets and sets the property EndTimecodeSMPTE. 
            <para>
            The frame-accurate SMPTE timecode, from the start of a video, for the end of a detected
            segment. <code>EndTimecode</code> is in <i>HH:MM:SS:fr</i> format (and <i>;fr</i>
            for drop frame-rates).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.EndTimestampMillis">
            <summary>
            Gets and sets the property EndTimestampMillis. 
            <para>
            The end time of the detected segment, in milliseconds, from the start of the video.
            This value is rounded down.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.ShotSegment">
            <summary>
            Gets and sets the property ShotSegment. 
            <para>
            If the segment is a shot detection, contains information about the shot detection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.StartFrameNumber">
            <summary>
            Gets and sets the property StartFrameNumber. 
            <para>
             The frame number of the start of a video segment, using a frame index that starts
            with 0. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.StartTimecodeSMPTE">
            <summary>
            Gets and sets the property StartTimecodeSMPTE. 
            <para>
            The frame-accurate SMPTE timecode, from the start of a video, for the start of a detected
            segment. <code>StartTimecode</code> is in <i>HH:MM:SS:fr</i> format (and <i>;fr</i>
            for drop frame-rates). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.StartTimestampMillis">
            <summary>
            Gets and sets the property StartTimestampMillis. 
            <para>
            The start time of the detected segment in milliseconds from the start of the video.
            This value is rounded down. For example, if the actual timestamp is 100.6667 milliseconds,
            Amazon Rekognition Video returns a value of 100 millis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.TechnicalCueSegment">
            <summary>
            Gets and sets the property TechnicalCueSegment. 
            <para>
            If the segment is a technical cue, contains information about the technical cue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentDetection.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the segment. Valid values are <code>TECHNICAL_CUE</code> and <code>SHOT</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SegmentTypeInfo">
            <summary>
            Information about the type of a segment requested in a call to <a>StartSegmentDetection</a>.
            An array of <code>SegmentTypeInfo</code> objects is returned by the response from
            <a>GetSegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentTypeInfo.ModelVersion">
            <summary>
            Gets and sets the property ModelVersion. 
            <para>
            The version of the model used to detect segments.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SegmentTypeInfo.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of a segment (technical cue or shot detection).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            <summary>
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ShotSegment">
            <summary>
            Information about a shot detection segment detected in a video. For more information,
            see <a>SegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ShotSegment.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition Video has in the accuracy of the detected segment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ShotSegment.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            An Identifier for a shot detection segment detected in a video. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Smile">
            <summary>
            Indicates whether or not the face is smiling, and the confidence level in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Smile.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Smile.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face is smiling or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest">
            <summary>
            Container for the parameters to the StartCelebrityRecognition operation.
            Starts asynchronous recognition of celebrities in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect celebrities in a video must be stored in an Amazon
            S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartCelebrityRecognition</code> returns a job identifier (<code>JobId</code>)
            which you use to get the results of the analysis. When celebrity recognition analysis
            is finished, Amazon Rekognition Video publishes a completion status to the Amazon
            Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the celebrity recognition analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetCelebrityRecognition</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityRecognition</code>.
            
            </para>
             
            <para>
            For more information, see Recognizing celebrities in the Amazon Rekognition Developer
            Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartCelebrityRecognition</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidently started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Rekognition Video to publish the completion
            status of the celebrity recognition analysis to. The Amazon SNS topic must have a
            topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to recognize celebrities. The video must be stored in
            an Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartCelebrityRecognitionResponse">
            <summary>
            This is the response object from the StartCelebrityRecognition operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the celebrity recognition analysis job. Use <code>JobId</code>
            to identify the job in a subsequent call to <code>GetCelebrityRecognition</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartContentModerationRequest">
            <summary>
            Container for the parameters to the StartContentModeration operation.
            Starts asynchronous detection of inappropriate, unwanted, or offensive content in
            a stored video. For a list of moderation labels in Amazon Rekognition, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/moderation.html#moderation-api">Using
            the image and video moderation APIs</a>.
            
             
            <para>
            Amazon Rekognition Video can moderate content in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartContentModeration</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the analysis. When content analysis is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the content analysis, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetContentModeration</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            
            </para>
             
            <para>
            For more information, see Moderating content in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartContentModeration</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidently started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence that Amazon Rekognition must have in order to return
            a moderated content label. Confidence represents how certain Amazon Rekognition is
            that the moderated content is correctly identified. 0 is the lowest confidence. 100
            is the highest confidence. Amazon Rekognition doesn't return any moderated content
            labels with a confidence level lower than this specified value. If you don't specify
            <code>MinConfidence</code>, <code>GetContentModeration</code> returns labels with
            confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Amazon Rekognition Video to publish the completion
            status of the content analysis to. The Amazon SNS topic must have a topic name that
            begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy to access the topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect inappropriate, unwanted, or offensive content.
            The video must be stored in an Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartContentModerationResponse">
            <summary>
            This is the response object from the StartContentModeration operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the content analysis job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetContentModeration</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceDetectionRequest">
            <summary>
            Container for the parameters to the StartFaceDetection operation.
            Starts asynchronous detection of faces in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect faces in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartFaceDetection</code>
            returns a job identifier (<code>JobId</code>) that you use to get the results of the
            operation. When face detection is finished, Amazon Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the face detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            </para>
             
            <para>
            For more information, see Detecting faces in a stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartFaceDetection</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.FaceAttributes">
            <summary>
            Gets and sets the property FaceAttributes. 
            <para>
            The face attributes you want returned.
            </para>
             
            <para>
             <code>DEFAULT</code> - The following subset of facial attributes are returned: BoundingBox,
            Confidence, Pose, Quality and Landmarks. 
            </para>
             
            <para>
             <code>ALL</code> - All facial attributes are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish
            the completion status of the face detection operation. The Amazon SNS topic must have
            a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect faces. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceDetectionResponse">
            <summary>
            This is the response object from the StartFaceDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the face detection job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetFaceDetection</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceSearchRequest">
            <summary>
            Container for the parameters to the StartFaceSearch operation.
            Starts the asynchronous search for faces in a collection that match the faces of persons
            detected in a stored video.
            
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartFaceSearch</code> returns a job identifier
            (<code>JobId</code>) which you use to get the search results once the search has completed.
            When searching is finished, Amazon Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the search results, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceSearch</a> and pass the
            job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/procedure-person-search-videos.html">Searching
            stored videos for faces</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartFaceSearch</code> requests, the same <code>JobId</code> is returned.
            Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection that contains the faces you want to search for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            The minimum confidence in the person match to return. For example, don't return any
            matches where confidence in matches is less than 70%. The default value is 80%.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish
            the completion status of the search. The Amazon SNS topic must have a topic name that
            begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy to access the topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video you want to search. The video must be stored in an Amazon S3 bucket. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceSearchResponse">
            <summary>
            This is the response object from the StartFaceSearch operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the search job. Use <code>JobId</code> to identify the job in a
            subsequent call to <code>GetFaceSearch</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartLabelDetectionRequest">
            <summary>
            Container for the parameters to the StartLabelDetection operation.
            Starts asynchronous detection of labels in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect labels in a video. Labels are instances of real-world
            entities. This includes objects like flower, tree, and table; events like wedding,
            graduation, and birthday party; concepts like landscape, evening, and nature; and
            activities like a person getting out of a car or a person skiing.
            </para>
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartLabelDetection</code> returns a job
            identifier (<code>JobId</code>) which you use to get the results of the operation.
            When label detection is finished, Amazon Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetLabelDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartLabelDetection</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence that Amazon Rekognition Video must have in order
            to return a detected label. Confidence represents how certain Amazon Rekognition is
            that a label is correctly identified.0 is the lowest confidence. 100 is the highest
            confidence. Amazon Rekognition Video doesn't return any labels with a confidence level
            lower than this specified value.
            </para>
             
            <para>
            If you don't specify <code>MinConfidence</code>, the operation returns labels with
            confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN you want Amazon Rekognition Video to publish the completion
            status of the label detection operation to. The Amazon SNS topic must have a topic
            name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect labels. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartLabelDetectionResponse">
            <summary>
            This is the response object from the StartLabelDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the label detection job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetLabelDetection</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartPersonTrackingRequest">
            <summary>
            Container for the parameters to the StartPersonTracking operation.
            Starts the asynchronous tracking of a person's path in a stored video.
            
             
            <para>
            Amazon Rekognition Video can track the path of people in a video stored in an Amazon
            S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartPersonTracking</code> returns a job identifier (<code>JobId</code>) which
            you use to get the results of the operation. When label detection is finished, Amazon
            Rekognition publishes a completion status to the Amazon Simple Notification Service
            topic that you specify in <code>NotificationChannel</code>. 
            </para>
             
            <para>
            To get the results of the person detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetPersonTracking</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartPersonTracking</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN you want Amazon Rekognition Video to publish the completion
            status of the people detection operation to. The Amazon SNS topic must have a topic
            name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole
            permissions policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect people. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartPersonTrackingResponse">
            <summary>
            This is the response object from the StartPersonTracking operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the person detection job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetPersonTracking</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartProjectVersionRequest">
            <summary>
            Container for the parameters to the StartProjectVersion operation.
            Starts the running of the version of a model. Starting a model takes a while to complete.
            To check the current state of the model, use <a>DescribeProjectVersions</a>.
            
             
            <para>
            Once the model is running, you can detect custom labels in new images by calling <a>DetectCustomLabels</a>.
            </para>
             <note> 
            <para>
            You are charged for the amount of time that the model is running. To stop a running
            model, call <a>StopProjectVersion</a>.
            </para>
             </note> 
            <para>
            For more information, see <i>Running a trained Amazon Rekognition Custom Labels model</i>
            in the Amazon Rekognition Custom Labels Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:StartProjectVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartProjectVersionRequest.MaxInferenceUnits">
            <summary>
            Gets and sets the property MaxInferenceUnits. 
            <para>
            The maximum number of inference units to use for auto-scaling the model. If you don't
            specify a value, Amazon Rekognition Custom Labels doesn't auto-scale the model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartProjectVersionRequest.MinInferenceUnits">
            <summary>
            Gets and sets the property MinInferenceUnits. 
            <para>
            The minimum number of inference units to use. A single inference unit represents 1
            hour of processing. 
            </para>
             
            <para>
            For information about the number of transactions per second (TPS) that an inference
            unit can support, see <i>Running a trained Amazon Rekognition Custom Labels model</i>
            in the Amazon Rekognition Custom Labels Guide. 
            </para>
             
            <para>
            Use a higher number to increase the TPS throughput of your model. You are charged
            for the number of inference units that you use. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartProjectVersionRequest.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The Amazon Resource Name(ARN) of the model version that you want to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartProjectVersionResponse">
            <summary>
            This is the response object from the StartProjectVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartProjectVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current running status of the model. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartSegmentDetectionFilters">
            <summary>
            Filters applied to the technical cue or shot detection segments. For more information,
            see <a>StartSegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionFilters.ShotFilter">
            <summary>
            Gets and sets the property ShotFilter. 
            <para>
            Filters that are specific to shot detections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionFilters.TechnicalCueFilter">
            <summary>
            Gets and sets the property TechnicalCueFilter. 
            <para>
            Filters that are specific to technical cues.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartSegmentDetectionRequest">
            <summary>
            Container for the parameters to the StartSegmentDetection operation.
            Starts asynchronous detection of segment detection in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect segments in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartSegmentDetection</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When segment detection is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            You can use the <code>Filters</code> (<a>StartSegmentDetectionFilters</a>) input parameter
            to specify the minimum detection confidence returned in the response. Within <code>Filters</code>,
            use <code>ShotFilter</code> (<a>StartShotDetectionFilter</a>) to filter detected shots.
            Use <code>TechnicalCueFilter</code> (<a>StartTechnicalCueDetectionFilter</a>) to filter
            technical cues. 
            </para>
             
            <para>
            To get the results of the segment detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetSegmentDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartSegmentDetection</code>.
            
            </para>
             
            <para>
            For more information, see Detecting video segments in stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartSegmentDetection</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidently started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Filters for technical cue or shot detection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier you specify that's returned in the completion notification that's published
            to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code>
            to group related jobs and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish
            the completion status of the segment detection operation. Note that the Amazon SNS
            topic must have a topic name that begins with <i>AmazonRekognition</i> if you are
            using the AmazonRekognitionServiceRole permissions policy to access the topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionRequest.SegmentTypes">
            <summary>
            Gets and sets the property SegmentTypes. 
            <para>
            An array of segment types to detect in the video. Valid values are TECHNICAL_CUE and
            SHOT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionRequest.Video">
            <summary>
            Gets and sets the property Video.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartSegmentDetectionResponse">
            <summary>
            This is the response object from the StartSegmentDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartSegmentDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Unique identifier for the segment detection job. The <code>JobId</code> is returned
            from <code>StartSegmentDetection</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartShotDetectionFilter">
            <summary>
            Filters for the shot detection segments returned by <code>GetSegmentDetection</code>.
            For more information, see <a>StartSegmentDetectionFilters</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartShotDetectionFilter.MinSegmentConfidence">
            <summary>
            Gets and sets the property MinSegmentConfidence. 
            <para>
            Specifies the minimum confidence that Amazon Rekognition Video must have in order
            to return a detected segment. Confidence represents how certain Amazon Rekognition
            is that a segment is correctly identified. 0 is the lowest confidence. 100 is the
            highest confidence. Amazon Rekognition Video doesn't return any segments with a confidence
            level lower than this specified value.
            </para>
             
            <para>
            If you don't specify <code>MinSegmentConfidence</code>, the <code>GetSegmentDetection</code>
            returns segments with confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartStreamProcessorRequest">
            <summary>
            Container for the parameters to the StartStreamProcessor operation.
            Starts processing a stream processor. You create a stream processor by calling <a>CreateStreamProcessor</a>.
            To tell <code>StartStreamProcessor</code> which stream processor to start, use the
            value of the <code>Name</code> field specified in the call to <code>CreateStreamProcessor</code>.
            
             
            <para>
            If you are using a label detection stream processor to detect labels, you need to
            provide a <code>Start selector</code> and a <code>Stop selector</code> to determine
            the length of the stream processing time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the stream processor to start processing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartStreamProcessorRequest.StartSelector">
            <summary>
            Gets and sets the property StartSelector. 
            <para>
             Specifies the starting point in the Kinesis stream to start processing. You can use
            the producer timestamp or the fragment number. For more information, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_reader_Fragment.html">Fragment</a>.
            
            </para>
             
            <para>
            This is a required parameter for label detection stream processors and should not
            be used to start a face search stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartStreamProcessorRequest.StopSelector">
            <summary>
            Gets and sets the property StopSelector. 
            <para>
             Specifies when to stop processing the stream. You can specify a maximum amount of
            time to process the video. 
            </para>
             
            <para>
            This is a required parameter for label detection stream processors and should not
            be used to start a face search stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartStreamProcessorResponse">
            <summary>
            This is the response object from the StartStreamProcessor operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartStreamProcessorResponse.SessionId">
            <summary>
            Gets and sets the property SessionId. 
            <para>
             A unique identifier for the stream processing session. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartTechnicalCueDetectionFilter">
            <summary>
            Filters for the technical segments returned by <a>GetSegmentDetection</a>. For more
            information, see <a>StartSegmentDetectionFilters</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTechnicalCueDetectionFilter.BlackFrame">
            <summary>
            Gets and sets the property BlackFrame. 
            <para>
             A filter that allows you to control the black frame detection by specifying the black
            levels and pixel coverage of black pixels in a frame. Videos can come from multiple
            sources, formats, and time periods, with different standards and varying noise levels
            for black frames that need to be accounted for. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTechnicalCueDetectionFilter.MinSegmentConfidence">
            <summary>
            Gets and sets the property MinSegmentConfidence. 
            <para>
            Specifies the minimum confidence that Amazon Rekognition Video must have in order
            to return a detected segment. Confidence represents how certain Amazon Rekognition
            is that a segment is correctly identified. 0 is the lowest confidence. 100 is the
            highest confidence. Amazon Rekognition Video doesn't return any segments with a confidence
            level lower than this specified value.
            </para>
             
            <para>
            If you don't specify <code>MinSegmentConfidence</code>, <code>GetSegmentDetection</code>
            returns segments with confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartTextDetectionFilters">
            <summary>
            Set of optional parameters that let you set the criteria text must meet to be included
            in your response. <code>WordFilter</code> looks at a word's height, width and minimum
            confidence. <code>RegionOfInterest</code> lets you set a specific region of the screen
            to look for text in.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionFilters.RegionsOfInterest">
            <summary>
            Gets and sets the property RegionsOfInterest. 
            <para>
            Filter focusing on a certain area of the frame. Uses a <code>BoundingBox</code> object
            to set the region of the screen.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionFilters.WordFilter">
            <summary>
            Gets and sets the property WordFilter. 
            <para>
            Filters focusing on qualities of the text, such as confidence or size.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartTextDetectionRequest">
            <summary>
            Container for the parameters to the StartTextDetection operation.
            Starts asynchronous detection of text in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect text in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartTextDetection</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When text detection is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the text detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetTextDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartTextDetection</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartTextDetection</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidentaly
            started more than once.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Optional parameters that let you set criteria the text must meet to be included in
            your response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            An identifier returned in the completion status published by your Amazon Simple Notification
            Service topic. For example, you can use <code>JobTag</code> to group related jobs
            and identify them in the completion notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionRequest.Video">
            <summary>
            Gets and sets the property Video.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartTextDetectionResponse">
            <summary>
            This is the response object from the StartTextDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartTextDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Identifier for the text detection job. Use <code>JobId</code> to identify the job
            in a subsequent call to <code>GetTextDetection</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StopProjectVersionRequest">
            <summary>
            Container for the parameters to the StopProjectVersion operation.
            Stops a running model. The operation might take a while to complete. To check the
            current status, call <a>DescribeProjectVersions</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StopProjectVersionRequest.ProjectVersionArn">
            <summary>
            Gets and sets the property ProjectVersionArn. 
            <para>
            The Amazon Resource Name (ARN) of the model version that you want to delete.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:StopProjectVersion</code>
            action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StopProjectVersionResponse">
            <summary>
            This is the response object from the StopProjectVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StopProjectVersionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the stop operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StopStreamProcessorRequest">
            <summary>
            Container for the parameters to the StopStreamProcessor operation.
            Stops a running stream processor that was created by <a>CreateStreamProcessor</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StopStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a stream processor created by <a>CreateStreamProcessor</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StopStreamProcessorResponse">
            <summary>
            This is the response object from the StopStreamProcessor operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessingStartSelector">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessingStartSelector.KVSStreamStartSelector">
            <summary>
            Gets and sets the property KVSStreamStartSelector. 
            <para>
             Specifies the starting point in the stream to start processing. This can be done
            with a timestamp or a fragment number in a Kinesis stream. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessingStopSelector">
            <summary>
            Specifies when to stop processing the stream. You can specify a maximum amount of
            time to process the video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessingStopSelector.MaxDurationInSeconds">
            <summary>
            Gets and sets the property MaxDurationInSeconds. 
            <para>
             Specifies the maximum amount of time in seconds that you want the stream to be processed.
            The largest amount of time is 2 minutes. The default is 10 seconds. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessor">
            <summary>
            An object that recognizes faces or labels in a streaming video. An Amazon Rekognition
            stream processor is created by a call to <a>CreateStreamProcessor</a>. The request
            parameters for <code>CreateStreamProcessor</code> describe the Kinesis video stream
            source for the streaming video, face recognition parameters, and where to stream the
            analysis resullts.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessor.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the Amazon Rekognition stream processor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessor.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Current status of the Amazon Rekognition stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorDataSharingPreference">
            <summary>
            Allows you to opt in or opt out to share data with Rekognition to improve model performance.
            You can choose this option at the account level or on a per-stream basis. Note that
            if you opt out at the account level this setting is ignored on individual streams.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorDataSharingPreference.OptIn">
            <summary>
            Gets and sets the property OptIn. 
            <para>
             If this option is set to true, you choose to share data with Rekognition to improve
            model performance. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorInput">
            <summary>
            Information about the source streaming video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorInput.KinesisVideoStream">
            <summary>
            Gets and sets the property KinesisVideoStream. 
            <para>
            The Kinesis video stream input stream for the source streaming video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorNotificationChannel">
            <summary>
            The Amazon Simple Notification Service topic to which Amazon Rekognition publishes
            the object detection results and completion status of a video analysis operation.
            
             
            <para>
            Amazon Rekognition publishes a notification the first time an object of interest or
            a person is detected in the video stream. For example, if Amazon Rekognition detects
            a person at second 2, a pet at second 4, and a person again at second 5, Amazon Rekognition
            sends 2 object class detected notifications, one for a person at second 2 and one
            for a pet at second 4.
            </para>
             
            <para>
            Amazon Rekognition also publishes an an end-of-session notification with a summary
            when the stream processing session is complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorNotificationChannel.SNSTopicArn">
            <summary>
            Gets and sets the property SNSTopicArn. 
            <para>
             The Amazon Resource Number (ARN) of the Amazon Amazon Simple Notification Service
            topic to which Amazon Rekognition posts the completion status. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorOutput">
            <summary>
            Information about the Amazon Kinesis Data Streams stream to which a Amazon Rekognition
            Video stream processor streams the results of a video analysis. For more information,
            see CreateStreamProcessor in the Amazon Rekognition Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorOutput.KinesisDataStream">
            <summary>
            Gets and sets the property KinesisDataStream. 
            <para>
            The Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor
            streams the analysis results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorOutput.S3Destination">
            <summary>
            Gets and sets the property S3Destination. 
            <para>
             The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed
            inference results of a video analysis operation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorSettings">
            <summary>
            Input parameters used in a streaming video analyzed by a Amazon Rekognition stream
            processor. You can use <code>FaceSearch</code> to recognize faces in a streaming video,
            or you can use <code>ConnectedHome</code> to detect labels.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorSettings.ConnectedHome">
            <summary>
            Gets and sets the property ConnectedHome.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorSettings.FaceSearch">
            <summary>
            Gets and sets the property FaceSearch. 
            <para>
            Face search settings to use on a streaming video. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorSettingsForUpdate">
            <summary>
            The stream processor settings that you want to update. <code>ConnectedHome</code>
            settings can be updated to detect different labels with a different minimum confidence.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorSettingsForUpdate.ConnectedHomeForUpdate">
            <summary>
            Gets and sets the property ConnectedHomeForUpdate. 
            <para>
             The label detection settings you want to use for your stream processor. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Summary">
            <summary>
            The S3 bucket that contains the training summary. The training summary includes aggregated
            evaluation metrics for the entire testing dataset and metrics for each individual
            label. 
            
             
            <para>
            You get the training summary S3 bucket location by calling <a>DescribeProjectVersions</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Summary.S3Object">
            <summary>
            Gets and sets the property S3Object.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Sunglasses">
            <summary>
            Indicates whether or not the face is wearing sunglasses, and the confidence level
            in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Sunglasses.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Sunglasses.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face is wearing sunglasses or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds one or more key-value tags to an Amazon Rekognition collection, stream processor,
            or Custom Labels model. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a>. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:TagResource</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
             Amazon Resource Name (ARN) of the model, collection, or stream processor that you
            want to assign the tags to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             The key-value tags to assign to the resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TechnicalCueSegment">
            <summary>
            Information about a technical cue segment. For more information, see <a>SegmentDetection</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TechnicalCueSegment.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition Video has in the accuracy of the detected segment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TechnicalCueSegment.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the technical cue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TestingData">
            <summary>
            The dataset used for testing. Optionally, if <code>AutoCreate</code> is set, Amazon
            Rekognition Custom Labels uses the training dataset to create a test dataset with
            a temporary split of the training dataset.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TestingData.Assets">
            <summary>
            Gets and sets the property Assets. 
            <para>
            The assets used for testing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TestingData.AutoCreate">
            <summary>
            Gets and sets the property AutoCreate. 
            <para>
            If specified, Amazon Rekognition Custom Labels temporarily splits the training dataset
            (80%) to create a test dataset (20%) for the training job. After training completes,
            the test dataset is not stored and the training dataset reverts to its previous size.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TestingDataResult">
            <summary>
            Sagemaker Groundtruth format manifest files for the input, output and validation datasets
            that are used and created during testing.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TestingDataResult.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The testing dataset that was supplied for training.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TestingDataResult.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            The subset of the dataset that was actually tested. Some images (assets) might not
            be tested due to file formatting and other issues. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TestingDataResult.Validation">
            <summary>
            Gets and sets the property Validation. 
            <para>
            The location of the data validation manifest. The data validation manifest is created
            for the test dataset during model training.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TextDetection">
            <summary>
            Information about a word or line of text detected by <a>DetectText</a>.
            
             
            <para>
            The <code>DetectedText</code> field contains the text that Amazon Rekognition detected
            in the image. 
            </para>
             
            <para>
            Every word and line has an identifier (<code>Id</code>). Each word belongs to a line
            and has a parent identifier (<code>ParentId</code>) that identifies the line of text
            in which the word appears. The word <code>Id</code> is also an index for the word
            within a line of words. 
            </para>
             
            <para>
            For more information, see Detecting text in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has in the accuracy of the detected text and
            the accuracy of the geometry points around the detected text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.DetectedText">
            <summary>
            Gets and sets the property DetectedText. 
            <para>
            The word or line of text recognized by Amazon Rekognition. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Geometry">
            <summary>
            Gets and sets the property Geometry. 
            <para>
            The location of the detected text on the image. Includes an axis aligned coarse bounding
            box surrounding the text and a finer grain polygon for more accurate spatial information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The identifier for the detected text. The identifier is only unique for a single call
            to <code>DetectText</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.ParentId">
            <summary>
            Gets and sets the property ParentId. 
            <para>
            The Parent identifier for the detected text identified by the value of <code>ID</code>.
            If the type of detected text is <code>LINE</code>, the value of <code>ParentId</code>
            is <code>Null</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of text that was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TextDetectionResult">
            <summary>
            Information about text detected in a video. Incudes the detected text, the time in
            milliseconds from the start of the video that the text was detected, and where it
            was detected on the screen.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetectionResult.TextDetection">
            <summary>
            Gets and sets the property TextDetection. 
            <para>
            Details about text detected in a video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetectionResult.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the start of the video, that the text was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ThrottlingException">
            <summary>
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.TrainingData">
            <summary>
            The dataset used for training.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TrainingData.Assets">
            <summary>
            Gets and sets the property Assets. 
            <para>
            A Sagemaker GroundTruth manifest file that contains the training images (assets).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TrainingDataResult">
            <summary>
            Sagemaker Groundtruth format manifest files for the input, output and validation datasets
            that are used and created during testing.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TrainingDataResult.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The training assets that you supplied for training.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TrainingDataResult.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            The images (assets) that were actually trained by Amazon Rekognition Custom Labels.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TrainingDataResult.Validation">
            <summary>
            Gets and sets the property Validation. 
            <para>
            The location of the data validation manifest. The data validation manifest is created
            for the training dataset during model training.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UnindexedFace">
            <summary>
            A face that <a>IndexFaces</a> detected, but didn't index. Use the <code>Reasons</code>
            response attribute to determine why a face wasn't indexed.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UnindexedFace.FaceDetail">
            <summary>
            Gets and sets the property FaceDetail. 
            <para>
            The structure that contains attributes of a face that <code>IndexFaces</code>detected,
            but didn't index. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UnindexedFace.Reasons">
            <summary>
            Gets and sets the property Reasons. 
            <para>
            An array of reasons that specify why a face wasn't indexed. 
            </para>
             <ul> <li> 
            <para>
            EXTREME_POSE - The face is at a pose that can't be detected. For example, the head
            is turned too far away from the camera.
            </para>
             </li> <li> 
            <para>
            EXCEEDS_MAX_FACES - The number of faces detected is already higher than that specified
            by the <code>MaxFaces</code> input parameter for <code>IndexFaces</code>.
            </para>
             </li> <li> 
            <para>
            LOW_BRIGHTNESS - The image is too dark.
            </para>
             </li> <li> 
            <para>
            LOW_SHARPNESS - The image is too blurry.
            </para>
             </li> <li> 
            <para>
            LOW_CONFIDENCE - The face was detected with a low confidence.
            </para>
             </li> <li> 
            <para>
            SMALL_BOUNDING_BOX - The bounding box around the face is too small.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes one or more tags from an Amazon Rekognition collection, stream processor,
            or Custom Labels model. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:UntagResource</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
             Amazon Resource Name (ARN) of the model, collection, or stream processor that you
            want to remove the tags from. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
             A list of the tags that you want to remove. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UpdateDatasetEntriesRequest">
            <summary>
            Container for the parameters to the UpdateDatasetEntries operation.
            Adds or updates one or more entries (images) in a dataset. An entry is a JSON Line
            which contains the information for a single image, including the image location, assigned
            labels, and object location bounding boxes. For more information, see Image-Level
            labels in manifest files and Object localization in manifest files in the <i>Amazon
            Rekognition Custom Labels Developer Guide</i>. 
            
             
            <para>
            If the <code>source-ref</code> field in the JSON line references an existing image,
            the existing image in the dataset is updated. If <code>source-ref</code> field doesn't
            reference an existing image, the image is added as a new image to the dataset. 
            </para>
             
            <para>
            You specify the changes that you want to make in the <code>Changes</code> input parameter.
            There isn't a limit to the number JSON Lines that you can change, but the size of
            <code>Changes</code> must be less than 5MB.
            </para>
             
            <para>
             <code>UpdateDatasetEntries</code> returns immediatly, but the dataset update might
            take a while to complete. Use <a>DescribeDataset</a> to check the current status.
            The dataset updated successfully if the value of <code>Status</code> is <code>UPDATE_COMPLETE</code>.
            
            </para>
             
            <para>
            To check if any non-terminal errors occured, call <a>ListDatasetEntries</a> and check
            for the presence of <code>errors</code> lists in the JSON Lines.
            </para>
             
            <para>
            Dataset update fails if a terminal error occurs (<code>Status</code> = <code>UPDATE_FAILED</code>).
            Currently, you can't access the terminal error information from the Amazon Rekognition
            Custom Labels SDK. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:UpdateDatasetEntries</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateDatasetEntriesRequest.Changes">
            <summary>
            Gets and sets the property Changes. 
            <para>
             The changes that you want to make to the dataset. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateDatasetEntriesRequest.DatasetArn">
            <summary>
            Gets and sets the property DatasetArn. 
            <para>
             The Amazon Resource Name (ARN) of the dataset that you want to update. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UpdateDatasetEntriesResponse">
            <summary>
            This is the response object from the UpdateDatasetEntries operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UpdateStreamProcessorRequest">
            <summary>
            Container for the parameters to the UpdateStreamProcessor operation.
            Allows you to update a stream processor. You can change some settings and regions
            of interest and delete certain parameters.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateStreamProcessorRequest.DataSharingPreferenceForUpdate">
            <summary>
            Gets and sets the property DataSharingPreferenceForUpdate. 
            <para>
             Shows whether you are sharing data with Rekognition to improve model performance.
            You can choose this option at the account level or on a per-stream basis. Note that
            if you opt out at the account level this setting is ignored on individual streams.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
             Name of the stream processor that you want to update. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateStreamProcessorRequest.ParametersToDelete">
            <summary>
            Gets and sets the property ParametersToDelete. 
            <para>
             A list of parameters you want to delete from the stream processor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateStreamProcessorRequest.RegionsOfInterestForUpdate">
            <summary>
            Gets and sets the property RegionsOfInterestForUpdate. 
            <para>
             Specifies locations in the frames where Amazon Rekognition checks for objects or
            people. This is an optional parameter for label detection stream processors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.UpdateStreamProcessorRequest.SettingsForUpdate">
            <summary>
            Gets and sets the property SettingsForUpdate. 
            <para>
             The stream processor settings that you want to update. Label detection settings can
            be updated to detect different labels with a different minimum confidence. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.UpdateStreamProcessorResponse">
            <summary>
            This is the response object from the UpdateStreamProcessor operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ValidationData">
            <summary>
            Contains the Amazon S3 bucket location of the validation data for a model training
            job. 
            
             
            <para>
            The validation data includes error information for individual JSON Lines in the dataset.
            For more information, see <i>Debugging a Failed Model Training</i> in the Amazon Rekognition
            Custom Labels Developer Guide. 
            </para>
             
            <para>
            You get the <code>ValidationData</code> object for the training dataset (<a>TrainingDataResult</a>)
            and the test dataset (<a>TestingDataResult</a>) by calling <a>DescribeProjectVersions</a>.
            
            </para>
             
            <para>
            The assets array contains a single <a>Asset</a> object. The <a>GroundTruthManifest</a>
            field of the Asset object contains the S3 bucket location of the validation data.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ValidationData.Assets">
            <summary>
            Gets and sets the property Assets. 
            <para>
            The assets that comprise the validation data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Video">
            <summary>
            Video file stored in an Amazon S3 bucket. Amazon Rekognition video start operations
            such as <a>StartLabelDetection</a> use <code>Video</code> to specify a video for analysis.
            The supported file formats are .mp4, .mov and .avi.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Video.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            The Amazon S3 bucket name and file name for the video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.VideoMetadata">
            <summary>
            Information about a video that Amazon Rekognition analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition video operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.Codec">
            <summary>
            Gets and sets the property Codec. 
            <para>
            Type of compression used in the analyzed video. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.ColorRange">
            <summary>
            Gets and sets the property ColorRange. 
            <para>
             A description of the range of luminance values in a video, either LIMITED (16 to
            235) or FULL (0 to 255). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.DurationMillis">
            <summary>
            Gets and sets the property DurationMillis. 
            <para>
            Length of the video in milliseconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            Format of the analyzed video. Possible values are MP4, MOV and AVI. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.FrameHeight">
            <summary>
            Gets and sets the property FrameHeight. 
            <para>
            Vertical pixel dimension of the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.FrameRate">
            <summary>
            Gets and sets the property FrameRate. 
            <para>
            Number of frames per second in the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.FrameWidth">
            <summary>
            Gets and sets the property FrameWidth. 
            <para>
            Horizontal pixel dimension of the video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.VideoTooLargeException">
            <summary>
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new VideoTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeProjectsPaginator">
            <summary>
            Base class for DescribeProjects paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectsPaginator.ProjectDescriptions">
            <summary>
            Enumerable containing all of the ProjectDescriptions
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeProjectVersionsPaginator">
            <summary>
            Base class for DescribeProjectVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeProjectVersionsPaginator.ProjectVersionDescriptions">
            <summary>
            Enumerable containing all of the ProjectVersionDescriptions
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityRecognitionPaginator">
            <summary>
            Base class for GetCelebrityRecognition paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetContentModerationPaginator">
            <summary>
            Base class for GetContentModeration paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceDetectionPaginator">
            <summary>
            Base class for GetFaceDetection paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceSearchPaginator">
            <summary>
            Base class for GetFaceSearch paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetLabelDetectionPaginator">
            <summary>
            Base class for GetLabelDetection paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetPersonTrackingPaginator">
            <summary>
            Base class for GetPersonTracking paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetSegmentDetectionPaginator">
            <summary>
            Base class for GetSegmentDetection paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetSegmentDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetTextDetectionPaginator">
            <summary>
            Base class for GetTextDetection paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetTextDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IDescribeProjectsPaginator">
             <summary>
             Paginator for the DescribeProjects operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IDescribeProjectsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IDescribeProjectsPaginator.ProjectDescriptions">
            <summary>
            Enumerable containing all of the ProjectDescriptions
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IDescribeProjectVersionsPaginator">
             <summary>
             Paginator for the DescribeProjectVersions operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IDescribeProjectVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IDescribeProjectVersionsPaginator.ProjectVersionDescriptions">
            <summary>
            Enumerable containing all of the ProjectVersionDescriptions
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetCelebrityRecognitionPaginator">
             <summary>
             Paginator for the GetCelebrityRecognition operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetCelebrityRecognitionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetContentModerationPaginator">
             <summary>
             Paginator for the GetContentModeration operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetContentModerationPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetFaceDetectionPaginator">
             <summary>
             Paginator for the GetFaceDetection operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetFaceDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetFaceSearchPaginator">
             <summary>
             Paginator for the GetFaceSearch operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetFaceSearchPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetLabelDetectionPaginator">
             <summary>
             Paginator for the GetLabelDetection operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetLabelDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetPersonTrackingPaginator">
             <summary>
             Paginator for the GetPersonTracking operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetPersonTrackingPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetSegmentDetectionPaginator">
             <summary>
             Paginator for the GetSegmentDetection operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetSegmentDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IGetTextDetectionPaginator">
             <summary>
             Paginator for the GetTextDetection operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IGetTextDetectionPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IListCollectionsPaginator">
             <summary>
             Paginator for the ListCollections operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListCollectionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListCollectionsPaginator.CollectionIds">
            <summary>
            Enumerable containing all of the CollectionIds
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IListDatasetEntriesPaginator">
             <summary>
             Paginator for the ListDatasetEntries operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListDatasetEntriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListDatasetEntriesPaginator.DatasetEntries">
            <summary>
            Enumerable containing all of the DatasetEntries
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IListDatasetLabelsPaginator">
             <summary>
             Paginator for the ListDatasetLabels operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListDatasetLabelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListDatasetLabelsPaginator.DatasetLabelDescriptions">
            <summary>
            Enumerable containing all of the DatasetLabelDescriptions
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IListFacesPaginator">
             <summary>
             Paginator for the ListFaces operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListFacesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListFacesPaginator.Faces">
            <summary>
            Enumerable containing all of the Faces
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IListProjectPoliciesPaginator">
             <summary>
             Paginator for the ListProjectPolicies operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListProjectPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListProjectPoliciesPaginator.ProjectPolicies">
            <summary>
            Enumerable containing all of the ProjectPolicies
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IListStreamProcessorsPaginator">
             <summary>
             Paginator for the ListStreamProcessors operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IListStreamProcessorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IRekognitionPaginatorFactory">
             <summary>
             Paginators for the Rekognition service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.DescribeProjects(Amazon.Rekognition.Model.DescribeProjectsRequest)">
             <summary>
             Paginator for DescribeProjects operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.DescribeProjectVersions(Amazon.Rekognition.Model.DescribeProjectVersionsRequest)">
             <summary>
             Paginator for DescribeProjectVersions operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetCelebrityRecognition(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest)">
             <summary>
             Paginator for GetCelebrityRecognition operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetContentModeration(Amazon.Rekognition.Model.GetContentModerationRequest)">
             <summary>
             Paginator for GetContentModeration operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetFaceDetection(Amazon.Rekognition.Model.GetFaceDetectionRequest)">
             <summary>
             Paginator for GetFaceDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetFaceSearch(Amazon.Rekognition.Model.GetFaceSearchRequest)">
             <summary>
             Paginator for GetFaceSearch operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetLabelDetection(Amazon.Rekognition.Model.GetLabelDetectionRequest)">
             <summary>
             Paginator for GetLabelDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetPersonTracking(Amazon.Rekognition.Model.GetPersonTrackingRequest)">
             <summary>
             Paginator for GetPersonTracking operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetSegmentDetection(Amazon.Rekognition.Model.GetSegmentDetectionRequest)">
             <summary>
             Paginator for GetSegmentDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.GetTextDetection(Amazon.Rekognition.Model.GetTextDetectionRequest)">
             <summary>
             Paginator for GetTextDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.ListCollections(Amazon.Rekognition.Model.ListCollectionsRequest)">
             <summary>
             Paginator for ListCollections operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.ListDatasetEntries(Amazon.Rekognition.Model.ListDatasetEntriesRequest)">
             <summary>
             Paginator for ListDatasetEntries operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.ListDatasetLabels(Amazon.Rekognition.Model.ListDatasetLabelsRequest)">
             <summary>
             Paginator for ListDatasetLabels operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.ListFaces(Amazon.Rekognition.Model.ListFacesRequest)">
             <summary>
             Paginator for ListFaces operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.ListProjectPolicies(Amazon.Rekognition.Model.ListProjectPoliciesRequest)">
             <summary>
             Paginator for ListProjectPolicies operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IRekognitionPaginatorFactory.ListStreamProcessors(Amazon.Rekognition.Model.ListStreamProcessorsRequest)">
             <summary>
             Paginator for ListStreamProcessors operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListCollectionsPaginator">
            <summary>
            Base class for ListCollections paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsPaginator.CollectionIds">
            <summary>
            Enumerable containing all of the CollectionIds
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListDatasetEntriesPaginator">
            <summary>
            Base class for ListDatasetEntries paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetEntriesPaginator.DatasetEntries">
            <summary>
            Enumerable containing all of the DatasetEntries
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListDatasetLabelsPaginator">
            <summary>
            Base class for ListDatasetLabels paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListDatasetLabelsPaginator.DatasetLabelDescriptions">
            <summary>
            Enumerable containing all of the DatasetLabelDescriptions
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListFacesPaginator">
            <summary>
            Base class for ListFaces paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesPaginator.Faces">
            <summary>
            Enumerable containing all of the Faces
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListProjectPoliciesPaginator">
            <summary>
            Base class for ListProjectPolicies paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListProjectPoliciesPaginator.ProjectPolicies">
            <summary>
            Enumerable containing all of the ProjectPolicies
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListStreamProcessorsPaginator">
            <summary>
            Base class for ListStreamProcessors paginators.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.RekognitionPaginatorFactory">
             <summary>
             Paginators for the Rekognition service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.DescribeProjects(Amazon.Rekognition.Model.DescribeProjectsRequest)">
             <summary>
             Paginator for DescribeProjects operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.DescribeProjectVersions(Amazon.Rekognition.Model.DescribeProjectVersionsRequest)">
             <summary>
             Paginator for DescribeProjectVersions operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetCelebrityRecognition(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest)">
             <summary>
             Paginator for GetCelebrityRecognition operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetContentModeration(Amazon.Rekognition.Model.GetContentModerationRequest)">
             <summary>
             Paginator for GetContentModeration operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetFaceDetection(Amazon.Rekognition.Model.GetFaceDetectionRequest)">
             <summary>
             Paginator for GetFaceDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetFaceSearch(Amazon.Rekognition.Model.GetFaceSearchRequest)">
             <summary>
             Paginator for GetFaceSearch operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetLabelDetection(Amazon.Rekognition.Model.GetLabelDetectionRequest)">
             <summary>
             Paginator for GetLabelDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetPersonTracking(Amazon.Rekognition.Model.GetPersonTrackingRequest)">
             <summary>
             Paginator for GetPersonTracking operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetSegmentDetection(Amazon.Rekognition.Model.GetSegmentDetectionRequest)">
             <summary>
             Paginator for GetSegmentDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.GetTextDetection(Amazon.Rekognition.Model.GetTextDetectionRequest)">
             <summary>
             Paginator for GetTextDetection operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.ListCollections(Amazon.Rekognition.Model.ListCollectionsRequest)">
             <summary>
             Paginator for ListCollections operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.ListDatasetEntries(Amazon.Rekognition.Model.ListDatasetEntriesRequest)">
             <summary>
             Paginator for ListDatasetEntries operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.ListDatasetLabels(Amazon.Rekognition.Model.ListDatasetLabelsRequest)">
             <summary>
             Paginator for ListDatasetLabels operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.ListFaces(Amazon.Rekognition.Model.ListFacesRequest)">
             <summary>
             Paginator for ListFaces operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.ListProjectPolicies(Amazon.Rekognition.Model.ListProjectPoliciesRequest)">
             <summary>
             Paginator for ListProjectPolicies operation
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.RekognitionPaginatorFactory.ListStreamProcessors(Amazon.Rekognition.Model.ListStreamProcessorsRequest)">
             <summary>
             Paginator for ListStreamProcessors operation
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionRequest">
            <summary>
            Base class for Rekognition operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Attribute">
            <summary>
            Constants used for properties of type Attribute.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Attribute.ALL">
            <summary>
            Constant ALL for Attribute
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Attribute.DEFAULT">
            <summary>
            Constant DEFAULT for Attribute
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Attribute.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Attribute.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.Attribute.op_Implicit(System.String)~Amazon.Rekognition.Attribute">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.BodyPart">
            <summary>
            Constants used for properties of type BodyPart.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.BodyPart.FACE">
            <summary>
            Constant FACE for BodyPart
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.BodyPart.HEAD">
            <summary>
            Constant HEAD for BodyPart
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.BodyPart.LEFT_HAND">
            <summary>
            Constant LEFT_HAND for BodyPart
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.BodyPart.RIGHT_HAND">
            <summary>
            Constant RIGHT_HAND for BodyPart
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.BodyPart.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.BodyPart.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.BodyPart.op_Implicit(System.String)~Amazon.Rekognition.BodyPart">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.CelebrityRecognitionSortBy">
            <summary>
            Constants used for properties of type CelebrityRecognitionSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.CelebrityRecognitionSortBy.ID">
            <summary>
            Constant ID for CelebrityRecognitionSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.CelebrityRecognitionSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for CelebrityRecognitionSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.CelebrityRecognitionSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.CelebrityRecognitionSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.CelebrityRecognitionSortBy.op_Implicit(System.String)~Amazon.Rekognition.CelebrityRecognitionSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.ContentClassifier">
            <summary>
            Constants used for properties of type ContentClassifier.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ContentClassifier.FreeOfAdultContent">
            <summary>
            Constant FreeOfAdultContent for ContentClassifier
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ContentClassifier.FreeOfPersonallyIdentifiableInformation">
            <summary>
            Constant FreeOfPersonallyIdentifiableInformation for ContentClassifier
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ContentClassifier.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ContentClassifier.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.ContentClassifier.op_Implicit(System.String)~Amazon.Rekognition.ContentClassifier">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.ContentModerationSortBy">
            <summary>
            Constants used for properties of type ContentModerationSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ContentModerationSortBy.NAME">
            <summary>
            Constant NAME for ContentModerationSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ContentModerationSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for ContentModerationSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ContentModerationSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ContentModerationSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.ContentModerationSortBy.op_Implicit(System.String)~Amazon.Rekognition.ContentModerationSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.DatasetStatus">
            <summary>
            Constants used for properties of type DatasetStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.CREATE_COMPLETE">
            <summary>
            Constant CREATE_COMPLETE for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.CREATE_FAILED">
            <summary>
            Constant CREATE_FAILED for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.CREATE_IN_PROGRESS">
            <summary>
            Constant CREATE_IN_PROGRESS for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.DELETE_IN_PROGRESS">
            <summary>
            Constant DELETE_IN_PROGRESS for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.UPDATE_COMPLETE">
            <summary>
            Constant UPDATE_COMPLETE for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.UPDATE_FAILED">
            <summary>
            Constant UPDATE_FAILED for DatasetStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatus.UPDATE_IN_PROGRESS">
            <summary>
            Constant UPDATE_IN_PROGRESS for DatasetStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.DatasetStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.DatasetStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.DatasetStatus.op_Implicit(System.String)~Amazon.Rekognition.DatasetStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.DatasetStatusMessageCode">
            <summary>
            Constants used for properties of type DatasetStatusMessageCode.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatusMessageCode.CLIENT_ERROR">
            <summary>
            Constant CLIENT_ERROR for DatasetStatusMessageCode
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatusMessageCode.SERVICE_ERROR">
            <summary>
            Constant SERVICE_ERROR for DatasetStatusMessageCode
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetStatusMessageCode.SUCCESS">
            <summary>
            Constant SUCCESS for DatasetStatusMessageCode
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.DatasetStatusMessageCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.DatasetStatusMessageCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.DatasetStatusMessageCode.op_Implicit(System.String)~Amazon.Rekognition.DatasetStatusMessageCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.DatasetType">
            <summary>
            Constants used for properties of type DatasetType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetType.TEST">
            <summary>
            Constant TEST for DatasetType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.DatasetType.TRAIN">
            <summary>
            Constant TRAIN for DatasetType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.DatasetType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.DatasetType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.DatasetType.op_Implicit(System.String)~Amazon.Rekognition.DatasetType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.EmotionName">
            <summary>
            Constants used for properties of type EmotionName.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.ANGRY">
            <summary>
            Constant ANGRY for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.CALM">
            <summary>
            Constant CALM for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.CONFUSED">
            <summary>
            Constant CONFUSED for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.DISGUSTED">
            <summary>
            Constant DISGUSTED for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.FEAR">
            <summary>
            Constant FEAR for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.HAPPY">
            <summary>
            Constant HAPPY for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.SAD">
            <summary>
            Constant SAD for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.SURPRISED">
            <summary>
            Constant SURPRISED for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.UNKNOWN">
            <summary>
            Constant UNKNOWN for EmotionName
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.EmotionName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.EmotionName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.EmotionName.op_Implicit(System.String)~Amazon.Rekognition.EmotionName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.FaceAttributes">
            <summary>
            Constants used for properties of type FaceAttributes.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceAttributes.ALL">
            <summary>
            Constant ALL for FaceAttributes
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceAttributes.DEFAULT">
            <summary>
            Constant DEFAULT for FaceAttributes
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceAttributes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceAttributes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.FaceAttributes.op_Implicit(System.String)~Amazon.Rekognition.FaceAttributes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.FaceSearchSortBy">
            <summary>
            Constants used for properties of type FaceSearchSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceSearchSortBy.INDEX">
            <summary>
            Constant INDEX for FaceSearchSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceSearchSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for FaceSearchSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceSearchSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceSearchSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.FaceSearchSortBy.op_Implicit(System.String)~Amazon.Rekognition.FaceSearchSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.GenderType">
            <summary>
            Constants used for properties of type GenderType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.GenderType.Female">
            <summary>
            Constant Female for GenderType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.GenderType.Male">
            <summary>
            Constant Male for GenderType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.GenderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.GenderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.GenderType.op_Implicit(System.String)~Amazon.Rekognition.GenderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.KnownGenderType">
            <summary>
            Constants used for properties of type KnownGenderType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.KnownGenderType.Female">
            <summary>
            Constant Female for KnownGenderType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.KnownGenderType.Male">
            <summary>
            Constant Male for KnownGenderType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.KnownGenderType.Nonbinary">
            <summary>
            Constant Nonbinary for KnownGenderType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.KnownGenderType.Unlisted">
            <summary>
            Constant Unlisted for KnownGenderType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.KnownGenderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.KnownGenderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.KnownGenderType.op_Implicit(System.String)~Amazon.Rekognition.KnownGenderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.LabelDetectionSortBy">
            <summary>
            Constants used for properties of type LabelDetectionSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LabelDetectionSortBy.NAME">
            <summary>
            Constant NAME for LabelDetectionSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LabelDetectionSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for LabelDetectionSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LabelDetectionSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LabelDetectionSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.LabelDetectionSortBy.op_Implicit(System.String)~Amazon.Rekognition.LabelDetectionSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.LandmarkType">
            <summary>
            Constants used for properties of type LandmarkType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.ChinBottom">
            <summary>
            Constant ChinBottom for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.EyeLeft">
            <summary>
            Constant EyeLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.EyeRight">
            <summary>
            Constant EyeRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeBrowLeft">
            <summary>
            Constant LeftEyeBrowLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeBrowRight">
            <summary>
            Constant LeftEyeBrowRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeBrowUp">
            <summary>
            Constant LeftEyeBrowUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeDown">
            <summary>
            Constant LeftEyeDown for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeLeft">
            <summary>
            Constant LeftEyeLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeRight">
            <summary>
            Constant LeftEyeRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeUp">
            <summary>
            Constant LeftEyeUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftPupil">
            <summary>
            Constant LeftPupil for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MidJawlineLeft">
            <summary>
            Constant MidJawlineLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MidJawlineRight">
            <summary>
            Constant MidJawlineRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthDown">
            <summary>
            Constant MouthDown for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthLeft">
            <summary>
            Constant MouthLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthRight">
            <summary>
            Constant MouthRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthUp">
            <summary>
            Constant MouthUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.Nose">
            <summary>
            Constant Nose for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.NoseLeft">
            <summary>
            Constant NoseLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.NoseRight">
            <summary>
            Constant NoseRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeBrowLeft">
            <summary>
            Constant RightEyeBrowLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeBrowRight">
            <summary>
            Constant RightEyeBrowRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeBrowUp">
            <summary>
            Constant RightEyeBrowUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeDown">
            <summary>
            Constant RightEyeDown for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeLeft">
            <summary>
            Constant RightEyeLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeRight">
            <summary>
            Constant RightEyeRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeUp">
            <summary>
            Constant RightEyeUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightPupil">
            <summary>
            Constant RightPupil for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.UpperJawlineLeft">
            <summary>
            Constant UpperJawlineLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.UpperJawlineRight">
            <summary>
            Constant UpperJawlineRight for LandmarkType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LandmarkType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LandmarkType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.LandmarkType.op_Implicit(System.String)~Amazon.Rekognition.LandmarkType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.OrientationCorrection">
            <summary>
            Constants used for properties of type OrientationCorrection.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_0">
            <summary>
            Constant ROTATE_0 for OrientationCorrection
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_180">
            <summary>
            Constant ROTATE_180 for OrientationCorrection
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_270">
            <summary>
            Constant ROTATE_270 for OrientationCorrection
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_90">
            <summary>
            Constant ROTATE_90 for OrientationCorrection
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.OrientationCorrection.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.OrientationCorrection.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.OrientationCorrection.op_Implicit(System.String)~Amazon.Rekognition.OrientationCorrection">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.PersonTrackingSortBy">
            <summary>
            Constants used for properties of type PersonTrackingSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.PersonTrackingSortBy.INDEX">
            <summary>
            Constant INDEX for PersonTrackingSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.PersonTrackingSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for PersonTrackingSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.PersonTrackingSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.PersonTrackingSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.PersonTrackingSortBy.op_Implicit(System.String)~Amazon.Rekognition.PersonTrackingSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.ProjectStatus">
            <summary>
            Constants used for properties of type ProjectStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectStatus.CREATED">
            <summary>
            Constant CREATED for ProjectStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectStatus.CREATING">
            <summary>
            Constant CREATING for ProjectStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectStatus.DELETING">
            <summary>
            Constant DELETING for ProjectStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ProjectStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ProjectStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.ProjectStatus.op_Implicit(System.String)~Amazon.Rekognition.ProjectStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.ProjectVersionStatus">
            <summary>
            Constants used for properties of type ProjectVersionStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.COPYING_COMPLETED">
            <summary>
            Constant COPYING_COMPLETED for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.COPYING_FAILED">
            <summary>
            Constant COPYING_FAILED for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.COPYING_IN_PROGRESS">
            <summary>
            Constant COPYING_IN_PROGRESS for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.DELETING">
            <summary>
            Constant DELETING for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.FAILED">
            <summary>
            Constant FAILED for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.RUNNING">
            <summary>
            Constant RUNNING for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.STARTING">
            <summary>
            Constant STARTING for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.STOPPED">
            <summary>
            Constant STOPPED for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.STOPPING">
            <summary>
            Constant STOPPING for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.TRAINING_COMPLETED">
            <summary>
            Constant TRAINING_COMPLETED for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.TRAINING_FAILED">
            <summary>
            Constant TRAINING_FAILED for ProjectVersionStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProjectVersionStatus.TRAINING_IN_PROGRESS">
            <summary>
            Constant TRAINING_IN_PROGRESS for ProjectVersionStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ProjectVersionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ProjectVersionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.ProjectVersionStatus.op_Implicit(System.String)~Amazon.Rekognition.ProjectVersionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.ProtectiveEquipmentType">
            <summary>
            Constants used for properties of type ProtectiveEquipmentType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProtectiveEquipmentType.FACE_COVER">
            <summary>
            Constant FACE_COVER for ProtectiveEquipmentType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProtectiveEquipmentType.HAND_COVER">
            <summary>
            Constant HAND_COVER for ProtectiveEquipmentType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ProtectiveEquipmentType.HEAD_COVER">
            <summary>
            Constant HEAD_COVER for ProtectiveEquipmentType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ProtectiveEquipmentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ProtectiveEquipmentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.ProtectiveEquipmentType.op_Implicit(System.String)~Amazon.Rekognition.ProtectiveEquipmentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.QualityFilter">
            <summary>
            Constants used for properties of type QualityFilter.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.QualityFilter.AUTO">
            <summary>
            Constant AUTO for QualityFilter
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.QualityFilter.HIGH">
            <summary>
            Constant HIGH for QualityFilter
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.QualityFilter.LOW">
            <summary>
            Constant LOW for QualityFilter
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.QualityFilter.MEDIUM">
            <summary>
            Constant MEDIUM for QualityFilter
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.QualityFilter.NONE">
            <summary>
            Constant NONE for QualityFilter
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.QualityFilter.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.QualityFilter.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.QualityFilter.op_Implicit(System.String)~Amazon.Rekognition.QualityFilter">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.Reason">
            <summary>
            Constants used for properties of type Reason.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.EXCEEDS_MAX_FACES">
            <summary>
            Constant EXCEEDS_MAX_FACES for Reason
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.EXTREME_POSE">
            <summary>
            Constant EXTREME_POSE for Reason
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.LOW_BRIGHTNESS">
            <summary>
            Constant LOW_BRIGHTNESS for Reason
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.LOW_CONFIDENCE">
            <summary>
            Constant LOW_CONFIDENCE for Reason
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.LOW_FACE_QUALITY">
            <summary>
            Constant LOW_FACE_QUALITY for Reason
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.LOW_SHARPNESS">
            <summary>
            Constant LOW_SHARPNESS for Reason
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Reason.SMALL_BOUNDING_BOX">
            <summary>
            Constant SMALL_BOUNDING_BOX for Reason
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Reason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Reason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.Reason.op_Implicit(System.String)~Amazon.Rekognition.Reason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.SegmentType">
            <summary>
            Constants used for properties of type SegmentType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.SegmentType.SHOT">
            <summary>
            Constant SHOT for SegmentType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.SegmentType.TECHNICAL_CUE">
            <summary>
            Constant TECHNICAL_CUE for SegmentType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.SegmentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.SegmentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.SegmentType.op_Implicit(System.String)~Amazon.Rekognition.SegmentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.StreamProcessorParameterToDelete">
            <summary>
            Constants used for properties of type StreamProcessorParameterToDelete.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorParameterToDelete.ConnectedHomeMinConfidence">
            <summary>
            Constant ConnectedHomeMinConfidence for StreamProcessorParameterToDelete
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorParameterToDelete.RegionsOfInterest">
            <summary>
            Constant RegionsOfInterest for StreamProcessorParameterToDelete
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorParameterToDelete.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorParameterToDelete.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorParameterToDelete.op_Implicit(System.String)~Amazon.Rekognition.StreamProcessorParameterToDelete">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.StreamProcessorStatus">
            <summary>
            Constants used for properties of type StreamProcessorStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.FAILED">
            <summary>
            Constant FAILED for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.RUNNING">
            <summary>
            Constant RUNNING for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.STARTING">
            <summary>
            Constant STARTING for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.STOPPED">
            <summary>
            Constant STOPPED for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.STOPPING">
            <summary>
            Constant STOPPING for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.UPDATING">
            <summary>
            Constant UPDATING for StreamProcessorStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorStatus.op_Implicit(System.String)~Amazon.Rekognition.StreamProcessorStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.TechnicalCueType">
            <summary>
            Constants used for properties of type TechnicalCueType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.BlackFrames">
            <summary>
            Constant BlackFrames for TechnicalCueType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.ColorBars">
            <summary>
            Constant ColorBars for TechnicalCueType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.Content">
            <summary>
            Constant Content for TechnicalCueType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.EndCredits">
            <summary>
            Constant EndCredits for TechnicalCueType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.OpeningCredits">
            <summary>
            Constant OpeningCredits for TechnicalCueType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.Slate">
            <summary>
            Constant Slate for TechnicalCueType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TechnicalCueType.StudioLogo">
            <summary>
            Constant StudioLogo for TechnicalCueType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.TechnicalCueType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.TechnicalCueType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.TechnicalCueType.op_Implicit(System.String)~Amazon.Rekognition.TechnicalCueType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.TextTypes">
            <summary>
            Constants used for properties of type TextTypes.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TextTypes.LINE">
            <summary>
            Constant LINE for TextTypes
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TextTypes.WORD">
            <summary>
            Constant WORD for TextTypes
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.TextTypes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.TextTypes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.TextTypes.op_Implicit(System.String)~Amazon.Rekognition.TextTypes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.VideoColorRange">
            <summary>
            Constants used for properties of type VideoColorRange.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoColorRange.FULL">
            <summary>
            Constant FULL for VideoColorRange
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoColorRange.LIMITED">
            <summary>
            Constant LIMITED for VideoColorRange
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.VideoColorRange.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.VideoColorRange.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.VideoColorRange.op_Implicit(System.String)~Amazon.Rekognition.VideoColorRange">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.VideoJobStatus">
            <summary>
            Constants used for properties of type VideoJobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoJobStatus.FAILED">
            <summary>
            Constant FAILED for VideoJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoJobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for VideoJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoJobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for VideoJobStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.VideoJobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.VideoJobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.VideoJobStatus.op_Implicit(System.String)~Amazon.Rekognition.VideoJobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionClient">
             <summary>
             Implementation for accessing Rekognition
            
             This is the API Reference for <a href="https://docs.aws.amazon.com/rekognition/latest/dg/images.html">Amazon
             Rekognition Image</a>, <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/what-is.html">Amazon
             Rekognition Custom Labels</a>, <a href="https://docs.aws.amazon.com/rekognition/latest/dg/video.html">Amazon
             Rekognition Stored Video</a>, <a href="https://docs.aws.amazon.com/rekognition/latest/dg/streaming-video.html">Amazon
             Rekognition Streaming Video</a>. It provides descriptions of actions, data types,
             common parameters, and common errors.
             
              
             <para>
              <b>Amazon Rekognition Image</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CompareFaces.html">CompareFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateCollection.html">CreateCollection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteCollection.html">DeleteCollection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteFaces.html">DeleteFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeCollection.html">DescribeCollection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectFaces.html">DetectFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectLabels.html">DetectLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectModerationLabels.html">DetectModerationLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectProtectiveEquipment.html">DetectProtectiveEquipment</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectText.html">DetectText</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetCelebrityInfo.html">GetCelebrityInfo</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_IndexFaces.html">IndexFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListCollections.html">ListCollections</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListFaces.html">ListFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_RecognizeCelebrities.html">RecognizeCelebrities</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_SearchFaces.html">SearchFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_SearchFacesByImage.html">SearchFacesByImage</a>
             
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Rekognition Custom Labels</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CopyProjectVersion.html">CopyProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateDataset.html">CreateDataset</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateProject.html">CreateProject</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateProjectVersion.html">CreateProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteDataset.html">DeleteDataset</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteProject.html">DeleteProject</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteProjectPolicy.html">DeleteProjectPolicy</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteProjectVersion.html">DeleteProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeDataset.html">DescribeDataset</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeProjects.html">DescribeProjects</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeProjectVersions.html">DescribeProjectVersions</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectCustomLabels.html">DetectCustomLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DistributeDatasetEntries.html">DistributeDatasetEntries</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListDatasetEntries.html">ListDatasetEntries</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListDatasetLabels.html">ListDatasetLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListProjectPolicies.html">ListProjectPolicies</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_PutProjectPolicy.html">PutProjectPolicy</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartProjectVersion.html">StartProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StopProjectVersion.html">StopProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_UpdateDatasetEntries.html">UpdateDatasetEntries</a>
             
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Rekognition Video Stored Video</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetCelebrityRecognition.html">GetCelebrityRecognition</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetContentModeration.html">GetContentModeration</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetFaceDetection.html">GetFaceDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetFaceSearch.html">GetFaceSearch</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetLabelDetection.html">GetLabelDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetPersonTracking.html">GetPersonTracking</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetSegmentDetection.html">GetSegmentDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetTextDetection.html">GetTextDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartCelebrityRecognition.html">StartCelebrityRecognition</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartContentModeration.html">StartContentModeration</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartFaceDetection.html">StartFaceDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartFaceSearch.html">StartFaceSearch</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartLabelDetection.html">StartLabelDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartPersonTracking.html">StartPersonTracking</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartSegmentDetection.html">StartSegmentDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartTextDetection.html">StartTextDetection</a>
             
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Rekognition Video Streaming Video</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateStreamProcessor.html">CreateStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteStreamProcessor.html">DeleteStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeStreamProcessor.html">DescribeStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListStreamProcessors.html">ListStreamProcessors</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartStreamProcessor.html">StartStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StopStreamProcessor.html">StopStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_UpdateStreamProcessor.html">UpdateStreamProcessor</a>
             
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor">
             <summary>
             Constructs AmazonRekognitionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonRekognitionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Rekognition.AmazonRekognitionConfig)">
             <summary>
             Constructs AmazonRekognitionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Rekognition.AmazonRekognitionConfig)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Credentials and an
            AmazonRekognitionClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,Amazon.Rekognition.AmazonRekognitionConfig)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID, AWS Secret Key and an
            AmazonRekognitionClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,System.String,Amazon.Rekognition.AmazonRekognitionConfig)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID, AWS Secret Key and an
            AmazonRekognitionClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CompareFacesAsync(Amazon.Rekognition.Model.CompareFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Compares a face in the <i>source</i> input image with each of the 100 largest faces
            detected in the <i>target</i> input image. 
            
             
            <para>
             If the source image contains multiple faces, the service detects the largest face
            and compares it with each face detected in the target image. 
            </para>
             <note> 
            <para>
            CompareFaces uses machine learning algorithms, which are probabilistic. A false negative
            is an incorrect prediction that a face in the target image has a low similarity confidence
            score when compared to the face in the source image. To reduce the probability of
            false negatives, we recommend that you compare the target image against multiple source
            images. If you plan to use <code>CompareFaces</code> to make a decision that impacts
            an individual's rights, privacy, or access to services, we recommend that you pass
            the result to a human for review and further validation before taking action.
            </para>
             </note> 
            <para>
            You pass the input and target images either as base64-encoded image bytes or as references
            to images in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes isn't supported. The image must be formatted as a
            PNG or JPEG file. 
            </para>
             
            <para>
            In response, the operation returns an array of face matches ordered by similarity
            score in descending order. For each face match, the response provides a bounding box
            of the face, facial landmarks, pose details (pitch, roll, and yaw), quality (brightness
            and sharpness), and confidence value (indicating the level of confidence that the
            bounding box contains a face). The response also provides a similarity score, which
            indicates how closely the faces match. 
            </para>
             <note> 
            <para>
            By default, only faces with a similarity score of greater than or equal to 80% are
            returned in the response. You can change this value by specifying the <code>SimilarityThreshold</code>
            parameter.
            </para>
             </note> 
            <para>
             <code>CompareFaces</code> also returns an array of faces that don't match the source
            image. For each face, it returns a bounding box, confidence value, landmarks, pose
            details, and quality. The response also returns information about the face in the
            source image, including the bounding box of the face and confidence value.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. Use <code>QualityFilter</code> to set the quality bar by specifying <code>LOW</code>,
            <code>MEDIUM</code>, or <code>HIGH</code>. If you do not want to filter detected faces,
            specify <code>NONE</code>. The default value is <code>NONE</code>. 
            </para>
             
            <para>
            If the image doesn't contain Exif metadata, <code>CompareFaces</code> returns orientation
            information for the source and target images. Use these values to display the images
            with the correct image orientation.
            </para>
             
            <para>
            If no faces are detected in the source or target images, <code>CompareFaces</code>
            returns an <code>InvalidParameterException</code> error. 
            </para>
             <note> 
            <para>
             This is a stateless API operation. That is, data returned by this operation doesn't
            persist.
            </para>
             </note> 
            <para>
            For an example, see Comparing Faces in Images in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CompareFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompareFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CompareFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CompareFaces">REST API Reference for CompareFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CopyProjectVersionAsync(Amazon.Rekognition.Model.CopyProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Copies a version of an Amazon Rekognition Custom Labels model from a source project
            to a destination project. The source and destination projects can be in different
            AWS accounts but must be in the same AWS Region. You can't copy a model to another
            AWS service. 
            
             
            <para>
            To copy a model version to a different AWS account, you need to create a resource-based
            policy known as a <i>project policy</i>. You attach the project policy to the source
            project by calling <a>PutProjectPolicy</a>. The project policy gives permission to
            copy the model version from a trusting AWS account to a trusted account.
            </para>
             
            <para>
            For more information creating and attaching a project policy, see Attaching a project
            policy (SDK) in the <i>Amazon Rekognition Custom Labels Developer Guide</i>. 
            </para>
             
            <para>
            If you are copying a model version to a project in the same AWS account, you don't
            need to create a project policy.
            </para>
             <note> 
            <para>
            To copy a model, the destination project, source project, and source model version
            must already exist.
            </para>
             </note> 
            <para>
            Copying a model version takes a while to complete. To get the current status, call
            <a>DescribeProjectVersions</a> and check the value of <code>Status</code> in the <a>ProjectVersionDescription</a>
            object. The copy operation has finished when the value of <code>Status</code> is <code>COPYING_COMPLETED</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CopyProjectVersion">REST API Reference for CopyProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateCollectionAsync(Amazon.Rekognition.Model.CreateCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a collection in an AWS Region. You can add faces to the collection using the
            <a>IndexFaces</a> operation. 
            
             
            <para>
            For example, you might create collections, one for each of your application users.
            A user can then index faces using the <code>IndexFaces</code> operation and persist
            results in a specific collection. Then, a user can search the collection for faces
            in the user-specific container. 
            </para>
             
            <para>
            When you create a collection, it is associated with the latest version of the face
            model version.
            </para>
             <note> 
            <para>
            Collection names are case-sensitive.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateCollection</code>
            action. If you want to tag your collection, you also require permission to perform
            the <code>rekognition:TagResource</code> operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCollection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCollection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            A resource with the specified ID already exists.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateCollection">REST API Reference for CreateCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateDatasetAsync(Amazon.Rekognition.Model.CreateDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Rekognition Custom Labels dataset. You can create a dataset by
            using an Amazon Sagemaker format manifest file or by copying an existing Amazon Rekognition
            Custom Labels dataset.
            
             
            <para>
            To create a training dataset for a project, specify <code>train</code> for the value
            of <code>DatasetType</code>. To create the test dataset for a project, specify <code>test</code>
            for the value of <code>DatasetType</code>. 
            </para>
             
            <para>
            The response from <code>CreateDataset</code> is the Amazon Resource Name (ARN) for
            the dataset. Creating a dataset takes a while to complete. Use <a>DescribeDataset</a>
            to check the current status. The dataset created successfully if the value of <code>Status</code>
            is <code>CREATE_COMPLETE</code>. 
            </para>
             
            <para>
            To check if any non-terminal errors occurred, call <a>ListDatasetEntries</a> and check
            for the presence of <code>errors</code> lists in the JSON Lines.
            </para>
             
            <para>
            Dataset creation fails if a terminal error occurs (<code>Status</code> = <code>CREATE_FAILED</code>).
            Currently, you can't access the terminal error information. 
            </para>
             
            <para>
            For more information, see Creating dataset in the <i>Amazon Rekognition Custom Labels
            Developer Guide</i>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateDataset</code>
            action. If you want to copy an existing dataset, you also require permission to perform
            the <code>rekognition:ListDatasetEntries</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataset service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            A resource with the specified ID already exists.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateProjectAsync(Amazon.Rekognition.Model.CreateProjectRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Rekognition Custom Labels project. A project is a group of resources
            (datasets, model versions) that you use to create and manage Amazon Rekognition Custom
            Labels models. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateProject</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProject service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProject service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateProject">REST API Reference for CreateProject Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateProjectVersionAsync(Amazon.Rekognition.Model.CreateProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of a model and begins training. Models are managed as part of
            an Amazon Rekognition Custom Labels project. The response from <code>CreateProjectVersion</code>
            is an Amazon Resource Name (ARN) for the version of the model. 
            
             
            <para>
            Training uses the training and test datasets associated with the project. For more
            information, see Creating training and test dataset in the <i>Amazon Rekognition Custom
            Labels Developer Guide</i>. 
            </para>
             <note> 
            <para>
            You can train a model in a project that doesn't have associated datasets by specifying
            manifest files in the <code>TrainingData</code> and <code>TestingData</code> fields.
            
            </para>
             
            <para>
            If you open the console after training a model with manifest files, Amazon Rekognition
            Custom Labels creates the datasets for you using the most recent manifest files. You
            can no longer train a model version for the project by specifying manifest files.
            
            </para>
             
            <para>
            Instead of training with a project without associated datasets, we recommend that
            you use the manifest files to create training and test datasets for the project.
            </para>
             </note> 
            <para>
            Training takes a while to complete. You can get the current status by calling <a>DescribeProjectVersions</a>.
            Training completed successfully if the value of the <code>Status</code> field is <code>TRAINING_COMPLETED</code>.
            </para>
             
            <para>
            If training fails, see Debugging a failed model training in the <i>Amazon Rekognition
            Custom Labels</i> developer guide. 
            </para>
             
            <para>
            Once training has successfully completed, call <a>DescribeProjectVersions</a> to get
            the training results and evaluate the model. For more information, see Improving a
            trained Amazon Rekognition Custom Labels model in the <i>Amazon Rekognition Custom
            Labels</i> developers guide. 
            </para>
             
            <para>
            After evaluating the model, you start the model by calling <a>StartProjectVersion</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateProjectVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateProjectVersion">REST API Reference for CreateProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateStreamProcessorAsync(Amazon.Rekognition.Model.CreateStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon Rekognition stream processor that you can use to detect and recognize
            faces or to detect labels in a streaming video.
            
             
            <para>
            Amazon Rekognition Video is a consumer of live video from Amazon Kinesis Video Streams.
            There are two different settings for stream processors in Amazon Rekognition: detecting
            faces and detecting labels.
            </para>
             <ul> <li> 
            <para>
            If you are creating a stream processor for detecting faces, you provide as input a
            Kinesis video stream (<code>Input</code>) and a Kinesis data stream (<code>Output</code>)
            stream. You also specify the face recognition criteria in <code>Settings</code>. For
            example, the collection containing faces that you want to recognize. After you have
            finished analyzing a streaming video, use <a>StopStreamProcessor</a> to stop processing.
            </para>
             </li> <li> 
            <para>
            If you are creating a stream processor to detect labels, you provide as input a Kinesis
            video stream (<code>Input</code>), Amazon S3 bucket information (<code>Output</code>),
            and an Amazon SNS topic ARN (<code>NotificationChannel</code>). You can also provide
            a KMS key ID to encrypt the data sent to your Amazon S3 bucket. You specify what you
            want to detect in <code>ConnectedHomeSettings</code>, such as people, packages and
            people, or pets, people, and packages. You can also specify where in the frame you
            want Amazon Rekognition to monitor with <code>RegionsOfInterest</code>. When you run
            the <a>StartStreamProcessor</a> operation on a label detection stream processor, you
            input start and stop information to determine the length of the processing time.
            </para>
             </li> </ul> 
            <para>
             Use <code>Name</code> to assign an identifier for the stream processor. You use <code>Name</code>
            to manage the stream processor. For example, you can start processing the source video
            by calling <a>StartStreamProcessor</a> with the <code>Name</code> field. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateStreamProcessor</code>
            action. If you want to tag your stream processor, you also require permission to perform
            the <code>rekognition:TagResource</code> operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateStreamProcessor">REST API Reference for CreateStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteCollectionAsync(Amazon.Rekognition.Model.DeleteCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified collection. Note that this operation removes all faces in the
            collection. For an example, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/delete-collection-procedure.html">Deleting
            a collection</a>.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteCollection</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCollection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCollection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteCollection">REST API Reference for DeleteCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteDatasetAsync(Amazon.Rekognition.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing Amazon Rekognition Custom Labels dataset. Deleting a dataset might
            take while. Use <a>DescribeDataset</a> to check the current status. The dataset is
            still deleting if the value of <code>Status</code> is <code>DELETE_IN_PROGRESS</code>.
            If you try to access the dataset after it is deleted, you get a <code>ResourceNotFoundException</code>
            exception. 
            
             
            <para>
            You can't delete a dataset while it is creating (<code>Status</code> = <code>CREATE_IN_PROGRESS</code>)
            or if the dataset is updating (<code>Status</code> = <code>UPDATE_IN_PROGRESS</code>).
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteDataset</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataset service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteFacesAsync(Amazon.Rekognition.Model.DeleteFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes faces from a collection. You specify a collection ID and an array of face
            IDs to remove from the collection.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteFaces">REST API Reference for DeleteFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteProjectAsync(Amazon.Rekognition.Model.DeleteProjectRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Rekognition Custom Labels project. To delete a project you must
            first delete all models associated with the project. To delete a model, see <a>DeleteProjectVersion</a>.
            
             
            <para>
             <code>DeleteProject</code> is an asynchronous operation. To check if the project
            is deleted, call <a>DescribeProjects</a>. The project is deleted when the project
            no longer appears in the response. Be aware that deleting a given project will also
            delete any <code>ProjectPolicies</code> associated with that project.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteProject</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProject service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProject service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteProject">REST API Reference for DeleteProject Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteProjectPolicyAsync(Amazon.Rekognition.Model.DeleteProjectPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing project policy.
            
             
            <para>
            To get a list of project policies attached to a project, call <a>ListProjectPolicies</a>.
            To attach a project policy to a project, call <a>PutProjectPolicy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProjectPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProjectPolicy service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException">
            The supplied revision id for the project policy is invalid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteProjectPolicy">REST API Reference for DeleteProjectPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteProjectVersionAsync(Amazon.Rekognition.Model.DeleteProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Rekognition Custom Labels model. 
            
             
            <para>
            You can't delete a model if it is running or if it is training. To check the status
            of a model, use the <code>Status</code> field returned from <a>DescribeProjectVersions</a>.
            To stop a running model call <a>StopProjectVersion</a>. If the model is training,
            wait until it finishes.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteProjectVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteProjectVersion">REST API Reference for DeleteProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteStreamProcessorAsync(Amazon.Rekognition.Model.DeleteStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the stream processor identified by <code>Name</code>. You assign the value
            for <code>Name</code> when you create the stream processor with <a>CreateStreamProcessor</a>.
            You might not be able to use the same name for a stream processor for a few seconds
            after calling <code>DeleteStreamProcessor</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteStreamProcessor">REST API Reference for DeleteStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DescribeCollectionAsync(Amazon.Rekognition.Model.DescribeCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified collection. You can use <code>DescribeCollection</code> to
            get information, such as the number of faces indexed into a collection and the version
            of the model used by the collection for face detection.
            
             
            <para>
            For more information, see Describing a Collection in the Amazon Rekognition Developer
            Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCollection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCollection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeCollection">REST API Reference for DescribeCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DescribeDatasetAsync(Amazon.Rekognition.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Describes an Amazon Rekognition Custom Labels dataset. You can get information such
            as the current status of a dataset and statistics about the images and labels in a
            dataset. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeDataset</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataset service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DescribeProjectsAsync(Amazon.Rekognition.Model.DescribeProjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about your Amazon Rekognition Custom Labels projects. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeProjects</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeProjects service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeProjects service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeProjects">REST API Reference for DescribeProjects Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DescribeProjectVersionsAsync(Amazon.Rekognition.Model.DescribeProjectVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists and describes the versions of a model in an Amazon Rekognition Custom Labels
            project. You can specify up to 10 model versions in <code>ProjectVersionArns</code>.
            If you don't specify a value, descriptions for all model versions in the project are
            returned.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeProjectVersions</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeProjectVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeProjectVersions service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeProjectVersions">REST API Reference for DescribeProjectVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DescribeStreamProcessorAsync(Amazon.Rekognition.Model.DescribeStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Provides information about a stream processor created by <a>CreateStreamProcessor</a>.
            You can get information about the input and output streams, the input parameters for
            the face recognition being performed, and the current status of the stream processor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeStreamProcessor">REST API Reference for DescribeStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectCustomLabelsAsync(Amazon.Rekognition.Model.DetectCustomLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Detects custom labels in a supplied image by using an Amazon Rekognition Custom Labels
            model. 
            
             
            <para>
            You specify which version of a model version to use by using the <code>ProjectVersionArn</code>
            input parameter. 
            </para>
             
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object that the model version detects on an image, the API returns a (<code>CustomLabel</code>)
            object in an array (<code>CustomLabels</code>). Each <code>CustomLabel</code> object
            provides the label name (<code>Name</code>), the level of confidence that the image
            contains the object (<code>Confidence</code>), and object location information, if
            it exists, for the label on the image (<code>Geometry</code>). 
            </para>
             
            <para>
            To filter labels that are returned, specify a value for <code>MinConfidence</code>.
            <code>DetectCustomLabelsLabels</code> only returns labels with a confidence that's
            higher than the specified value. The value of <code>MinConfidence</code> maps to the
            assumed threshold values created during training. For more information, see <i>Assumed
            threshold</i> in the Amazon Rekognition Custom Labels Developer Guide. Amazon Rekognition
            Custom Labels metrics expresses an assumed threshold as a floating point value between
            0-1. The range of <code>MinConfidence</code> normalizes the threshold value to a percentage
            value (0-100). Confidence responses from <code>DetectCustomLabels</code> are also
            returned as a percentage. You can use <code>MinConfidence</code> to change the precision
            and recall or your model. For more information, see <i>Analyzing an image</i> in the
            Amazon Rekognition Custom Labels Developer Guide. 
            </para>
             
            <para>
            If you don't specify a value for <code>MinConfidence</code>, <code>DetectCustomLabels</code>
            returns labels based on the assumed threshold of each label.
            </para>
             
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectCustomLabels</code>
            action. 
            </para>
             
            <para>
            For more information, see <i>Analyzing an image</i> in the Amazon Rekognition Custom
            Labels Developer Guide. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectCustomLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectCustomLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectCustomLabels">REST API Reference for DetectCustomLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectFacesAsync(Amazon.Rekognition.Model.DetectFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Detects faces within an image that is provided as input.
            
             
            <para>
             <code>DetectFaces</code> detects the 100 largest faces in the image. For each face
            detected, the operation returns face details. These details include a bounding box
            of the face, a confidence value (that the bounding box contains a face), and a fixed
            set of attributes such as facial landmarks (for example, coordinates of eye and mouth),
            presence of beard, sunglasses, and so on. 
            </para>
             
            <para>
            The face-detection algorithm is most effective on frontal faces. For non-frontal or
            obscured faces, the algorithm might not detect the faces or might detect faces with
            lower confidence. 
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             <note> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectFaces</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectFaces">REST API Reference for DetectFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectLabelsAsync(Amazon.Rekognition.Model.DetectLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Detects instances of real-world entities within an image (JPEG or PNG) provided as
            input. This includes objects like flower, tree, and table; events like wedding, graduation,
            and birthday party; and concepts like landscape, evening, and nature. 
            
             
            <para>
            For an example, see Analyzing images stored in an Amazon S3 bucket in the Amazon Rekognition
            Developer Guide.
            </para>
             <note> 
            <para>
             <code>DetectLabels</code> does not support the detection of activities. However,
            activity detection is supported for label detection in videos. For more information,
            see StartLabelDetection in the Amazon Rekognition Developer Guide.
            </para>
             </note> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object, scene, and concept the API returns one or more labels. Each label
            provides the object name, and the level of confidence that the image contains the
            object. For example, suppose the input image has a lighthouse, the sea, and a rock.
            The response includes all three labels, one for each object. 
            </para>
             
            <para>
             <code>{Name: lighthouse, Confidence: 98.4629}</code> 
            </para>
             
            <para>
             <code>{Name: rock,Confidence: 79.2097}</code> 
            </para>
             
            <para>
             <code> {Name: sea,Confidence: 75.061}</code> 
            </para>
             
            <para>
            In the preceding example, the operation returns one label for each of the three objects.
            The operation can also return multiple labels for the same object in the image. For
            example, if the input image shows a flower (for example, a tulip), the operation might
            return the following three labels. 
            </para>
             
            <para>
             <code>{Name: flower,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: plant,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: tulip,Confidence: 99.0562}</code> 
            </para>
             
            <para>
            In this example, the detection algorithm more precisely identifies the flower as a
            tulip.
            </para>
             
            <para>
            In response, the API returns an array of labels. In addition, the response also includes
            the orientation correction. Optionally, you can specify <code>MinConfidence</code>
            to control the confidence threshold for the labels returned. The default is 55%. You
            can also add the <code>MaxLabels</code> parameter to limit the number of labels returned.
            
            </para>
             <note> 
            <para>
            If the object detected is a person, the operation doesn't provide the same facial
            details that the <a>DetectFaces</a> operation provides.
            </para>
             </note> 
            <para>
             <code>DetectLabels</code> returns bounding boxes for instances of common object labels
            in an array of <a>Instance</a> objects. An <code>Instance</code> object contains a
            <a>BoundingBox</a> object, for the location of the label on the image. It also includes
            the confidence by which the bounding box was detected.
            </para>
             
            <para>
             <code>DetectLabels</code> also returns a hierarchical taxonomy of detected labels.
            For example, a detected car might be assigned the label <i>car</i>. The label <i>car</i>
            has two parent labels: <i>Vehicle</i> (its parent) and <i>Transportation</i> (its
            grandparent). The response returns the entire list of ancestors for a label. Each
            ancestor is a unique label in the response. In the previous example, <i>Car</i>, <i>Vehicle</i>,
            and <i>Transportation</i> are returned as unique labels in the response. 
            </para>
             
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectLabels</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectLabels">REST API Reference for DetectLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectModerationLabelsAsync(Amazon.Rekognition.Model.DetectModerationLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Detects unsafe content in a specified JPEG or PNG format image. Use <code>DetectModerationLabels</code>
            to moderate images depending on your requirements. For example, you might want to
            filter images that contain nudity, but not images containing suggestive content.
            
             
            <para>
            To filter images, use the labels returned by <code>DetectModerationLabels</code> to
            determine which types of content are appropriate.
            </para>
             
            <para>
            For information about moderation labels, see Detecting Unsafe Content in the Amazon
            Rekognition Developer Guide.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectModerationLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectModerationLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.HumanLoopQuotaExceededException">
            The number of in-progress human reviews you have has exceeded the number allowed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectModerationLabels">REST API Reference for DetectModerationLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectProtectiveEquipmentAsync(Amazon.Rekognition.Model.DetectProtectiveEquipmentRequest,System.Threading.CancellationToken)">
            <summary>
            Detects Personal Protective Equipment (PPE) worn by people detected in an image. Amazon
            Rekognition can detect the following types of PPE.
            
             <ul> <li> 
            <para>
            Face cover
            </para>
             </li> <li> 
            <para>
            Hand cover
            </para>
             </li> <li> 
            <para>
            Head cover
            </para>
             </li> </ul> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. The image must be either a PNG or JPG formatted file. 
            </para>
             
            <para>
             <code>DetectProtectiveEquipment</code> detects PPE worn by up to 15 persons detected
            in an image.
            </para>
             
            <para>
            For each person detected in the image the API returns an array of body parts (face,
            head, left-hand, right-hand). For each body part, an array of detected items of PPE
            is returned, including an indicator of whether or not the PPE covers the body part.
            The API returns the confidence it has in each detection (person, PPE, body part and
            body part coverage). It also returns a bounding box (<a>BoundingBox</a>) for each
            detected person and each detected item of PPE. 
            </para>
             
            <para>
            You can optionally request a summary of detected PPE items with the <code>SummarizationAttributes</code>
            input parameter. The summary provides the following information. 
            </para>
             <ul> <li> 
            <para>
            The persons detected as wearing all of the types of PPE that you specify.
            </para>
             </li> <li> 
            <para>
            The persons detected as not wearing all of the types PPE that you specify.
            </para>
             </li> <li> 
            <para>
            The persons detected where PPE adornment could not be determined. 
            </para>
             </li> </ul> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectProtectiveEquipment</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectProtectiveEquipment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectProtectiveEquipment service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectProtectiveEquipment">REST API Reference for DetectProtectiveEquipment Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectTextAsync(Amazon.Rekognition.Model.DetectTextRequest,System.Threading.CancellationToken)">
            <summary>
            Detects text in the input image and converts it into machine-readable text.
            
             
            <para>
            Pass the input image as base64-encoded image bytes or as a reference to an image in
            an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            you must pass it as a reference to an image in an Amazon S3 bucket. For the AWS CLI,
            passing image bytes is not supported. The image must be either a .png or .jpeg formatted
            file. 
            </para>
             
            <para>
            The <code>DetectText</code> operation returns text in an array of <a>TextDetection</a>
            elements, <code>TextDetections</code>. Each <code>TextDetection</code> element provides
            information about a single word or line of text that was detected in the image. 
            </para>
             
            <para>
            A word is one or more script characters that are not separated by spaces. <code>DetectText</code>
            can detect up to 100 words in an image.
            </para>
             
            <para>
            A line is a string of equally spaced words. A line isn't necessarily a complete sentence.
            For example, a driver's license number is detected as a line. A line ends when there
            is no aligned text after it. Also, a line ends when there is a large gap between words,
            relative to the length of the words. This means, depending on the gap between words,
            Amazon Rekognition may detect multiple lines in text aligned in the same direction.
            Periods don't represent the end of a line. If a sentence spans multiple lines, the
            <code>DetectText</code> operation returns multiple lines.
            </para>
             
            <para>
            To determine whether a <code>TextDetection</code> element is a line of text or a word,
            use the <code>TextDetection</code> object <code>Type</code> field. 
            </para>
             
            <para>
            To be detected, text must be within +/- 90 degrees orientation of the horizontal axis.
            </para>
             
            <para>
            For more information, see Detecting text in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectText service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectText">REST API Reference for DetectText Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DistributeDatasetEntriesAsync(Amazon.Rekognition.Model.DistributeDatasetEntriesRequest,System.Threading.CancellationToken)">
            <summary>
            Distributes the entries (images) in a training dataset across the training dataset
            and the test dataset for a project. <code>DistributeDatasetEntries</code> moves 20%
            of the training dataset images to the test dataset. An entry is a JSON Line that describes
            an image. 
            
             
            <para>
            You supply the Amazon Resource Names (ARN) of a project's training dataset and test
            dataset. The training dataset must contain the images that you want to split. The
            test dataset must be empty. The datasets must belong to the same project. To create
            training and test datasets for a project, call <a>CreateDataset</a>.
            </para>
             
            <para>
            Distributing a dataset takes a while to complete. To check the status call <code>DescribeDataset</code>.
            The operation is complete when the <code>Status</code> field for the training dataset
            and the test dataset is <code>UPDATE_COMPLETE</code>. If the dataset split fails,
            the value of <code>Status</code> is <code>UPDATE_FAILED</code>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DistributeDatasetEntries</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DistributeDatasetEntries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DistributeDatasetEntries service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DistributeDatasetEntries">REST API Reference for DistributeDatasetEntries Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetCelebrityInfoAsync(Amazon.Rekognition.Model.GetCelebrityInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the name and additional information about a celebrity based on their Amazon Rekognition
            ID. The additional information is returned as an array of URLs. If there is no additional
            information about the celebrity, this list is empty.
            
             
            <para>
            For more information, see Getting information about a celebrity in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:GetCelebrityInfo</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCelebrityInfo service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCelebrityInfo service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityInfo">REST API Reference for GetCelebrityInfo Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetCelebrityRecognitionAsync(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the celebrity recognition results for a Amazon Rekognition Video analysis started
            by <a>StartCelebrityRecognition</a>.
            
             
            <para>
            Celebrity recognition in a video is an asynchronous operation. Analysis is started
            by a call to <a>StartCelebrityRecognition</a> which returns a job identifier (<code>JobId</code>).
            
            </para>
             
            <para>
            When the celebrity recognition operation finishes, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic registered in
            the initial call to <code>StartCelebrityRecognition</code>. To get the results of
            the celebrity recognition analysis, first check that the status value published to
            the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetCelebrityDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityDetection</code>.
            
            </para>
             
            <para>
            For more information, see Working With Stored Videos in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
             <code>GetCelebrityRecognition</code> returns detected celebrities and the time(s)
            they are detected in an array (<code>Celebrities</code>) of <a>CelebrityRecognition</a>
            objects. Each <code>CelebrityRecognition</code> contains information about the celebrity
            in a <a>CelebrityDetail</a> object and the time, <code>Timestamp</code>, the celebrity
            was detected. This <a>CelebrityDetail</a> object stores information about the detected
            celebrity's face attributes, a face bounding box, known gender, the celebrity's name,
            and a confidence estimate.
            </para>
             <note> 
            <para>
             <code>GetCelebrityRecognition</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The <code>BoundingBox</code> field only applies to the detected face instance. The
            other facial attributes listed in the <code>Face</code> object of the following response
            syntax are not returned. For more information, see FaceDetail in the Amazon Rekognition
            Developer Guide. 
            </para>
             </note> 
            <para>
            By default, the <code>Celebrities</code> array is sorted by time (milliseconds from
            the start of the video). You can also sort the array by celebrity by specifying the
            value <code>ID</code> in the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The <code>CelebrityDetail</code> object includes the celebrity identifer and additional
            information urls. If you don't store the additional information urls, you can get
            them later by calling <a>GetCelebrityInfo</a> with the celebrity identifer.
            </para>
             
            <para>
            No information is returned for faces not recognized as celebrities.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetCelebrityDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetCelebrityRecognition</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCelebrityRecognition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCelebrityRecognition service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityRecognition">REST API Reference for GetCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetContentModerationAsync(Amazon.Rekognition.Model.GetContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the inappropriate, unwanted, or offensive content analysis results for a Amazon
            Rekognition Video analysis started by <a>StartContentModeration</a>. For a list of
            moderation labels in Amazon Rekognition, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/moderation.html#moderation-api">Using
            the image and video moderation APIs</a>.
            
             
            <para>
            Amazon Rekognition Video inappropriate or offensive content detection in a stored
            video is an asynchronous operation. You start analysis by calling <a>StartContentModeration</a>
            which returns a job identifier (<code>JobId</code>). When analysis finishes, Amazon
            Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartContentModeration</code>.
            To get the results of the content analysis, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetContentModeration</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            
            </para>
             
            <para>
            For more information, see Working with Stored Videos in the Amazon Rekognition Devlopers
            Guide.
            </para>
             
            <para>
             <code>GetContentModeration</code> returns detected inappropriate, unwanted, or offensive
            content moderation labels, and the time they are detected, in an array, <code>ModerationLabels</code>,
            of <a>ContentModerationDetection</a> objects. 
            </para>
             
            <para>
            By default, the moderated labels are returned sorted by time, in milliseconds from
            the start of the video. You can also sort them by moderated label by specifying <code>NAME</code>
            for the <code>SortBy</code> input parameter. 
            </para>
             
            <para>
            Since video analysis can return a large number of results, use the <code>MaxResults</code>
            parameter to limit the number of labels returned in a single call to <code>GetContentModeration</code>.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetContentModeration</code>
            and populate the <code>NextToken</code> request parameter with the value of <code>NextToken</code>
            returned from the previous call to <code>GetContentModeration</code>.
            </para>
             
            <para>
            For more information, see moderating content in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetContentModeration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetContentModeration service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetContentModeration">REST API Reference for GetContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetFaceDetectionAsync(Amazon.Rekognition.Model.GetFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets face detection results for a Amazon Rekognition Video analysis started by <a>StartFaceDetection</a>.
            
             
            <para>
            Face detection with Amazon Rekognition Video is an asynchronous operation. You start
            face detection by calling <a>StartFaceDetection</a> which returns a job identifier
            (<code>JobId</code>). When the face detection operation finishes, Amazon Rekognition
            Video publishes a completion status to the Amazon Simple Notification Service topic
            registered in the initial call to <code>StartFaceDetection</code>. To get the results
            of the face detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceDetection</a> and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            </para>
             
            <para>
             <code>GetFaceDetection</code> returns an array of detected faces (<code>Faces</code>)
            sorted by the time the faces were detected. 
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetFaceDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetFaceDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFaceDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFaceDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceDetection">REST API Reference for GetFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetFaceSearchAsync(Amazon.Rekognition.Model.GetFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the face search results for Amazon Rekognition Video face search started by <a>StartFaceSearch</a>.
            The search returns faces in a collection that match the faces of persons detected
            in a video. It also includes the time(s) that faces are matched in the video.
            
             
            <para>
            Face search in a video is an asynchronous operation. You start face search by calling
            to <a>StartFaceSearch</a> which returns a job identifier (<code>JobId</code>). When
            the search operation finishes, Amazon Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic registered in the initial call to
            <code>StartFaceSearch</code>. To get the search results, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetFaceSearch</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            </para>
             
            <para>
            For more information, see Searching Faces in a Collection in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            The search results are retured in an array, <code>Persons</code>, of <a>PersonMatch</a>
            objects. Each<code>PersonMatch</code> element contains details about the matching
            faces in the input collection, person information (facial attributes, bounding boxes,
            and person identifer) for the matched person, and the time the person was matched
            in the video.
            </para>
             <note> 
            <para>
             <code>GetFaceSearch</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. For more information, see FaceDetail in the Amazon
            Rekognition Developer Guide. 
            </para>
             </note> 
            <para>
            By default, the <code>Persons</code> array is sorted by the time, in milliseconds
            from the start of the video, persons are matched. You can also sort by persons by
            specifying <code>INDEX</code> for the <code>SORTBY</code> input parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFaceSearch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFaceSearch service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceSearch">REST API Reference for GetFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetLabelDetectionAsync(Amazon.Rekognition.Model.GetLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the label detection results of a Amazon Rekognition Video analysis started by
            <a>StartLabelDetection</a>. 
            
             
            <para>
            The label detection operation is started by a call to <a>StartLabelDetection</a> which
            returns a job identifier (<code>JobId</code>). When the label detection operation
            finishes, Amazon Rekognition publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartlabelDetection</code>.
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetLabelDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetLabelDetection</code> returns an array of detected labels (<code>Labels</code>)
            sorted by the time the labels were detected. You can also sort by the label name by
            specifying <code>NAME</code> for the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The labels returned include the label name, the percentage confidence in the accuracy
            of the detected label, and the time the label was detected in the video.
            </para>
             
            <para>
            The returned labels also include bounding box information for common objects, a hierarchical
            taxonomy of detected labels, and the version of the label model used for detection.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetlabelDetection</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetLabelDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLabelDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLabelDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetLabelDetection">REST API Reference for GetLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetPersonTrackingAsync(Amazon.Rekognition.Model.GetPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the path tracking results of a Amazon Rekognition Video analysis started by <a>StartPersonTracking</a>.
            
             
            <para>
            The person path tracking operation is started by a call to <code>StartPersonTracking</code>
            which returns a job identifier (<code>JobId</code>). When the operation finishes,
            Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
            To get the results of the person path tracking operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetPersonTracking</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
             <code>GetPersonTracking</code> returns an array, <code>Persons</code>, of tracked
            persons and the time(s) their paths were tracked in the video. 
            </para>
             <note> 
            <para>
             <code>GetPersonTracking</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. 
            </para>
             
            <para>
            For more information, see FaceDetail in the Amazon Rekognition Developer Guide.
            </para>
             </note> 
            <para>
            By default, the array is sorted by the time(s) a person's path is tracked in the video.
            You can sort by tracked persons by specifying <code>INDEX</code> for the <code>SortBy</code>
            input parameter.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of items returned. If
            there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetPersonTracking</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetPersonTracking</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPersonTracking service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPersonTracking service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetPersonTracking">REST API Reference for GetPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetSegmentDetectionAsync(Amazon.Rekognition.Model.GetSegmentDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the segment detection results of a Amazon Rekognition Video analysis started
            by <a>StartSegmentDetection</a>.
            
             
            <para>
            Segment detection with Amazon Rekognition Video is an asynchronous operation. You
            start segment detection by calling <a>StartSegmentDetection</a> which returns a job
            identifier (<code>JobId</code>). When the segment detection operation finishes, Amazon
            Rekognition publishes a completion status to the Amazon Simple Notification Service
            topic registered in the initial call to <code>StartSegmentDetection</code>. To get
            the results of the segment detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <code>GetSegmentDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call of <code>StartSegmentDetection</code>.
            </para>
             
            <para>
             <code>GetSegmentDetection</code> returns detected segments in an array (<code>Segments</code>)
            of <a>SegmentDetection</a> objects. <code>Segments</code> is sorted by the segment
            types specified in the <code>SegmentTypes</code> input parameter of <code>StartSegmentDetection</code>.
            Each element of the array includes the detected segment, the precentage confidence
            in the acuracy of the detected segment, the type of the segment, and the frame in
            which the segment was detected.
            </para>
             
            <para>
            Use <code>SelectedSegmentTypes</code> to find out the type of segment detection requested
            in the call to <code>StartSegmentDetection</code>.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of segment detections
            returned. If there are more results than specified in <code>MaxResults</code>, the
            value of <code>NextToken</code> in the operation response contains a pagination token
            for getting the next set of results. To get the next page of results, call <code>GetSegmentDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetSegmentDetection</code>.
            </para>
             
            <para>
            For more information, see Detecting video segments in stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSegmentDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSegmentDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetSegmentDetection">REST API Reference for GetSegmentDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetTextDetectionAsync(Amazon.Rekognition.Model.GetTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the text detection results of a Amazon Rekognition Video analysis started by
            <a>StartTextDetection</a>.
            
             
            <para>
            Text detection with Amazon Rekognition Video is an asynchronous operation. You start
            text detection by calling <a>StartTextDetection</a> which returns a job identifier
            (<code>JobId</code>) When the text detection operation finishes, Amazon Rekognition
            publishes a completion status to the Amazon Simple Notification Service topic registered
            in the initial call to <code>StartTextDetection</code>. To get the results of the
            text detection operation, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. if so, call <code>GetTextDetection</code> and
            pass the job identifier (<code>JobId</code>) from the initial call of <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetTextDetection</code> returns an array of detected text (<code>TextDetections</code>)
            sorted by the time the text was detected, up to 50 words per frame of video.
            </para>
             
            <para>
            Each element of the array includes the detected text, the precentage confidence in
            the acuracy of the detected text, the time the text was detected, bounding box information
            for where the text was located, and unique identifiers for words and their lines.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of text detections returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetTextDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetTextDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTextDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetTextDetection">REST API Reference for GetTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.IndexFacesAsync(Amazon.Rekognition.Model.IndexFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Detects faces in the input image and adds them to the specified collection. 
            
             
            <para>
            Amazon Rekognition doesn't save the actual faces that are detected. Instead, the underlying
            detection algorithm first detects the faces in the input image. For each face, the
            algorithm extracts facial features into a feature vector, and stores it in the backend
            database. Amazon Rekognition uses feature vectors when it performs face match and
            search operations using the <a>SearchFaces</a> and <a>SearchFacesByImage</a> operations.
            </para>
             
            <para>
            For more information, see Adding faces to a collection in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            To get the number of faces in a collection, call <a>DescribeCollection</a>. 
            </para>
             
            <para>
            If you're using version 1.0 of the face detection model, <code>IndexFaces</code> indexes
            the 15 largest faces in the input image. Later versions of the face detection model
            index the 100 largest faces in the input image. 
            </para>
             
            <para>
            If you're using version 4 or later of the face model, image orientation information
            is not returned in the <code>OrientationCorrection</code> field. 
            </para>
             
            <para>
            To determine which version of the model you're using, call <a>DescribeCollection</a>
            and supply the collection ID. You can also get the model version from the value of
            <code>FaceModelVersion</code> in the response from <code>IndexFaces</code> 
            </para>
             
            <para>
            For more information, see Model Versioning in the Amazon Rekognition Developer Guide.
            </para>
             
            <para>
            If you provide the optional <code>ExternalImageId</code> for the input image you provided,
            Amazon Rekognition associates this ID with all faces that it detects. When you call
            the <a>ListFaces</a> operation, the response returns the external ID. You can use
            this external image ID to create a client-side index to associate the faces with each
            image. You can then use the index to find all faces in an image.
            </para>
             
            <para>
            You can specify the maximum number of faces to index with the <code>MaxFaces</code>
            input parameter. This is useful when you want to index the largest faces in an image
            and don't want to index smaller faces, such as those belonging to people standing
            in the background.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. By default, <code>IndexFaces</code> chooses the quality bar that's used
            to filter faces. You can also explicitly choose the quality bar. Use <code>QualityFilter</code>,
            to set the quality bar by specifying <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>.
            If you do not want to filter detected faces, specify <code>NONE</code>. 
            </para>
             <note> 
            <para>
            To use quality filtering, you need a collection associated with version 3 of the face
            model or higher. To get the version of the face model associated with a collection,
            call <a>DescribeCollection</a>. 
            </para>
             </note> 
            <para>
            Information about faces detected in an image, but not indexed, is returned in an array
            of <a>UnindexedFace</a> objects, <code>UnindexedFaces</code>. Faces aren't indexed
            for reasons such as:
            </para>
             <ul> <li> 
            <para>
            The number of faces detected exceeds the value of the <code>MaxFaces</code> request
            parameter.
            </para>
             </li> <li> 
            <para>
            The face is too small compared to the image dimensions.
            </para>
             </li> <li> 
            <para>
            The face is too blurry.
            </para>
             </li> <li> 
            <para>
            The image is too dark.
            </para>
             </li> <li> 
            <para>
            The face has an extreme pose.
            </para>
             </li> <li> 
            <para>
            The face doesn’t have enough detail to be suitable for face search.
            </para>
             </li> </ul> 
            <para>
            In response, the <code>IndexFaces</code> operation returns an array of metadata for
            all detected faces, <code>FaceRecords</code>. This includes: 
            </para>
             <ul> <li> 
            <para>
            The bounding box, <code>BoundingBox</code>, of the detected face. 
            </para>
             </li> <li> 
            <para>
            A confidence value, <code>Confidence</code>, which indicates the confidence that the
            bounding box contains a face.
            </para>
             </li> <li> 
            <para>
            A face ID, <code>FaceId</code>, assigned by the service for each face that's detected
            and stored.
            </para>
             </li> <li> 
            <para>
            An image ID, <code>ImageId</code>, assigned by the service for the input image.
            </para>
             </li> </ul> 
            <para>
            If you request all facial attributes (by using the <code>detectionAttributes</code>
            parameter), Amazon Rekognition returns detailed facial attributes, such as facial
            landmarks (for example, location of eye and mouth) and other facial attributes. If
            you provide the same image, specify the same collection, and use the same external
            ID in the <code>IndexFaces</code> operation, Amazon Rekognition doesn't save duplicate
            face metadata.
            </para>
              
            <para>
            The input image is passed either as base64-encoded image bytes, or as a reference
            to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes isn't supported. The image must be formatted as a
            PNG or JPEG file. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:IndexFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IndexFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IndexFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/IndexFaces">REST API Reference for IndexFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListCollectionsAsync(Amazon.Rekognition.Model.ListCollectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns list of collection IDs in your account. If the result is truncated, the response
            also provides a <code>NextToken</code> that you can use in the subsequent request
            to fetch the next set of collection IDs.
            
             
            <para>
            For an example, see Listing collections in the Amazon Rekognition Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListCollections</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCollections service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCollections service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListCollections">REST API Reference for ListCollections Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListDatasetEntriesAsync(Amazon.Rekognition.Model.ListDatasetEntriesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the entries (images) within a dataset. An entry is a JSON Line that contains
            the information for a single image, including the image location, assigned labels,
            and object location bounding boxes. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-manifest-files.html">Creating
            a manifest file</a>.
            
             
            <para>
            JSON Lines in the response include information about non-terminal errors found in
            the dataset. Non terminal errors are reported in <code>errors</code> lists within
            each JSON Line. The same information is reported in the training and testing validation
            result manifests that Amazon Rekognition Custom Labels creates during model training.
            
            </para>
             
            <para>
            You can filter the response in variety of ways, such as choosing which labels to return
            and returning JSON Lines created after a specific date. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListDatasetEntries</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasetEntries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasetEntries service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListDatasetEntries">REST API Reference for ListDatasetEntries Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListDatasetLabelsAsync(Amazon.Rekognition.Model.ListDatasetLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the labels in a dataset. Amazon Rekognition Custom Labels uses labels to describe
            images. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-labeling-images.html">Labeling
            images</a>. 
            
             
            <para>
             Lists the labels in a dataset. Amazon Rekognition Custom Labels uses labels to describe
            images. For more information, see Labeling images in the <i>Amazon Rekognition Custom
            Labels Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasetLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasetLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListDatasetLabels">REST API Reference for ListDatasetLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListFacesAsync(Amazon.Rekognition.Model.ListFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata for faces in the specified collection. This metadata includes information
            such as the bounding box coordinates, the confidence (that the bounding box contains
            a face), and face ID. For an example, see Listing Faces in a Collection in the Amazon
            Rekognition Developer Guide.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListFaces">REST API Reference for ListFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListProjectPoliciesAsync(Amazon.Rekognition.Model.ListProjectPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of the project policies attached to a project.
            
             
            <para>
            To attach a project policy to a project, call <a>PutProjectPolicy</a>. To remove a
            project policy from a project, call <a>DeleteProjectPolicy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProjectPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProjectPolicies service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListProjectPolicies">REST API Reference for ListProjectPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListStreamProcessorsAsync(Amazon.Rekognition.Model.ListStreamProcessorsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of stream processors that you have created with <a>CreateStreamProcessor</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListStreamProcessors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListStreamProcessors service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListStreamProcessors">REST API Reference for ListStreamProcessors Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListTagsForResourceAsync(Amazon.Rekognition.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags in an Amazon Rekognition collection, stream processor, or
            Custom Labels model. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListTagsForResource</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.PutProjectPolicyAsync(Amazon.Rekognition.Model.PutProjectPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a project policy to a Amazon Rekognition Custom Labels project in a trusting
            AWS account. A project policy specifies that a trusted AWS account can copy a model
            version from a trusting AWS account to a project in the trusted AWS account. To copy
            a model version you use the <a>CopyProjectVersion</a> operation.
            
             
            <para>
            For more information about the format of a project policy document, see Attaching
            a project policy (SDK) in the <i>Amazon Rekognition Custom Labels Developer Guide</i>.
            
            </para>
             
            <para>
            The response from <code>PutProjectPolicy</code> is a revision ID for the project policy.
            You can attach multiple project policies to a project. You can also update an existing
            project policy by specifying the policy revision ID of the existing policy.
            </para>
             
            <para>
            To remove a project policy from a project, call <a>DeleteProjectPolicy</a>. To get
            a list of project policies attached to a project, call <a>ListProjectPolicies</a>.
            
            </para>
             
            <para>
            You copy a model version by calling <a>CopyProjectVersion</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutProjectPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutProjectPolicy service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException">
            The supplied revision id for the project policy is invalid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.MalformedPolicyDocumentException">
            The format of the project policy document that you supplied to <code>PutProjectPolicy</code>
            is incorrect.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            A resource with the specified ID already exists.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/PutProjectPolicy">REST API Reference for PutProjectPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.RecognizeCelebritiesAsync(Amazon.Rekognition.Model.RecognizeCelebritiesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of celebrities recognized in the input image. For more information,
            see Recognizing celebrities in the Amazon Rekognition Developer Guide. 
            
             
            <para>
             <code>RecognizeCelebrities</code> returns the 64 largest faces in the image. It lists
            the recognized celebrities in the <code>CelebrityFaces</code> array and any unrecognized
            faces in the <code>UnrecognizedFaces</code> array. <code>RecognizeCelebrities</code>
            doesn't return celebrities whose faces aren't among the largest 64 faces in the image.
            </para>
             
            <para>
            For each celebrity recognized, <code>RecognizeCelebrities</code> returns a <code>Celebrity</code>
            object. The <code>Celebrity</code> object contains the celebrity name, ID, URL links
            to additional information, match confidence, and a <code>ComparedFace</code> object
            that you can use to locate the celebrity's face on the image.
            </para>
             
            <para>
            Amazon Rekognition doesn't retain information about which images a celebrity has been
            recognized in. Your application must store this information and use the <code>Celebrity</code>
            ID property as a unique identifier for the celebrity. If you don't store the celebrity
            name or additional information URLs returned by <code>RecognizeCelebrities</code>,
            you will need the ID to identify the celebrity in a call to the <a>GetCelebrityInfo</a>
            operation.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
            For an example, see Recognizing celebrities in an image in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:RecognizeCelebrities</code>
            operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecognizeCelebrities service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecognizeCelebrities service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/RecognizeCelebrities">REST API Reference for RecognizeCelebrities Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.SearchFacesAsync(Amazon.Rekognition.Model.SearchFacesRequest,System.Threading.CancellationToken)">
            <summary>
            For a given input face ID, searches for matching faces in the collection the face
            belongs to. You get a face ID when you add a face to the collection using the <a>IndexFaces</a>
            operation. The operation compares the features of the input face with faces in the
            specified collection. 
            
             <note> 
            <para>
            You can also search faces without indexing faces by using the <code>SearchFacesByImage</code>
            operation.
            </para>
             </note> 
            <para>
             The operation response returns an array of faces that match, ordered by similarity
            score with the highest similarity first. More specifically, it is an array of metadata
            for each face match that is found. Along with the metadata, the response also includes
            a <code>confidence</code> value for each face match, indicating the confidence that
            the specific face matches the input face. 
            </para>
             
            <para>
            For an example, see Searching for a face using its face ID in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFaces">REST API Reference for SearchFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.SearchFacesByImageAsync(Amazon.Rekognition.Model.SearchFacesByImageRequest,System.Threading.CancellationToken)">
            <summary>
            For a given input image, first detects the largest face in the image, and then searches
            the specified collection for matching faces. The operation compares the features of
            the input face with faces in the specified collection. 
            
             <note> 
            <para>
            To search for all faces in an input image, you might first call the <a>IndexFaces</a>
            operation, and then use the face IDs returned in subsequent calls to the <a>SearchFaces</a>
            operation. 
            </para>
             
            <para>
             You can also call the <code>DetectFaces</code> operation and use the bounding boxes
            in the response to make face crops, which then you can pass in to the <code>SearchFacesByImage</code>
            operation. 
            </para>
             </note> 
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
             The response returns an array of faces that match, ordered by similarity score with
            the highest similarity first. More specifically, it is an array of metadata for each
            face match found. Along with the metadata, the response also includes a <code>similarity</code>
            indicating how similar the face is to the input face. In the response, the operation
            also returns the bounding box (and a confidence level that the bounding box contains
            a face) of the face that Amazon Rekognition used for the input image. 
            </para>
             
            <para>
            If no faces are detected in the input image, <code>SearchFacesByImage</code> returns
            an <code>InvalidParameterException</code> error. 
            </para>
             
            <para>
            For an example, Searching for a Face Using an Image in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. Use <code>QualityFilter</code> to set the quality bar for filtering by
            specifying <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>. If you do
            not want to filter detected faces, specify <code>NONE</code>. The default value is
            <code>NONE</code>.
            </para>
             <note> 
            <para>
            To use quality filtering, you need a collection associated with version 3 of the face
            model or higher. To get the version of the face model associated with a collection,
            call <a>DescribeCollection</a>. 
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFacesByImage</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchFacesByImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchFacesByImage service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFacesByImage">REST API Reference for SearchFacesByImage Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartCelebrityRecognitionAsync(Amazon.Rekognition.Model.StartCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous recognition of celebrities in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect celebrities in a video must be stored in an Amazon
            S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartCelebrityRecognition</code> returns a job identifier (<code>JobId</code>)
            which you use to get the results of the analysis. When celebrity recognition analysis
            is finished, Amazon Rekognition Video publishes a completion status to the Amazon
            Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the celebrity recognition analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetCelebrityRecognition</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityRecognition</code>.
            
            </para>
             
            <para>
            For more information, see Recognizing celebrities in the Amazon Rekognition Developer
            Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartCelebrityRecognition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartCelebrityRecognition service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartCelebrityRecognition">REST API Reference for StartCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartContentModerationAsync(Amazon.Rekognition.Model.StartContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of inappropriate, unwanted, or offensive content in
            a stored video. For a list of moderation labels in Amazon Rekognition, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/moderation.html#moderation-api">Using
            the image and video moderation APIs</a>.
            
             
            <para>
            Amazon Rekognition Video can moderate content in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartContentModeration</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the analysis. When content analysis is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the content analysis, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetContentModeration</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            
            </para>
             
            <para>
            For more information, see Moderating content in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartContentModeration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartContentModeration service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartContentModeration">REST API Reference for StartContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartFaceDetectionAsync(Amazon.Rekognition.Model.StartFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of faces in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect faces in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartFaceDetection</code>
            returns a job identifier (<code>JobId</code>) that you use to get the results of the
            operation. When face detection is finished, Amazon Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the face detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            </para>
             
            <para>
            For more information, see Detecting faces in a stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartFaceDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartFaceDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceDetection">REST API Reference for StartFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartFaceSearchAsync(Amazon.Rekognition.Model.StartFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous search for faces in a collection that match the faces of persons
            detected in a stored video.
            
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartFaceSearch</code> returns a job identifier
            (<code>JobId</code>) which you use to get the search results once the search has completed.
            When searching is finished, Amazon Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the search results, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceSearch</a> and pass the
            job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/procedure-person-search-videos.html">Searching
            stored videos for faces</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartFaceSearch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartFaceSearch service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceSearch">REST API Reference for StartFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartLabelDetectionAsync(Amazon.Rekognition.Model.StartLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of labels in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect labels in a video. Labels are instances of real-world
            entities. This includes objects like flower, tree, and table; events like wedding,
            graduation, and birthday party; concepts like landscape, evening, and nature; and
            activities like a person getting out of a car or a person skiing.
            </para>
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartLabelDetection</code> returns a job
            identifier (<code>JobId</code>) which you use to get the results of the operation.
            When label detection is finished, Amazon Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetLabelDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartLabelDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartLabelDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartLabelDetection">REST API Reference for StartLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartPersonTrackingAsync(Amazon.Rekognition.Model.StartPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous tracking of a person's path in a stored video.
            
             
            <para>
            Amazon Rekognition Video can track the path of people in a video stored in an Amazon
            S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartPersonTracking</code> returns a job identifier (<code>JobId</code>) which
            you use to get the results of the operation. When label detection is finished, Amazon
            Rekognition publishes a completion status to the Amazon Simple Notification Service
            topic that you specify in <code>NotificationChannel</code>. 
            </para>
             
            <para>
            To get the results of the person detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetPersonTracking</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartPersonTracking service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartPersonTracking service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartPersonTracking">REST API Reference for StartPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartProjectVersionAsync(Amazon.Rekognition.Model.StartProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the running of the version of a model. Starting a model takes a while to complete.
            To check the current state of the model, use <a>DescribeProjectVersions</a>.
            
             
            <para>
            Once the model is running, you can detect custom labels in new images by calling <a>DetectCustomLabels</a>.
            </para>
             <note> 
            <para>
            You are charged for the amount of time that the model is running. To stop a running
            model, call <a>StopProjectVersion</a>.
            </para>
             </note> 
            <para>
            For more information, see <i>Running a trained Amazon Rekognition Custom Labels model</i>
            in the Amazon Rekognition Custom Labels Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:StartProjectVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartProjectVersion">REST API Reference for StartProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartSegmentDetectionAsync(Amazon.Rekognition.Model.StartSegmentDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of segment detection in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect segments in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartSegmentDetection</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When segment detection is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            You can use the <code>Filters</code> (<a>StartSegmentDetectionFilters</a>) input parameter
            to specify the minimum detection confidence returned in the response. Within <code>Filters</code>,
            use <code>ShotFilter</code> (<a>StartShotDetectionFilter</a>) to filter detected shots.
            Use <code>TechnicalCueFilter</code> (<a>StartTechnicalCueDetectionFilter</a>) to filter
            technical cues. 
            </para>
             
            <para>
            To get the results of the segment detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetSegmentDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartSegmentDetection</code>.
            
            </para>
             
            <para>
            For more information, see Detecting video segments in stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartSegmentDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartSegmentDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartSegmentDetection">REST API Reference for StartSegmentDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartStreamProcessorAsync(Amazon.Rekognition.Model.StartStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Starts processing a stream processor. You create a stream processor by calling <a>CreateStreamProcessor</a>.
            To tell <code>StartStreamProcessor</code> which stream processor to start, use the
            value of the <code>Name</code> field specified in the call to <code>CreateStreamProcessor</code>.
            
             
            <para>
            If you are using a label detection stream processor to detect labels, you need to
            provide a <code>Start selector</code> and a <code>Stop selector</code> to determine
            the length of the stream processing time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartStreamProcessor">REST API Reference for StartStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartTextDetectionAsync(Amazon.Rekognition.Model.StartTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of text in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect text in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartTextDetection</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When text detection is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the text detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetTextDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartTextDetection</code>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTextDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartTextDetection">REST API Reference for StartTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StopProjectVersionAsync(Amazon.Rekognition.Model.StopProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running model. The operation might take a while to complete. To check the
            current status, call <a>DescribeProjectVersions</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StopProjectVersion">REST API Reference for StopProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StopStreamProcessorAsync(Amazon.Rekognition.Model.StopStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running stream processor that was created by <a>CreateStreamProcessor</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StopStreamProcessor">REST API Reference for StopStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.TagResourceAsync(Amazon.Rekognition.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more key-value tags to an Amazon Rekognition collection, stream processor,
            or Custom Labels model. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a>. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:TagResource</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.UntagResourceAsync(Amazon.Rekognition.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from an Amazon Rekognition collection, stream processor,
            or Custom Labels model. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:UntagResource</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.UpdateDatasetEntriesAsync(Amazon.Rekognition.Model.UpdateDatasetEntriesRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates one or more entries (images) in a dataset. An entry is a JSON Line
            which contains the information for a single image, including the image location, assigned
            labels, and object location bounding boxes. For more information, see Image-Level
            labels in manifest files and Object localization in manifest files in the <i>Amazon
            Rekognition Custom Labels Developer Guide</i>. 
            
             
            <para>
            If the <code>source-ref</code> field in the JSON line references an existing image,
            the existing image in the dataset is updated. If <code>source-ref</code> field doesn't
            reference an existing image, the image is added as a new image to the dataset. 
            </para>
             
            <para>
            You specify the changes that you want to make in the <code>Changes</code> input parameter.
            There isn't a limit to the number JSON Lines that you can change, but the size of
            <code>Changes</code> must be less than 5MB.
            </para>
             
            <para>
             <code>UpdateDatasetEntries</code> returns immediatly, but the dataset update might
            take a while to complete. Use <a>DescribeDataset</a> to check the current status.
            The dataset updated successfully if the value of <code>Status</code> is <code>UPDATE_COMPLETE</code>.
            
            </para>
             
            <para>
            To check if any non-terminal errors occured, call <a>ListDatasetEntries</a> and check
            for the presence of <code>errors</code> lists in the JSON Lines.
            </para>
             
            <para>
            Dataset update fails if a terminal error occurs (<code>Status</code> = <code>UPDATE_FAILED</code>).
            Currently, you can't access the terminal error information from the Amazon Rekognition
            Custom Labels SDK. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:UpdateDatasetEntries</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDatasetEntries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDatasetEntries service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/UpdateDatasetEntries">REST API Reference for UpdateDatasetEntries Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.UpdateStreamProcessorAsync(Amazon.Rekognition.Model.UpdateStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to update a stream processor. You can change some settings and regions
            of interest and delete certain parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/UpdateStreamProcessor">REST API Reference for UpdateStreamProcessor Operation</seealso>
        </member>
        <member name="T:Amazon.Rekognition.IAmazonRekognition">
             <summary>
             Interface for accessing Rekognition
            
             This is the API Reference for <a href="https://docs.aws.amazon.com/rekognition/latest/dg/images.html">Amazon
             Rekognition Image</a>, <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/what-is.html">Amazon
             Rekognition Custom Labels</a>, <a href="https://docs.aws.amazon.com/rekognition/latest/dg/video.html">Amazon
             Rekognition Stored Video</a>, <a href="https://docs.aws.amazon.com/rekognition/latest/dg/streaming-video.html">Amazon
             Rekognition Streaming Video</a>. It provides descriptions of actions, data types,
             common parameters, and common errors.
             
              
             <para>
              <b>Amazon Rekognition Image</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CompareFaces.html">CompareFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateCollection.html">CreateCollection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteCollection.html">DeleteCollection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteFaces.html">DeleteFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeCollection.html">DescribeCollection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectFaces.html">DetectFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectLabels.html">DetectLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectModerationLabels.html">DetectModerationLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectProtectiveEquipment.html">DetectProtectiveEquipment</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectText.html">DetectText</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetCelebrityInfo.html">GetCelebrityInfo</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_IndexFaces.html">IndexFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListCollections.html">ListCollections</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListFaces.html">ListFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_RecognizeCelebrities.html">RecognizeCelebrities</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_SearchFaces.html">SearchFaces</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_SearchFacesByImage.html">SearchFacesByImage</a>
             
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Rekognition Custom Labels</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CopyProjectVersion.html">CopyProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateDataset.html">CreateDataset</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateProject.html">CreateProject</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateProjectVersion.html">CreateProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteDataset.html">DeleteDataset</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteProject.html">DeleteProject</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteProjectPolicy.html">DeleteProjectPolicy</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteProjectVersion.html">DeleteProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeDataset.html">DescribeDataset</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeProjects.html">DescribeProjects</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeProjectVersions.html">DescribeProjectVersions</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DetectCustomLabels.html">DetectCustomLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DistributeDatasetEntries.html">DistributeDatasetEntries</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListDatasetEntries.html">ListDatasetEntries</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListDatasetLabels.html">ListDatasetLabels</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListProjectPolicies.html">ListProjectPolicies</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_PutProjectPolicy.html">PutProjectPolicy</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartProjectVersion.html">StartProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StopProjectVersion.html">StopProjectVersion</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_UpdateDatasetEntries.html">UpdateDatasetEntries</a>
             
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Rekognition Video Stored Video</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetCelebrityRecognition.html">GetCelebrityRecognition</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetContentModeration.html">GetContentModeration</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetFaceDetection.html">GetFaceDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetFaceSearch.html">GetFaceSearch</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetLabelDetection.html">GetLabelDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetPersonTracking.html">GetPersonTracking</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetSegmentDetection.html">GetSegmentDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_GetTextDetection.html">GetTextDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartCelebrityRecognition.html">StartCelebrityRecognition</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartContentModeration.html">StartContentModeration</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartFaceDetection.html">StartFaceDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartFaceSearch.html">StartFaceSearch</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartLabelDetection.html">StartLabelDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartPersonTracking.html">StartPersonTracking</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartSegmentDetection.html">StartSegmentDetection</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartTextDetection.html">StartTextDetection</a>
             
             </para>
              </li> </ul> 
             <para>
              <b>Amazon Rekognition Video Streaming Video</b> 
             </para>
              <ul> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CreateStreamProcessor.html">CreateStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DeleteStreamProcessor.html">DeleteStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_DescribeStreamProcessor.html">DescribeStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_ListStreamProcessors.html">ListStreamProcessors</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StartStreamProcessor.html">StartStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_StopStreamProcessor.html">StopStreamProcessor</a>
             
             </para>
              </li> <li> 
             <para>
              <a href="https://docs.aws.amazon.com/rekognition/latest/APIReference/API_UpdateStreamProcessor.html">UpdateStreamProcessor</a>
             
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="P:Amazon.Rekognition.IAmazonRekognition.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CompareFacesAsync(Amazon.Rekognition.Model.CompareFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Compares a face in the <i>source</i> input image with each of the 100 largest faces
            detected in the <i>target</i> input image. 
            
             
            <para>
             If the source image contains multiple faces, the service detects the largest face
            and compares it with each face detected in the target image. 
            </para>
             <note> 
            <para>
            CompareFaces uses machine learning algorithms, which are probabilistic. A false negative
            is an incorrect prediction that a face in the target image has a low similarity confidence
            score when compared to the face in the source image. To reduce the probability of
            false negatives, we recommend that you compare the target image against multiple source
            images. If you plan to use <code>CompareFaces</code> to make a decision that impacts
            an individual's rights, privacy, or access to services, we recommend that you pass
            the result to a human for review and further validation before taking action.
            </para>
             </note> 
            <para>
            You pass the input and target images either as base64-encoded image bytes or as references
            to images in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes isn't supported. The image must be formatted as a
            PNG or JPEG file. 
            </para>
             
            <para>
            In response, the operation returns an array of face matches ordered by similarity
            score in descending order. For each face match, the response provides a bounding box
            of the face, facial landmarks, pose details (pitch, roll, and yaw), quality (brightness
            and sharpness), and confidence value (indicating the level of confidence that the
            bounding box contains a face). The response also provides a similarity score, which
            indicates how closely the faces match. 
            </para>
             <note> 
            <para>
            By default, only faces with a similarity score of greater than or equal to 80% are
            returned in the response. You can change this value by specifying the <code>SimilarityThreshold</code>
            parameter.
            </para>
             </note> 
            <para>
             <code>CompareFaces</code> also returns an array of faces that don't match the source
            image. For each face, it returns a bounding box, confidence value, landmarks, pose
            details, and quality. The response also returns information about the face in the
            source image, including the bounding box of the face and confidence value.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. Use <code>QualityFilter</code> to set the quality bar by specifying <code>LOW</code>,
            <code>MEDIUM</code>, or <code>HIGH</code>. If you do not want to filter detected faces,
            specify <code>NONE</code>. The default value is <code>NONE</code>. 
            </para>
             
            <para>
            If the image doesn't contain Exif metadata, <code>CompareFaces</code> returns orientation
            information for the source and target images. Use these values to display the images
            with the correct image orientation.
            </para>
             
            <para>
            If no faces are detected in the source or target images, <code>CompareFaces</code>
            returns an <code>InvalidParameterException</code> error. 
            </para>
             <note> 
            <para>
             This is a stateless API operation. That is, data returned by this operation doesn't
            persist.
            </para>
             </note> 
            <para>
            For an example, see Comparing Faces in Images in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CompareFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompareFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CompareFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CompareFaces">REST API Reference for CompareFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CopyProjectVersionAsync(Amazon.Rekognition.Model.CopyProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Copies a version of an Amazon Rekognition Custom Labels model from a source project
            to a destination project. The source and destination projects can be in different
            AWS accounts but must be in the same AWS Region. You can't copy a model to another
            AWS service. 
            
             
            <para>
            To copy a model version to a different AWS account, you need to create a resource-based
            policy known as a <i>project policy</i>. You attach the project policy to the source
            project by calling <a>PutProjectPolicy</a>. The project policy gives permission to
            copy the model version from a trusting AWS account to a trusted account.
            </para>
             
            <para>
            For more information creating and attaching a project policy, see Attaching a project
            policy (SDK) in the <i>Amazon Rekognition Custom Labels Developer Guide</i>. 
            </para>
             
            <para>
            If you are copying a model version to a project in the same AWS account, you don't
            need to create a project policy.
            </para>
             <note> 
            <para>
            To copy a model, the destination project, source project, and source model version
            must already exist.
            </para>
             </note> 
            <para>
            Copying a model version takes a while to complete. To get the current status, call
            <a>DescribeProjectVersions</a> and check the value of <code>Status</code> in the <a>ProjectVersionDescription</a>
            object. The copy operation has finished when the value of <code>Status</code> is <code>COPYING_COMPLETED</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CopyProjectVersion">REST API Reference for CopyProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateCollectionAsync(Amazon.Rekognition.Model.CreateCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a collection in an AWS Region. You can add faces to the collection using the
            <a>IndexFaces</a> operation. 
            
             
            <para>
            For example, you might create collections, one for each of your application users.
            A user can then index faces using the <code>IndexFaces</code> operation and persist
            results in a specific collection. Then, a user can search the collection for faces
            in the user-specific container. 
            </para>
             
            <para>
            When you create a collection, it is associated with the latest version of the face
            model version.
            </para>
             <note> 
            <para>
            Collection names are case-sensitive.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateCollection</code>
            action. If you want to tag your collection, you also require permission to perform
            the <code>rekognition:TagResource</code> operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCollection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCollection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            A resource with the specified ID already exists.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateCollection">REST API Reference for CreateCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateDatasetAsync(Amazon.Rekognition.Model.CreateDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Rekognition Custom Labels dataset. You can create a dataset by
            using an Amazon Sagemaker format manifest file or by copying an existing Amazon Rekognition
            Custom Labels dataset.
            
             
            <para>
            To create a training dataset for a project, specify <code>train</code> for the value
            of <code>DatasetType</code>. To create the test dataset for a project, specify <code>test</code>
            for the value of <code>DatasetType</code>. 
            </para>
             
            <para>
            The response from <code>CreateDataset</code> is the Amazon Resource Name (ARN) for
            the dataset. Creating a dataset takes a while to complete. Use <a>DescribeDataset</a>
            to check the current status. The dataset created successfully if the value of <code>Status</code>
            is <code>CREATE_COMPLETE</code>. 
            </para>
             
            <para>
            To check if any non-terminal errors occurred, call <a>ListDatasetEntries</a> and check
            for the presence of <code>errors</code> lists in the JSON Lines.
            </para>
             
            <para>
            Dataset creation fails if a terminal error occurs (<code>Status</code> = <code>CREATE_FAILED</code>).
            Currently, you can't access the terminal error information. 
            </para>
             
            <para>
            For more information, see Creating dataset in the <i>Amazon Rekognition Custom Labels
            Developer Guide</i>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateDataset</code>
            action. If you want to copy an existing dataset, you also require permission to perform
            the <code>rekognition:ListDatasetEntries</code> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDataset service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            A resource with the specified ID already exists.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateDataset">REST API Reference for CreateDataset Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateProjectAsync(Amazon.Rekognition.Model.CreateProjectRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Rekognition Custom Labels project. A project is a group of resources
            (datasets, model versions) that you use to create and manage Amazon Rekognition Custom
            Labels models. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateProject</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProject service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProject service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateProject">REST API Reference for CreateProject Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateProjectVersionAsync(Amazon.Rekognition.Model.CreateProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new version of a model and begins training. Models are managed as part of
            an Amazon Rekognition Custom Labels project. The response from <code>CreateProjectVersion</code>
            is an Amazon Resource Name (ARN) for the version of the model. 
            
             
            <para>
            Training uses the training and test datasets associated with the project. For more
            information, see Creating training and test dataset in the <i>Amazon Rekognition Custom
            Labels Developer Guide</i>. 
            </para>
             <note> 
            <para>
            You can train a model in a project that doesn't have associated datasets by specifying
            manifest files in the <code>TrainingData</code> and <code>TestingData</code> fields.
            
            </para>
             
            <para>
            If you open the console after training a model with manifest files, Amazon Rekognition
            Custom Labels creates the datasets for you using the most recent manifest files. You
            can no longer train a model version for the project by specifying manifest files.
            
            </para>
             
            <para>
            Instead of training with a project without associated datasets, we recommend that
            you use the manifest files to create training and test datasets for the project.
            </para>
             </note> 
            <para>
            Training takes a while to complete. You can get the current status by calling <a>DescribeProjectVersions</a>.
            Training completed successfully if the value of the <code>Status</code> field is <code>TRAINING_COMPLETED</code>.
            </para>
             
            <para>
            If training fails, see Debugging a failed model training in the <i>Amazon Rekognition
            Custom Labels</i> developer guide. 
            </para>
             
            <para>
            Once training has successfully completed, call <a>DescribeProjectVersions</a> to get
            the training results and evaluate the model. For more information, see Improving a
            trained Amazon Rekognition Custom Labels model in the <i>Amazon Rekognition Custom
            Labels</i> developers guide. 
            </para>
             
            <para>
            After evaluating the model, you start the model by calling <a>StartProjectVersion</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateProjectVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateProjectVersion">REST API Reference for CreateProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateStreamProcessorAsync(Amazon.Rekognition.Model.CreateStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon Rekognition stream processor that you can use to detect and recognize
            faces or to detect labels in a streaming video.
            
             
            <para>
            Amazon Rekognition Video is a consumer of live video from Amazon Kinesis Video Streams.
            There are two different settings for stream processors in Amazon Rekognition: detecting
            faces and detecting labels.
            </para>
             <ul> <li> 
            <para>
            If you are creating a stream processor for detecting faces, you provide as input a
            Kinesis video stream (<code>Input</code>) and a Kinesis data stream (<code>Output</code>)
            stream. You also specify the face recognition criteria in <code>Settings</code>. For
            example, the collection containing faces that you want to recognize. After you have
            finished analyzing a streaming video, use <a>StopStreamProcessor</a> to stop processing.
            </para>
             </li> <li> 
            <para>
            If you are creating a stream processor to detect labels, you provide as input a Kinesis
            video stream (<code>Input</code>), Amazon S3 bucket information (<code>Output</code>),
            and an Amazon SNS topic ARN (<code>NotificationChannel</code>). You can also provide
            a KMS key ID to encrypt the data sent to your Amazon S3 bucket. You specify what you
            want to detect in <code>ConnectedHomeSettings</code>, such as people, packages and
            people, or pets, people, and packages. You can also specify where in the frame you
            want Amazon Rekognition to monitor with <code>RegionsOfInterest</code>. When you run
            the <a>StartStreamProcessor</a> operation on a label detection stream processor, you
            input start and stop information to determine the length of the processing time.
            </para>
             </li> </ul> 
            <para>
             Use <code>Name</code> to assign an identifier for the stream processor. You use <code>Name</code>
            to manage the stream processor. For example, you can start processing the source video
            by calling <a>StartStreamProcessor</a> with the <code>Name</code> field. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateStreamProcessor</code>
            action. If you want to tag your stream processor, you also require permission to perform
            the <code>rekognition:TagResource</code> operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateStreamProcessor">REST API Reference for CreateStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteCollectionAsync(Amazon.Rekognition.Model.DeleteCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified collection. Note that this operation removes all faces in the
            collection. For an example, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/delete-collection-procedure.html">Deleting
            a collection</a>.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteCollection</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCollection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCollection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteCollection">REST API Reference for DeleteCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteDatasetAsync(Amazon.Rekognition.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing Amazon Rekognition Custom Labels dataset. Deleting a dataset might
            take while. Use <a>DescribeDataset</a> to check the current status. The dataset is
            still deleting if the value of <code>Status</code> is <code>DELETE_IN_PROGRESS</code>.
            If you try to access the dataset after it is deleted, you get a <code>ResourceNotFoundException</code>
            exception. 
            
             
            <para>
            You can't delete a dataset while it is creating (<code>Status</code> = <code>CREATE_IN_PROGRESS</code>)
            or if the dataset is updating (<code>Status</code> = <code>UPDATE_IN_PROGRESS</code>).
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteDataset</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDataset service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteDataset">REST API Reference for DeleteDataset Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteFacesAsync(Amazon.Rekognition.Model.DeleteFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes faces from a collection. You specify a collection ID and an array of face
            IDs to remove from the collection.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteFaces">REST API Reference for DeleteFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteProjectAsync(Amazon.Rekognition.Model.DeleteProjectRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Rekognition Custom Labels project. To delete a project you must
            first delete all models associated with the project. To delete a model, see <a>DeleteProjectVersion</a>.
            
             
            <para>
             <code>DeleteProject</code> is an asynchronous operation. To check if the project
            is deleted, call <a>DescribeProjects</a>. The project is deleted when the project
            no longer appears in the response. Be aware that deleting a given project will also
            delete any <code>ProjectPolicies</code> associated with that project.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteProject</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProject service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProject service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteProject">REST API Reference for DeleteProject Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteProjectPolicyAsync(Amazon.Rekognition.Model.DeleteProjectPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing project policy.
            
             
            <para>
            To get a list of project policies attached to a project, call <a>ListProjectPolicies</a>.
            To attach a project policy to a project, call <a>PutProjectPolicy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProjectPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProjectPolicy service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException">
            The supplied revision id for the project policy is invalid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteProjectPolicy">REST API Reference for DeleteProjectPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteProjectVersionAsync(Amazon.Rekognition.Model.DeleteProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon Rekognition Custom Labels model. 
            
             
            <para>
            You can't delete a model if it is running or if it is training. To check the status
            of a model, use the <code>Status</code> field returned from <a>DescribeProjectVersions</a>.
            To stop a running model call <a>StopProjectVersion</a>. If the model is training,
            wait until it finishes.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteProjectVersion</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteProjectVersion">REST API Reference for DeleteProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteStreamProcessorAsync(Amazon.Rekognition.Model.DeleteStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the stream processor identified by <code>Name</code>. You assign the value
            for <code>Name</code> when you create the stream processor with <a>CreateStreamProcessor</a>.
            You might not be able to use the same name for a stream processor for a few seconds
            after calling <code>DeleteStreamProcessor</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteStreamProcessor">REST API Reference for DeleteStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DescribeCollectionAsync(Amazon.Rekognition.Model.DescribeCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the specified collection. You can use <code>DescribeCollection</code> to
            get information, such as the number of faces indexed into a collection and the version
            of the model used by the collection for face detection.
            
             
            <para>
            For more information, see Describing a Collection in the Amazon Rekognition Developer
            Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCollection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCollection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeCollection">REST API Reference for DescribeCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DescribeDatasetAsync(Amazon.Rekognition.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Describes an Amazon Rekognition Custom Labels dataset. You can get information such
            as the current status of a dataset and statistics about the images and labels in a
            dataset. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeDataset</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataset service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDataset service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeDataset">REST API Reference for DescribeDataset Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DescribeProjectsAsync(Amazon.Rekognition.Model.DescribeProjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about your Amazon Rekognition Custom Labels projects. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeProjects</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeProjects service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeProjects service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeProjects">REST API Reference for DescribeProjects Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DescribeProjectVersionsAsync(Amazon.Rekognition.Model.DescribeProjectVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists and describes the versions of a model in an Amazon Rekognition Custom Labels
            project. You can specify up to 10 model versions in <code>ProjectVersionArns</code>.
            If you don't specify a value, descriptions for all model versions in the project are
            returned.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DescribeProjectVersions</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeProjectVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeProjectVersions service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeProjectVersions">REST API Reference for DescribeProjectVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DescribeStreamProcessorAsync(Amazon.Rekognition.Model.DescribeStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Provides information about a stream processor created by <a>CreateStreamProcessor</a>.
            You can get information about the input and output streams, the input parameters for
            the face recognition being performed, and the current status of the stream processor.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeStreamProcessor">REST API Reference for DescribeStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectCustomLabelsAsync(Amazon.Rekognition.Model.DetectCustomLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Detects custom labels in a supplied image by using an Amazon Rekognition Custom Labels
            model. 
            
             
            <para>
            You specify which version of a model version to use by using the <code>ProjectVersionArn</code>
            input parameter. 
            </para>
             
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object that the model version detects on an image, the API returns a (<code>CustomLabel</code>)
            object in an array (<code>CustomLabels</code>). Each <code>CustomLabel</code> object
            provides the label name (<code>Name</code>), the level of confidence that the image
            contains the object (<code>Confidence</code>), and object location information, if
            it exists, for the label on the image (<code>Geometry</code>). 
            </para>
             
            <para>
            To filter labels that are returned, specify a value for <code>MinConfidence</code>.
            <code>DetectCustomLabelsLabels</code> only returns labels with a confidence that's
            higher than the specified value. The value of <code>MinConfidence</code> maps to the
            assumed threshold values created during training. For more information, see <i>Assumed
            threshold</i> in the Amazon Rekognition Custom Labels Developer Guide. Amazon Rekognition
            Custom Labels metrics expresses an assumed threshold as a floating point value between
            0-1. The range of <code>MinConfidence</code> normalizes the threshold value to a percentage
            value (0-100). Confidence responses from <code>DetectCustomLabels</code> are also
            returned as a percentage. You can use <code>MinConfidence</code> to change the precision
            and recall or your model. For more information, see <i>Analyzing an image</i> in the
            Amazon Rekognition Custom Labels Developer Guide. 
            </para>
             
            <para>
            If you don't specify a value for <code>MinConfidence</code>, <code>DetectCustomLabels</code>
            returns labels based on the assumed threshold of each label.
            </para>
             
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectCustomLabels</code>
            action. 
            </para>
             
            <para>
            For more information, see <i>Analyzing an image</i> in the Amazon Rekognition Custom
            Labels Developer Guide. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectCustomLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectCustomLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectCustomLabels">REST API Reference for DetectCustomLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectFacesAsync(Amazon.Rekognition.Model.DetectFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Detects faces within an image that is provided as input.
            
             
            <para>
             <code>DetectFaces</code> detects the 100 largest faces in the image. For each face
            detected, the operation returns face details. These details include a bounding box
            of the face, a confidence value (that the bounding box contains a face), and a fixed
            set of attributes such as facial landmarks (for example, coordinates of eye and mouth),
            presence of beard, sunglasses, and so on. 
            </para>
             
            <para>
            The face-detection algorithm is most effective on frontal faces. For non-frontal or
            obscured faces, the algorithm might not detect the faces or might detect faces with
            lower confidence. 
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             <note> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectFaces</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectFaces">REST API Reference for DetectFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectLabelsAsync(Amazon.Rekognition.Model.DetectLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Detects instances of real-world entities within an image (JPEG or PNG) provided as
            input. This includes objects like flower, tree, and table; events like wedding, graduation,
            and birthday party; and concepts like landscape, evening, and nature. 
            
             
            <para>
            For an example, see Analyzing images stored in an Amazon S3 bucket in the Amazon Rekognition
            Developer Guide.
            </para>
             <note> 
            <para>
             <code>DetectLabels</code> does not support the detection of activities. However,
            activity detection is supported for label detection in videos. For more information,
            see StartLabelDetection in the Amazon Rekognition Developer Guide.
            </para>
             </note> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object, scene, and concept the API returns one or more labels. Each label
            provides the object name, and the level of confidence that the image contains the
            object. For example, suppose the input image has a lighthouse, the sea, and a rock.
            The response includes all three labels, one for each object. 
            </para>
             
            <para>
             <code>{Name: lighthouse, Confidence: 98.4629}</code> 
            </para>
             
            <para>
             <code>{Name: rock,Confidence: 79.2097}</code> 
            </para>
             
            <para>
             <code> {Name: sea,Confidence: 75.061}</code> 
            </para>
             
            <para>
            In the preceding example, the operation returns one label for each of the three objects.
            The operation can also return multiple labels for the same object in the image. For
            example, if the input image shows a flower (for example, a tulip), the operation might
            return the following three labels. 
            </para>
             
            <para>
             <code>{Name: flower,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: plant,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: tulip,Confidence: 99.0562}</code> 
            </para>
             
            <para>
            In this example, the detection algorithm more precisely identifies the flower as a
            tulip.
            </para>
             
            <para>
            In response, the API returns an array of labels. In addition, the response also includes
            the orientation correction. Optionally, you can specify <code>MinConfidence</code>
            to control the confidence threshold for the labels returned. The default is 55%. You
            can also add the <code>MaxLabels</code> parameter to limit the number of labels returned.
            
            </para>
             <note> 
            <para>
            If the object detected is a person, the operation doesn't provide the same facial
            details that the <a>DetectFaces</a> operation provides.
            </para>
             </note> 
            <para>
             <code>DetectLabels</code> returns bounding boxes for instances of common object labels
            in an array of <a>Instance</a> objects. An <code>Instance</code> object contains a
            <a>BoundingBox</a> object, for the location of the label on the image. It also includes
            the confidence by which the bounding box was detected.
            </para>
             
            <para>
             <code>DetectLabels</code> also returns a hierarchical taxonomy of detected labels.
            For example, a detected car might be assigned the label <i>car</i>. The label <i>car</i>
            has two parent labels: <i>Vehicle</i> (its parent) and <i>Transportation</i> (its
            grandparent). The response returns the entire list of ancestors for a label. Each
            ancestor is a unique label in the response. In the previous example, <i>Car</i>, <i>Vehicle</i>,
            and <i>Transportation</i> are returned as unique labels in the response. 
            </para>
             
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectLabels</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectLabels">REST API Reference for DetectLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectModerationLabelsAsync(Amazon.Rekognition.Model.DetectModerationLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Detects unsafe content in a specified JPEG or PNG format image. Use <code>DetectModerationLabels</code>
            to moderate images depending on your requirements. For example, you might want to
            filter images that contain nudity, but not images containing suggestive content.
            
             
            <para>
            To filter images, use the labels returned by <code>DetectModerationLabels</code> to
            determine which types of content are appropriate.
            </para>
             
            <para>
            For information about moderation labels, see Detecting Unsafe Content in the Amazon
            Rekognition Developer Guide.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectModerationLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectModerationLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.HumanLoopQuotaExceededException">
            The number of in-progress human reviews you have has exceeded the number allowed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectModerationLabels">REST API Reference for DetectModerationLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectProtectiveEquipmentAsync(Amazon.Rekognition.Model.DetectProtectiveEquipmentRequest,System.Threading.CancellationToken)">
            <summary>
            Detects Personal Protective Equipment (PPE) worn by people detected in an image. Amazon
            Rekognition can detect the following types of PPE.
            
             <ul> <li> 
            <para>
            Face cover
            </para>
             </li> <li> 
            <para>
            Hand cover
            </para>
             </li> <li> 
            <para>
            Head cover
            </para>
             </li> </ul> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. The image must be either a PNG or JPG formatted file. 
            </para>
             
            <para>
             <code>DetectProtectiveEquipment</code> detects PPE worn by up to 15 persons detected
            in an image.
            </para>
             
            <para>
            For each person detected in the image the API returns an array of body parts (face,
            head, left-hand, right-hand). For each body part, an array of detected items of PPE
            is returned, including an indicator of whether or not the PPE covers the body part.
            The API returns the confidence it has in each detection (person, PPE, body part and
            body part coverage). It also returns a bounding box (<a>BoundingBox</a>) for each
            detected person and each detected item of PPE. 
            </para>
             
            <para>
            You can optionally request a summary of detected PPE items with the <code>SummarizationAttributes</code>
            input parameter. The summary provides the following information. 
            </para>
             <ul> <li> 
            <para>
            The persons detected as wearing all of the types of PPE that you specify.
            </para>
             </li> <li> 
            <para>
            The persons detected as not wearing all of the types PPE that you specify.
            </para>
             </li> <li> 
            <para>
            The persons detected where PPE adornment could not be determined. 
            </para>
             </li> </ul> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectProtectiveEquipment</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectProtectiveEquipment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectProtectiveEquipment service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectProtectiveEquipment">REST API Reference for DetectProtectiveEquipment Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectTextAsync(Amazon.Rekognition.Model.DetectTextRequest,System.Threading.CancellationToken)">
            <summary>
            Detects text in the input image and converts it into machine-readable text.
            
             
            <para>
            Pass the input image as base64-encoded image bytes or as a reference to an image in
            an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            you must pass it as a reference to an image in an Amazon S3 bucket. For the AWS CLI,
            passing image bytes is not supported. The image must be either a .png or .jpeg formatted
            file. 
            </para>
             
            <para>
            The <code>DetectText</code> operation returns text in an array of <a>TextDetection</a>
            elements, <code>TextDetections</code>. Each <code>TextDetection</code> element provides
            information about a single word or line of text that was detected in the image. 
            </para>
             
            <para>
            A word is one or more script characters that are not separated by spaces. <code>DetectText</code>
            can detect up to 100 words in an image.
            </para>
             
            <para>
            A line is a string of equally spaced words. A line isn't necessarily a complete sentence.
            For example, a driver's license number is detected as a line. A line ends when there
            is no aligned text after it. Also, a line ends when there is a large gap between words,
            relative to the length of the words. This means, depending on the gap between words,
            Amazon Rekognition may detect multiple lines in text aligned in the same direction.
            Periods don't represent the end of a line. If a sentence spans multiple lines, the
            <code>DetectText</code> operation returns multiple lines.
            </para>
             
            <para>
            To determine whether a <code>TextDetection</code> element is a line of text or a word,
            use the <code>TextDetection</code> object <code>Type</code> field. 
            </para>
             
            <para>
            To be detected, text must be within +/- 90 degrees orientation of the horizontal axis.
            </para>
             
            <para>
            For more information, see Detecting text in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetectText service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DetectText service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectText">REST API Reference for DetectText Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DistributeDatasetEntriesAsync(Amazon.Rekognition.Model.DistributeDatasetEntriesRequest,System.Threading.CancellationToken)">
            <summary>
            Distributes the entries (images) in a training dataset across the training dataset
            and the test dataset for a project. <code>DistributeDatasetEntries</code> moves 20%
            of the training dataset images to the test dataset. An entry is a JSON Line that describes
            an image. 
            
             
            <para>
            You supply the Amazon Resource Names (ARN) of a project's training dataset and test
            dataset. The training dataset must contain the images that you want to split. The
            test dataset must be empty. The datasets must belong to the same project. To create
            training and test datasets for a project, call <a>CreateDataset</a>.
            </para>
             
            <para>
            Distributing a dataset takes a while to complete. To check the status call <code>DescribeDataset</code>.
            The operation is complete when the <code>Status</code> field for the training dataset
            and the test dataset is <code>UPDATE_COMPLETE</code>. If the dataset split fails,
            the value of <code>Status</code> is <code>UPDATE_FAILED</code>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DistributeDatasetEntries</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DistributeDatasetEntries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DistributeDatasetEntries service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DistributeDatasetEntries">REST API Reference for DistributeDatasetEntries Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetCelebrityInfoAsync(Amazon.Rekognition.Model.GetCelebrityInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the name and additional information about a celebrity based on their Amazon Rekognition
            ID. The additional information is returned as an array of URLs. If there is no additional
            information about the celebrity, this list is empty.
            
             
            <para>
            For more information, see Getting information about a celebrity in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:GetCelebrityInfo</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCelebrityInfo service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCelebrityInfo service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityInfo">REST API Reference for GetCelebrityInfo Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetCelebrityRecognitionAsync(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the celebrity recognition results for a Amazon Rekognition Video analysis started
            by <a>StartCelebrityRecognition</a>.
            
             
            <para>
            Celebrity recognition in a video is an asynchronous operation. Analysis is started
            by a call to <a>StartCelebrityRecognition</a> which returns a job identifier (<code>JobId</code>).
            
            </para>
             
            <para>
            When the celebrity recognition operation finishes, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic registered in
            the initial call to <code>StartCelebrityRecognition</code>. To get the results of
            the celebrity recognition analysis, first check that the status value published to
            the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetCelebrityDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityDetection</code>.
            
            </para>
             
            <para>
            For more information, see Working With Stored Videos in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
             <code>GetCelebrityRecognition</code> returns detected celebrities and the time(s)
            they are detected in an array (<code>Celebrities</code>) of <a>CelebrityRecognition</a>
            objects. Each <code>CelebrityRecognition</code> contains information about the celebrity
            in a <a>CelebrityDetail</a> object and the time, <code>Timestamp</code>, the celebrity
            was detected. This <a>CelebrityDetail</a> object stores information about the detected
            celebrity's face attributes, a face bounding box, known gender, the celebrity's name,
            and a confidence estimate.
            </para>
             <note> 
            <para>
             <code>GetCelebrityRecognition</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The <code>BoundingBox</code> field only applies to the detected face instance. The
            other facial attributes listed in the <code>Face</code> object of the following response
            syntax are not returned. For more information, see FaceDetail in the Amazon Rekognition
            Developer Guide. 
            </para>
             </note> 
            <para>
            By default, the <code>Celebrities</code> array is sorted by time (milliseconds from
            the start of the video). You can also sort the array by celebrity by specifying the
            value <code>ID</code> in the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The <code>CelebrityDetail</code> object includes the celebrity identifer and additional
            information urls. If you don't store the additional information urls, you can get
            them later by calling <a>GetCelebrityInfo</a> with the celebrity identifer.
            </para>
             
            <para>
            No information is returned for faces not recognized as celebrities.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetCelebrityDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetCelebrityRecognition</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCelebrityRecognition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCelebrityRecognition service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityRecognition">REST API Reference for GetCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetContentModerationAsync(Amazon.Rekognition.Model.GetContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the inappropriate, unwanted, or offensive content analysis results for a Amazon
            Rekognition Video analysis started by <a>StartContentModeration</a>. For a list of
            moderation labels in Amazon Rekognition, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/moderation.html#moderation-api">Using
            the image and video moderation APIs</a>.
            
             
            <para>
            Amazon Rekognition Video inappropriate or offensive content detection in a stored
            video is an asynchronous operation. You start analysis by calling <a>StartContentModeration</a>
            which returns a job identifier (<code>JobId</code>). When analysis finishes, Amazon
            Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartContentModeration</code>.
            To get the results of the content analysis, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetContentModeration</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            
            </para>
             
            <para>
            For more information, see Working with Stored Videos in the Amazon Rekognition Devlopers
            Guide.
            </para>
             
            <para>
             <code>GetContentModeration</code> returns detected inappropriate, unwanted, or offensive
            content moderation labels, and the time they are detected, in an array, <code>ModerationLabels</code>,
            of <a>ContentModerationDetection</a> objects. 
            </para>
             
            <para>
            By default, the moderated labels are returned sorted by time, in milliseconds from
            the start of the video. You can also sort them by moderated label by specifying <code>NAME</code>
            for the <code>SortBy</code> input parameter. 
            </para>
             
            <para>
            Since video analysis can return a large number of results, use the <code>MaxResults</code>
            parameter to limit the number of labels returned in a single call to <code>GetContentModeration</code>.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetContentModeration</code>
            and populate the <code>NextToken</code> request parameter with the value of <code>NextToken</code>
            returned from the previous call to <code>GetContentModeration</code>.
            </para>
             
            <para>
            For more information, see moderating content in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetContentModeration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetContentModeration service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetContentModeration">REST API Reference for GetContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetFaceDetectionAsync(Amazon.Rekognition.Model.GetFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets face detection results for a Amazon Rekognition Video analysis started by <a>StartFaceDetection</a>.
            
             
            <para>
            Face detection with Amazon Rekognition Video is an asynchronous operation. You start
            face detection by calling <a>StartFaceDetection</a> which returns a job identifier
            (<code>JobId</code>). When the face detection operation finishes, Amazon Rekognition
            Video publishes a completion status to the Amazon Simple Notification Service topic
            registered in the initial call to <code>StartFaceDetection</code>. To get the results
            of the face detection operation, first check that the status value published to the
            Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceDetection</a> and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            </para>
             
            <para>
             <code>GetFaceDetection</code> returns an array of detected faces (<code>Faces</code>)
            sorted by the time the faces were detected. 
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetFaceDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetFaceDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFaceDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFaceDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceDetection">REST API Reference for GetFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetFaceSearchAsync(Amazon.Rekognition.Model.GetFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the face search results for Amazon Rekognition Video face search started by <a>StartFaceSearch</a>.
            The search returns faces in a collection that match the faces of persons detected
            in a video. It also includes the time(s) that faces are matched in the video.
            
             
            <para>
            Face search in a video is an asynchronous operation. You start face search by calling
            to <a>StartFaceSearch</a> which returns a job identifier (<code>JobId</code>). When
            the search operation finishes, Amazon Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic registered in the initial call to
            <code>StartFaceSearch</code>. To get the search results, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetFaceSearch</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            </para>
             
            <para>
            For more information, see Searching Faces in a Collection in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            The search results are retured in an array, <code>Persons</code>, of <a>PersonMatch</a>
            objects. Each<code>PersonMatch</code> element contains details about the matching
            faces in the input collection, person information (facial attributes, bounding boxes,
            and person identifer) for the matched person, and the time the person was matched
            in the video.
            </para>
             <note> 
            <para>
             <code>GetFaceSearch</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. For more information, see FaceDetail in the Amazon
            Rekognition Developer Guide. 
            </para>
             </note> 
            <para>
            By default, the <code>Persons</code> array is sorted by the time, in milliseconds
            from the start of the video, persons are matched. You can also sort by persons by
            specifying <code>INDEX</code> for the <code>SORTBY</code> input parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFaceSearch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFaceSearch service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceSearch">REST API Reference for GetFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetLabelDetectionAsync(Amazon.Rekognition.Model.GetLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the label detection results of a Amazon Rekognition Video analysis started by
            <a>StartLabelDetection</a>. 
            
             
            <para>
            The label detection operation is started by a call to <a>StartLabelDetection</a> which
            returns a job identifier (<code>JobId</code>). When the label detection operation
            finishes, Amazon Rekognition publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartlabelDetection</code>.
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetLabelDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetLabelDetection</code> returns an array of detected labels (<code>Labels</code>)
            sorted by the time the labels were detected. You can also sort by the label name by
            specifying <code>NAME</code> for the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The labels returned include the label name, the percentage confidence in the accuracy
            of the detected label, and the time the label was detected in the video.
            </para>
             
            <para>
            The returned labels also include bounding box information for common objects, a hierarchical
            taxonomy of detected labels, and the version of the label model used for detection.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetlabelDetection</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetLabelDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLabelDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLabelDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetLabelDetection">REST API Reference for GetLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetPersonTrackingAsync(Amazon.Rekognition.Model.GetPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the path tracking results of a Amazon Rekognition Video analysis started by <a>StartPersonTracking</a>.
            
             
            <para>
            The person path tracking operation is started by a call to <code>StartPersonTracking</code>
            which returns a job identifier (<code>JobId</code>). When the operation finishes,
            Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
            To get the results of the person path tracking operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetPersonTracking</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
             <code>GetPersonTracking</code> returns an array, <code>Persons</code>, of tracked
            persons and the time(s) their paths were tracked in the video. 
            </para>
             <note> 
            <para>
             <code>GetPersonTracking</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. 
            </para>
             
            <para>
            For more information, see FaceDetail in the Amazon Rekognition Developer Guide.
            </para>
             </note> 
            <para>
            By default, the array is sorted by the time(s) a person's path is tracked in the video.
            You can sort by tracked persons by specifying <code>INDEX</code> for the <code>SortBy</code>
            input parameter.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of items returned. If
            there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetPersonTracking</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetPersonTracking</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPersonTracking service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPersonTracking service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetPersonTracking">REST API Reference for GetPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetSegmentDetectionAsync(Amazon.Rekognition.Model.GetSegmentDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the segment detection results of a Amazon Rekognition Video analysis started
            by <a>StartSegmentDetection</a>.
            
             
            <para>
            Segment detection with Amazon Rekognition Video is an asynchronous operation. You
            start segment detection by calling <a>StartSegmentDetection</a> which returns a job
            identifier (<code>JobId</code>). When the segment detection operation finishes, Amazon
            Rekognition publishes a completion status to the Amazon Simple Notification Service
            topic registered in the initial call to <code>StartSegmentDetection</code>. To get
            the results of the segment detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <code>GetSegmentDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call of <code>StartSegmentDetection</code>.
            </para>
             
            <para>
             <code>GetSegmentDetection</code> returns detected segments in an array (<code>Segments</code>)
            of <a>SegmentDetection</a> objects. <code>Segments</code> is sorted by the segment
            types specified in the <code>SegmentTypes</code> input parameter of <code>StartSegmentDetection</code>.
            Each element of the array includes the detected segment, the precentage confidence
            in the acuracy of the detected segment, the type of the segment, and the frame in
            which the segment was detected.
            </para>
             
            <para>
            Use <code>SelectedSegmentTypes</code> to find out the type of segment detection requested
            in the call to <code>StartSegmentDetection</code>.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of segment detections
            returned. If there are more results than specified in <code>MaxResults</code>, the
            value of <code>NextToken</code> in the operation response contains a pagination token
            for getting the next set of results. To get the next page of results, call <code>GetSegmentDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetSegmentDetection</code>.
            </para>
             
            <para>
            For more information, see Detecting video segments in stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSegmentDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSegmentDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetSegmentDetection">REST API Reference for GetSegmentDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetTextDetectionAsync(Amazon.Rekognition.Model.GetTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the text detection results of a Amazon Rekognition Video analysis started by
            <a>StartTextDetection</a>.
            
             
            <para>
            Text detection with Amazon Rekognition Video is an asynchronous operation. You start
            text detection by calling <a>StartTextDetection</a> which returns a job identifier
            (<code>JobId</code>) When the text detection operation finishes, Amazon Rekognition
            publishes a completion status to the Amazon Simple Notification Service topic registered
            in the initial call to <code>StartTextDetection</code>. To get the results of the
            text detection operation, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. if so, call <code>GetTextDetection</code> and
            pass the job identifier (<code>JobId</code>) from the initial call of <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetTextDetection</code> returns an array of detected text (<code>TextDetections</code>)
            sorted by the time the text was detected, up to 50 words per frame of video.
            </para>
             
            <para>
            Each element of the array includes the detected text, the precentage confidence in
            the acuracy of the detected text, the time the text was detected, bounding box information
            for where the text was located, and unique identifiers for words and their lines.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of text detections returned. If there
            are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetTextDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetTextDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetTextDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetTextDetection">REST API Reference for GetTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.IndexFacesAsync(Amazon.Rekognition.Model.IndexFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Detects faces in the input image and adds them to the specified collection. 
            
             
            <para>
            Amazon Rekognition doesn't save the actual faces that are detected. Instead, the underlying
            detection algorithm first detects the faces in the input image. For each face, the
            algorithm extracts facial features into a feature vector, and stores it in the backend
            database. Amazon Rekognition uses feature vectors when it performs face match and
            search operations using the <a>SearchFaces</a> and <a>SearchFacesByImage</a> operations.
            </para>
             
            <para>
            For more information, see Adding faces to a collection in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            To get the number of faces in a collection, call <a>DescribeCollection</a>. 
            </para>
             
            <para>
            If you're using version 1.0 of the face detection model, <code>IndexFaces</code> indexes
            the 15 largest faces in the input image. Later versions of the face detection model
            index the 100 largest faces in the input image. 
            </para>
             
            <para>
            If you're using version 4 or later of the face model, image orientation information
            is not returned in the <code>OrientationCorrection</code> field. 
            </para>
             
            <para>
            To determine which version of the model you're using, call <a>DescribeCollection</a>
            and supply the collection ID. You can also get the model version from the value of
            <code>FaceModelVersion</code> in the response from <code>IndexFaces</code> 
            </para>
             
            <para>
            For more information, see Model Versioning in the Amazon Rekognition Developer Guide.
            </para>
             
            <para>
            If you provide the optional <code>ExternalImageId</code> for the input image you provided,
            Amazon Rekognition associates this ID with all faces that it detects. When you call
            the <a>ListFaces</a> operation, the response returns the external ID. You can use
            this external image ID to create a client-side index to associate the faces with each
            image. You can then use the index to find all faces in an image.
            </para>
             
            <para>
            You can specify the maximum number of faces to index with the <code>MaxFaces</code>
            input parameter. This is useful when you want to index the largest faces in an image
            and don't want to index smaller faces, such as those belonging to people standing
            in the background.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. By default, <code>IndexFaces</code> chooses the quality bar that's used
            to filter faces. You can also explicitly choose the quality bar. Use <code>QualityFilter</code>,
            to set the quality bar by specifying <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>.
            If you do not want to filter detected faces, specify <code>NONE</code>. 
            </para>
             <note> 
            <para>
            To use quality filtering, you need a collection associated with version 3 of the face
            model or higher. To get the version of the face model associated with a collection,
            call <a>DescribeCollection</a>. 
            </para>
             </note> 
            <para>
            Information about faces detected in an image, but not indexed, is returned in an array
            of <a>UnindexedFace</a> objects, <code>UnindexedFaces</code>. Faces aren't indexed
            for reasons such as:
            </para>
             <ul> <li> 
            <para>
            The number of faces detected exceeds the value of the <code>MaxFaces</code> request
            parameter.
            </para>
             </li> <li> 
            <para>
            The face is too small compared to the image dimensions.
            </para>
             </li> <li> 
            <para>
            The face is too blurry.
            </para>
             </li> <li> 
            <para>
            The image is too dark.
            </para>
             </li> <li> 
            <para>
            The face has an extreme pose.
            </para>
             </li> <li> 
            <para>
            The face doesn’t have enough detail to be suitable for face search.
            </para>
             </li> </ul> 
            <para>
            In response, the <code>IndexFaces</code> operation returns an array of metadata for
            all detected faces, <code>FaceRecords</code>. This includes: 
            </para>
             <ul> <li> 
            <para>
            The bounding box, <code>BoundingBox</code>, of the detected face. 
            </para>
             </li> <li> 
            <para>
            A confidence value, <code>Confidence</code>, which indicates the confidence that the
            bounding box contains a face.
            </para>
             </li> <li> 
            <para>
            A face ID, <code>FaceId</code>, assigned by the service for each face that's detected
            and stored.
            </para>
             </li> <li> 
            <para>
            An image ID, <code>ImageId</code>, assigned by the service for the input image.
            </para>
             </li> </ul> 
            <para>
            If you request all facial attributes (by using the <code>detectionAttributes</code>
            parameter), Amazon Rekognition returns detailed facial attributes, such as facial
            landmarks (for example, location of eye and mouth) and other facial attributes. If
            you provide the same image, specify the same collection, and use the same external
            ID in the <code>IndexFaces</code> operation, Amazon Rekognition doesn't save duplicate
            face metadata.
            </para>
              
            <para>
            The input image is passed either as base64-encoded image bytes, or as a reference
            to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes isn't supported. The image must be formatted as a
            PNG or JPEG file. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:IndexFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IndexFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IndexFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/IndexFaces">REST API Reference for IndexFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListCollectionsAsync(Amazon.Rekognition.Model.ListCollectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns list of collection IDs in your account. If the result is truncated, the response
            also provides a <code>NextToken</code> that you can use in the subsequent request
            to fetch the next set of collection IDs.
            
             
            <para>
            For an example, see Listing collections in the Amazon Rekognition Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListCollections</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCollections service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCollections service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListCollections">REST API Reference for ListCollections Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListDatasetEntriesAsync(Amazon.Rekognition.Model.ListDatasetEntriesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the entries (images) within a dataset. An entry is a JSON Line that contains
            the information for a single image, including the image location, assigned labels,
            and object location bounding boxes. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-manifest-files.html">Creating
            a manifest file</a>.
            
             
            <para>
            JSON Lines in the response include information about non-terminal errors found in
            the dataset. Non terminal errors are reported in <code>errors</code> lists within
            each JSON Line. The same information is reported in the training and testing validation
            result manifests that Amazon Rekognition Custom Labels creates during model training.
            
            </para>
             
            <para>
            You can filter the response in variety of ways, such as choosing which labels to return
            and returning JSON Lines created after a specific date. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListDatasetEntries</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasetEntries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasetEntries service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListDatasetEntries">REST API Reference for ListDatasetEntries Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListDatasetLabelsAsync(Amazon.Rekognition.Model.ListDatasetLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the labels in a dataset. Amazon Rekognition Custom Labels uses labels to describe
            images. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/customlabels-dg/md-labeling-images.html">Labeling
            images</a>. 
            
             
            <para>
             Lists the labels in a dataset. Amazon Rekognition Custom Labels uses labels to describe
            images. For more information, see Labeling images in the <i>Amazon Rekognition Custom
            Labels Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDatasetLabels service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDatasetLabels service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotReadyException">
            The requested resource isn't ready. For example, this exception occurs when you call
            <code>DetectCustomLabels</code> with a model version that isn't deployed.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListDatasetLabels">REST API Reference for ListDatasetLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListFacesAsync(Amazon.Rekognition.Model.ListFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns metadata for faces in the specified collection. This metadata includes information
            such as the bounding box coordinates, the confidence (that the bounding box contains
            a face), and face ID. For an example, see Listing Faces in a Collection in the Amazon
            Rekognition Developer Guide.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListFaces">REST API Reference for ListFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListProjectPoliciesAsync(Amazon.Rekognition.Model.ListProjectPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of the project policies attached to a project.
            
             
            <para>
            To attach a project policy to a project, call <a>PutProjectPolicy</a>. To remove a
            project policy from a project, call <a>DeleteProjectPolicy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProjectPolicies service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListProjectPolicies service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListProjectPolicies">REST API Reference for ListProjectPolicies Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListStreamProcessorsAsync(Amazon.Rekognition.Model.ListStreamProcessorsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a list of stream processors that you have created with <a>CreateStreamProcessor</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListStreamProcessors service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListStreamProcessors service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            Pagination token in the request is not valid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListStreamProcessors">REST API Reference for ListStreamProcessors Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListTagsForResourceAsync(Amazon.Rekognition.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of tags in an Amazon Rekognition collection, stream processor, or
            Custom Labels model. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListTagsForResource</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.PutProjectPolicyAsync(Amazon.Rekognition.Model.PutProjectPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches a project policy to a Amazon Rekognition Custom Labels project in a trusting
            AWS account. A project policy specifies that a trusted AWS account can copy a model
            version from a trusting AWS account to a project in the trusted AWS account. To copy
            a model version you use the <a>CopyProjectVersion</a> operation.
            
             
            <para>
            For more information about the format of a project policy document, see Attaching
            a project policy (SDK) in the <i>Amazon Rekognition Custom Labels Developer Guide</i>.
            
            </para>
             
            <para>
            The response from <code>PutProjectPolicy</code> is a revision ID for the project policy.
            You can attach multiple project policies to a project. You can also update an existing
            project policy by specifying the policy revision ID of the existing policy.
            </para>
             
            <para>
            To remove a project policy from a project, call <a>DeleteProjectPolicy</a>. To get
            a list of project policies attached to a project, call <a>ListProjectPolicies</a>.
            
            </para>
             
            <para>
            You copy a model version by calling <a>CopyProjectVersion</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutProjectPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutProjectPolicy service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidPolicyRevisionIdException">
            The supplied revision id for the project policy is invalid.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.MalformedPolicyDocumentException">
            The format of the project policy document that you supplied to <code>PutProjectPolicy</code>
            is incorrect.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            A resource with the specified ID already exists.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/PutProjectPolicy">REST API Reference for PutProjectPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.RecognizeCelebritiesAsync(Amazon.Rekognition.Model.RecognizeCelebritiesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an array of celebrities recognized in the input image. For more information,
            see Recognizing celebrities in the Amazon Rekognition Developer Guide. 
            
             
            <para>
             <code>RecognizeCelebrities</code> returns the 64 largest faces in the image. It lists
            the recognized celebrities in the <code>CelebrityFaces</code> array and any unrecognized
            faces in the <code>UnrecognizedFaces</code> array. <code>RecognizeCelebrities</code>
            doesn't return celebrities whose faces aren't among the largest 64 faces in the image.
            </para>
             
            <para>
            For each celebrity recognized, <code>RecognizeCelebrities</code> returns a <code>Celebrity</code>
            object. The <code>Celebrity</code> object contains the celebrity name, ID, URL links
            to additional information, match confidence, and a <code>ComparedFace</code> object
            that you can use to locate the celebrity's face on the image.
            </para>
             
            <para>
            Amazon Rekognition doesn't retain information about which images a celebrity has been
            recognized in. Your application must store this information and use the <code>Celebrity</code>
            ID property as a unique identifier for the celebrity. If you don't store the celebrity
            name or additional information URLs returned by <code>RecognizeCelebrities</code>,
            you will need the ID to identify the celebrity in a call to the <a>GetCelebrityInfo</a>
            operation.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
            For an example, see Recognizing celebrities in an image in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:RecognizeCelebrities</code>
            operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecognizeCelebrities service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecognizeCelebrities service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/RecognizeCelebrities">REST API Reference for RecognizeCelebrities Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.SearchFacesAsync(Amazon.Rekognition.Model.SearchFacesRequest,System.Threading.CancellationToken)">
            <summary>
            For a given input face ID, searches for matching faces in the collection the face
            belongs to. You get a face ID when you add a face to the collection using the <a>IndexFaces</a>
            operation. The operation compares the features of the input face with faces in the
            specified collection. 
            
             <note> 
            <para>
            You can also search faces without indexing faces by using the <code>SearchFacesByImage</code>
            operation.
            </para>
             </note> 
            <para>
             The operation response returns an array of faces that match, ordered by similarity
            score with the highest similarity first. More specifically, it is an array of metadata
            for each face match that is found. Along with the metadata, the response also includes
            a <code>confidence</code> value for each face match, indicating the confidence that
            the specific face matches the input face. 
            </para>
             
            <para>
            For an example, see Searching for a face using its face ID in the Amazon Rekognition
            Developer Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFaces</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchFaces service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchFaces service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFaces">REST API Reference for SearchFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.SearchFacesByImageAsync(Amazon.Rekognition.Model.SearchFacesByImageRequest,System.Threading.CancellationToken)">
            <summary>
            For a given input image, first detects the largest face in the image, and then searches
            the specified collection for matching faces. The operation compares the features of
            the input face with faces in the specified collection. 
            
             <note> 
            <para>
            To search for all faces in an input image, you might first call the <a>IndexFaces</a>
            operation, and then use the face IDs returned in subsequent calls to the <a>SearchFaces</a>
            operation. 
            </para>
             
            <para>
             You can also call the <code>DetectFaces</code> operation and use the bounding boxes
            in the response to make face crops, which then you can pass in to the <code>SearchFacesByImage</code>
            operation. 
            </para>
             </note> 
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
             The response returns an array of faces that match, ordered by similarity score with
            the highest similarity first. More specifically, it is an array of metadata for each
            face match found. Along with the metadata, the response also includes a <code>similarity</code>
            indicating how similar the face is to the input face. In the response, the operation
            also returns the bounding box (and a confidence level that the bounding box contains
            a face) of the face that Amazon Rekognition used for the input image. 
            </para>
             
            <para>
            If no faces are detected in the input image, <code>SearchFacesByImage</code> returns
            an <code>InvalidParameterException</code> error. 
            </para>
             
            <para>
            For an example, Searching for a Face Using an Image in the Amazon Rekognition Developer
            Guide.
            </para>
             
            <para>
            The <code>QualityFilter</code> input parameter allows you to filter out detected faces
            that don’t meet a required quality bar. The quality bar is based on a variety of common
            use cases. Use <code>QualityFilter</code> to set the quality bar for filtering by
            specifying <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>. If you do
            not want to filter detected faces, specify <code>NONE</code>. The default value is
            <code>NONE</code>.
            </para>
             <note> 
            <para>
            To use quality filtering, you need a collection associated with version 3 of the face
            model or higher. To get the version of the face model associated with a collection,
            call <a>DescribeCollection</a>. 
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFacesByImage</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchFacesByImage service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchFacesByImage service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ImageTooLargeException">
            The input image size exceeds the allowed limit. If you are calling DetectProtectiveEquipment,
            the image size or resolution exceeds the allowed limit. For more information, see
            Guidelines and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            The provided image format is not supported.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFacesByImage">REST API Reference for SearchFacesByImage Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartCelebrityRecognitionAsync(Amazon.Rekognition.Model.StartCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous recognition of celebrities in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect celebrities in a video must be stored in an Amazon
            S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartCelebrityRecognition</code> returns a job identifier (<code>JobId</code>)
            which you use to get the results of the analysis. When celebrity recognition analysis
            is finished, Amazon Rekognition Video publishes a completion status to the Amazon
            Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the celebrity recognition analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetCelebrityRecognition</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityRecognition</code>.
            
            </para>
             
            <para>
            For more information, see Recognizing celebrities in the Amazon Rekognition Developer
            Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartCelebrityRecognition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartCelebrityRecognition service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartCelebrityRecognition">REST API Reference for StartCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartContentModerationAsync(Amazon.Rekognition.Model.StartContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of inappropriate, unwanted, or offensive content in
            a stored video. For a list of moderation labels in Amazon Rekognition, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/moderation.html#moderation-api">Using
            the image and video moderation APIs</a>.
            
             
            <para>
            Amazon Rekognition Video can moderate content in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartContentModeration</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the analysis. When content analysis is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the content analysis, first check that the status value published
            to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetContentModeration</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            
            </para>
             
            <para>
            For more information, see Moderating content in the Amazon Rekognition Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartContentModeration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartContentModeration service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartContentModeration">REST API Reference for StartContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartFaceDetectionAsync(Amazon.Rekognition.Model.StartFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of faces in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect faces in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartFaceDetection</code>
            returns a job identifier (<code>JobId</code>) that you use to get the results of the
            operation. When face detection is finished, Amazon Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the face detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            </para>
             
            <para>
            For more information, see Detecting faces in a stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartFaceDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartFaceDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceDetection">REST API Reference for StartFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartFaceSearchAsync(Amazon.Rekognition.Model.StartFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous search for faces in a collection that match the faces of persons
            detected in a stored video.
            
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartFaceSearch</code> returns a job identifier
            (<code>JobId</code>) which you use to get the search results once the search has completed.
            When searching is finished, Amazon Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the search results, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetFaceSearch</a> and pass the
            job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/procedure-person-search-videos.html">Searching
            stored videos for faces</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartFaceSearch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartFaceSearch service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceSearch">REST API Reference for StartFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartLabelDetectionAsync(Amazon.Rekognition.Model.StartLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of labels in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect labels in a video. Labels are instances of real-world
            entities. This includes objects like flower, tree, and table; events like wedding,
            graduation, and birthday party; concepts like landscape, evening, and nature; and
            activities like a person getting out of a car or a person skiing.
            </para>
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartLabelDetection</code> returns a job
            identifier (<code>JobId</code>) which you use to get the results of the operation.
            When label detection is finished, Amazon Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetLabelDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartLabelDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartLabelDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartLabelDetection">REST API Reference for StartLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartPersonTrackingAsync(Amazon.Rekognition.Model.StartPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the asynchronous tracking of a person's path in a stored video.
            
             
            <para>
            Amazon Rekognition Video can track the path of people in a video stored in an Amazon
            S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartPersonTracking</code> returns a job identifier (<code>JobId</code>) which
            you use to get the results of the operation. When label detection is finished, Amazon
            Rekognition publishes a completion status to the Amazon Simple Notification Service
            topic that you specify in <code>NotificationChannel</code>. 
            </para>
             
            <para>
            To get the results of the person detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetPersonTracking</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartPersonTracking service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartPersonTracking service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartPersonTracking">REST API Reference for StartPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartProjectVersionAsync(Amazon.Rekognition.Model.StartProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the running of the version of a model. Starting a model takes a while to complete.
            To check the current state of the model, use <a>DescribeProjectVersions</a>.
            
             
            <para>
            Once the model is running, you can detect custom labels in new images by calling <a>DetectCustomLabels</a>.
            </para>
             <note> 
            <para>
            You are charged for the amount of time that the model is running. To stop a running
            model, call <a>StopProjectVersion</a>.
            </para>
             </note> 
            <para>
            For more information, see <i>Running a trained Amazon Rekognition Custom Labels model</i>
            in the Amazon Rekognition Custom Labels Guide.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:StartProjectVersion</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartProjectVersion">REST API Reference for StartProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartSegmentDetectionAsync(Amazon.Rekognition.Model.StartSegmentDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of segment detection in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect segments in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartSegmentDetection</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When segment detection is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            You can use the <code>Filters</code> (<a>StartSegmentDetectionFilters</a>) input parameter
            to specify the minimum detection confidence returned in the response. Within <code>Filters</code>,
            use <code>ShotFilter</code> (<a>StartShotDetectionFilter</a>) to filter detected shots.
            Use <code>TechnicalCueFilter</code> (<a>StartTechnicalCueDetectionFilter</a>) to filter
            technical cues. 
            </para>
             
            <para>
            To get the results of the segment detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetSegmentDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartSegmentDetection</code>.
            
            </para>
             
            <para>
            For more information, see Detecting video segments in stored video in the Amazon Rekognition
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartSegmentDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartSegmentDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartSegmentDetection">REST API Reference for StartSegmentDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartStreamProcessorAsync(Amazon.Rekognition.Model.StartStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Starts processing a stream processor. You create a stream processor by calling <a>CreateStreamProcessor</a>.
            To tell <code>StartStreamProcessor</code> which stream processor to start, use the
            value of the <code>Name</code> field specified in the call to <code>CreateStreamProcessor</code>.
            
             
            <para>
            If you are using a label detection stream processor to detect labels, you need to
            provide a <code>Start selector</code> and a <code>Stop selector</code> to determine
            the length of the stream processing time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartStreamProcessor">REST API Reference for StartStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartTextDetectionAsync(Amazon.Rekognition.Model.StartTextDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts asynchronous detection of text in a stored video.
            
             
            <para>
            Amazon Rekognition Video can detect text in a video stored in an Amazon S3 bucket.
            Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartTextDetection</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When text detection is finished, Amazon Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the text detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetTextDetection</a>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartTextDetection</code>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTextDetection service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartTextDetection service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            A <code>ClientRequestToken</code> input parameter was reused with an operation, but
            at least one of the other input parameters is different from the previous call to
            the operation.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            Amazon Rekognition is unable to access the S3 object specified in the request.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.VideoTooLargeException">
            The file size or duration of the supplied media is too large. The maximum file size
            is 10GB. The maximum duration is 6 hours.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartTextDetection">REST API Reference for StartTextDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StopProjectVersionAsync(Amazon.Rekognition.Model.StopProjectVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running model. The operation might take a while to complete. To check the
            current status, call <a>DescribeProjectVersions</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopProjectVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopProjectVersion service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StopProjectVersion">REST API Reference for StopProjectVersion Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StopStreamProcessorAsync(Amazon.Rekognition.Model.StopStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Stops a running stream processor that was created by <a>CreateStreamProcessor</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StopStreamProcessor">REST API Reference for StopStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.TagResourceAsync(Amazon.Rekognition.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more key-value tags to an Amazon Rekognition collection, stream processor,
            or Custom Labels model. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            AWS Resources</a>. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:TagResource</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ServiceQuotaExceededException">
            The size of the collection exceeds the allowed limit. For more information, see Guidelines
            and quotas in Amazon Rekognition in the Amazon Rekognition Developer Guide.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.UntagResourceAsync(Amazon.Rekognition.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more tags from an Amazon Rekognition collection, stream processor,
            or Custom Labels model. 
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:UntagResource</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.UpdateDatasetEntriesAsync(Amazon.Rekognition.Model.UpdateDatasetEntriesRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates one or more entries (images) in a dataset. An entry is a JSON Line
            which contains the information for a single image, including the image location, assigned
            labels, and object location bounding boxes. For more information, see Image-Level
            labels in manifest files and Object localization in manifest files in the <i>Amazon
            Rekognition Custom Labels Developer Guide</i>. 
            
             
            <para>
            If the <code>source-ref</code> field in the JSON line references an existing image,
            the existing image in the dataset is updated. If <code>source-ref</code> field doesn't
            reference an existing image, the image is added as a new image to the dataset. 
            </para>
             
            <para>
            You specify the changes that you want to make in the <code>Changes</code> input parameter.
            There isn't a limit to the number JSON Lines that you can change, but the size of
            <code>Changes</code> must be less than 5MB.
            </para>
             
            <para>
             <code>UpdateDatasetEntries</code> returns immediatly, but the dataset update might
            take a while to complete. Use <a>DescribeDataset</a> to check the current status.
            The dataset updated successfully if the value of <code>Status</code> is <code>UPDATE_COMPLETE</code>.
            
            </para>
             
            <para>
            To check if any non-terminal errors occured, call <a>ListDatasetEntries</a> and check
            for the presence of <code>errors</code> lists in the JSON Lines.
            </para>
             
            <para>
            Dataset update fails if a terminal error occurs (<code>Status</code> = <code>UPDATE_FAILED</code>).
            Currently, you can't access the terminal error information from the Amazon Rekognition
            Custom Labels SDK. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:UpdateDatasetEntries</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDatasetEntries service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDatasetEntries service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.LimitExceededException">
            An Amazon Rekognition service limit was exceeded. For example, if you start too many
            Amazon Rekognition Video jobs concurrently, calls to start operations (<code>StartLabelDetection</code>,
            for example) will raise a <code>LimitExceededException</code> exception (HTTP status
            code: 400) until the number of concurrently running jobs is below the Amazon Rekognition
            service limit.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceInUseException">
            The specified resource is already being used.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/UpdateDatasetEntries">REST API Reference for UpdateDatasetEntries Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.UpdateStreamProcessorAsync(Amazon.Rekognition.Model.UpdateStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Allows you to update a stream processor. You can change some settings and regions
            of interest and delete certain parameters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateStreamProcessor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateStreamProcessor service method, as returned by Rekognition.</returns>
            <exception cref="T:Amazon.Rekognition.Model.AccessDeniedException">
            You are not authorized to perform the action.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InternalServerErrorException">
            Amazon Rekognition experienced a service issue. Try your call again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.InvalidParameterException">
            Input parameter violated a constraint. Validate your parameter before calling the
            API operation again.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            The number of requests exceeded your throughput limit. If you want to increase this
            limit, contact Amazon Rekognition.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            The resource specified in the request cannot be found.
            </exception>
            <exception cref="T:Amazon.Rekognition.Model.ThrottlingException">
            Amazon Rekognition is temporarily unable to process the request. Try your call again.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/UpdateStreamProcessor">REST API Reference for UpdateStreamProcessor Operation</seealso>
        </member>
    </members>
</doc>
